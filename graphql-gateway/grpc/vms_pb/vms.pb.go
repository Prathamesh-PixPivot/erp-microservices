// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        v5.28.2
// source: vms.proto

package vms_pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Vendor-related message types
type Vendor struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               string  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name             string  `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Category         string  `protobuf:"bytes,3,opt,name=category,proto3" json:"category,omitempty"`
	Service          string  `protobuf:"bytes,4,opt,name=service,proto3" json:"service,omitempty"`
	Industry         string  `protobuf:"bytes,5,opt,name=industry,proto3" json:"industry,omitempty"`
	Gstin            string  `protobuf:"bytes,6,opt,name=gstin,proto3" json:"gstin,omitempty"`
	Certifications   string  `protobuf:"bytes,7,opt,name=certifications,proto3" json:"certifications,omitempty"`
	Licenses         string  `protobuf:"bytes,8,opt,name=licenses,proto3" json:"licenses,omitempty"`
	IsCompliant      bool    `protobuf:"varint,9,opt,name=is_compliant,json=isCompliant,proto3" json:"is_compliant,omitempty"`
	PerformanceScore float32 `protobuf:"fixed32,10,opt,name=performance_score,json=performanceScore,proto3" json:"performance_score,omitempty"`
	RiskAssessment   string  `protobuf:"bytes,11,opt,name=risk_assessment,json=riskAssessment,proto3" json:"risk_assessment,omitempty"`
}

func (x *Vendor) Reset() {
	*x = Vendor{}
	mi := &file_vms_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Vendor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Vendor) ProtoMessage() {}

func (x *Vendor) ProtoReflect() protoreflect.Message {
	mi := &file_vms_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Vendor.ProtoReflect.Descriptor instead.
func (*Vendor) Descriptor() ([]byte, []int) {
	return file_vms_proto_rawDescGZIP(), []int{0}
}

func (x *Vendor) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Vendor) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Vendor) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *Vendor) GetService() string {
	if x != nil {
		return x.Service
	}
	return ""
}

func (x *Vendor) GetIndustry() string {
	if x != nil {
		return x.Industry
	}
	return ""
}

func (x *Vendor) GetGstin() string {
	if x != nil {
		return x.Gstin
	}
	return ""
}

func (x *Vendor) GetCertifications() string {
	if x != nil {
		return x.Certifications
	}
	return ""
}

func (x *Vendor) GetLicenses() string {
	if x != nil {
		return x.Licenses
	}
	return ""
}

func (x *Vendor) GetIsCompliant() bool {
	if x != nil {
		return x.IsCompliant
	}
	return false
}

func (x *Vendor) GetPerformanceScore() float32 {
	if x != nil {
		return x.PerformanceScore
	}
	return 0
}

func (x *Vendor) GetRiskAssessment() string {
	if x != nil {
		return x.RiskAssessment
	}
	return ""
}

type CreateVendorRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Vendor *Vendor `protobuf:"bytes,1,opt,name=vendor,proto3" json:"vendor,omitempty"`
}

func (x *CreateVendorRequest) Reset() {
	*x = CreateVendorRequest{}
	mi := &file_vms_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateVendorRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateVendorRequest) ProtoMessage() {}

func (x *CreateVendorRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vms_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateVendorRequest.ProtoReflect.Descriptor instead.
func (*CreateVendorRequest) Descriptor() ([]byte, []int) {
	return file_vms_proto_rawDescGZIP(), []int{1}
}

func (x *CreateVendorRequest) GetVendor() *Vendor {
	if x != nil {
		return x.Vendor
	}
	return nil
}

type GetVendorByIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetVendorByIDRequest) Reset() {
	*x = GetVendorByIDRequest{}
	mi := &file_vms_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetVendorByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVendorByIDRequest) ProtoMessage() {}

func (x *GetVendorByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vms_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVendorByIDRequest.ProtoReflect.Descriptor instead.
func (*GetVendorByIDRequest) Descriptor() ([]byte, []int) {
	return file_vms_proto_rawDescGZIP(), []int{2}
}

func (x *GetVendorByIDRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type UpdateVendorRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Vendor *Vendor `protobuf:"bytes,1,opt,name=vendor,proto3" json:"vendor,omitempty"`
}

func (x *UpdateVendorRequest) Reset() {
	*x = UpdateVendorRequest{}
	mi := &file_vms_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateVendorRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateVendorRequest) ProtoMessage() {}

func (x *UpdateVendorRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vms_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateVendorRequest.ProtoReflect.Descriptor instead.
func (*UpdateVendorRequest) Descriptor() ([]byte, []int) {
	return file_vms_proto_rawDescGZIP(), []int{3}
}

func (x *UpdateVendorRequest) GetVendor() *Vendor {
	if x != nil {
		return x.Vendor
	}
	return nil
}

type DeleteVendorRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteVendorRequest) Reset() {
	*x = DeleteVendorRequest{}
	mi := &file_vms_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteVendorRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteVendorRequest) ProtoMessage() {}

func (x *DeleteVendorRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vms_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteVendorRequest.ProtoReflect.Descriptor instead.
func (*DeleteVendorRequest) Descriptor() ([]byte, []int) {
	return file_vms_proto_rawDescGZIP(), []int{4}
}

func (x *DeleteVendorRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DeleteVendorResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *DeleteVendorResponse) Reset() {
	*x = DeleteVendorResponse{}
	mi := &file_vms_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteVendorResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteVendorResponse) ProtoMessage() {}

func (x *DeleteVendorResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vms_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteVendorResponse.ProtoReflect.Descriptor instead.
func (*DeleteVendorResponse) Descriptor() ([]byte, []int) {
	return file_vms_proto_rawDescGZIP(), []int{5}
}

func (x *DeleteVendorResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type VendorResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Vendor *Vendor `protobuf:"bytes,1,opt,name=vendor,proto3" json:"vendor,omitempty"`
}

func (x *VendorResponse) Reset() {
	*x = VendorResponse{}
	mi := &file_vms_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VendorResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VendorResponse) ProtoMessage() {}

func (x *VendorResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vms_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VendorResponse.ProtoReflect.Descriptor instead.
func (*VendorResponse) Descriptor() ([]byte, []int) {
	return file_vms_proto_rawDescGZIP(), []int{6}
}

func (x *VendorResponse) GetVendor() *Vendor {
	if x != nil {
		return x.Vendor
	}
	return nil
}

type SearchVendorsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Query string `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
}

func (x *SearchVendorsRequest) Reset() {
	*x = SearchVendorsRequest{}
	mi := &file_vms_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchVendorsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchVendorsRequest) ProtoMessage() {}

func (x *SearchVendorsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vms_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchVendorsRequest.ProtoReflect.Descriptor instead.
func (*SearchVendorsRequest) Descriptor() ([]byte, []int) {
	return file_vms_proto_rawDescGZIP(), []int{7}
}

func (x *SearchVendorsRequest) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

type SearchVendorsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Vendors []*Vendor `protobuf:"bytes,1,rep,name=vendors,proto3" json:"vendors,omitempty"`
}

func (x *SearchVendorsResponse) Reset() {
	*x = SearchVendorsResponse{}
	mi := &file_vms_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchVendorsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchVendorsResponse) ProtoMessage() {}

func (x *SearchVendorsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vms_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchVendorsResponse.ProtoReflect.Descriptor instead.
func (*SearchVendorsResponse) Descriptor() ([]byte, []int) {
	return file_vms_proto_rawDescGZIP(), []int{8}
}

func (x *SearchVendorsResponse) GetVendors() []*Vendor {
	if x != nil {
		return x.Vendors
	}
	return nil
}

// Purchase Order related message types
type PurchaseOrder struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	VendorId     string                 `protobuf:"bytes,2,opt,name=vendor_id,json=vendorId,proto3" json:"vendor_id,omitempty"`
	OrderDetails string                 `protobuf:"bytes,3,opt,name=order_details,json=orderDetails,proto3" json:"order_details,omitempty"`
	Status       string                 `protobuf:"bytes,4,opt,name=status,proto3" json:"status,omitempty"`
	DeliveryDate *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=delivery_date,json=deliveryDate,proto3" json:"delivery_date,omitempty"`
	ReceivedDate *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=received_date,json=receivedDate,proto3" json:"received_date,omitempty"`
}

func (x *PurchaseOrder) Reset() {
	*x = PurchaseOrder{}
	mi := &file_vms_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PurchaseOrder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PurchaseOrder) ProtoMessage() {}

func (x *PurchaseOrder) ProtoReflect() protoreflect.Message {
	mi := &file_vms_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PurchaseOrder.ProtoReflect.Descriptor instead.
func (*PurchaseOrder) Descriptor() ([]byte, []int) {
	return file_vms_proto_rawDescGZIP(), []int{9}
}

func (x *PurchaseOrder) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *PurchaseOrder) GetVendorId() string {
	if x != nil {
		return x.VendorId
	}
	return ""
}

func (x *PurchaseOrder) GetOrderDetails() string {
	if x != nil {
		return x.OrderDetails
	}
	return ""
}

func (x *PurchaseOrder) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *PurchaseOrder) GetDeliveryDate() *timestamppb.Timestamp {
	if x != nil {
		return x.DeliveryDate
	}
	return nil
}

func (x *PurchaseOrder) GetReceivedDate() *timestamppb.Timestamp {
	if x != nil {
		return x.ReceivedDate
	}
	return nil
}

type CreatePurchaseOrderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VendorId     string                 `protobuf:"bytes,1,opt,name=vendor_id,json=vendorId,proto3" json:"vendor_id,omitempty"`
	OrderDetails string                 `protobuf:"bytes,2,opt,name=order_details,json=orderDetails,proto3" json:"order_details,omitempty"`
	DeliveryDate *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=delivery_date,json=deliveryDate,proto3" json:"delivery_date,omitempty"`
}

func (x *CreatePurchaseOrderRequest) Reset() {
	*x = CreatePurchaseOrderRequest{}
	mi := &file_vms_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreatePurchaseOrderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePurchaseOrderRequest) ProtoMessage() {}

func (x *CreatePurchaseOrderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vms_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePurchaseOrderRequest.ProtoReflect.Descriptor instead.
func (*CreatePurchaseOrderRequest) Descriptor() ([]byte, []int) {
	return file_vms_proto_rawDescGZIP(), []int{10}
}

func (x *CreatePurchaseOrderRequest) GetVendorId() string {
	if x != nil {
		return x.VendorId
	}
	return ""
}

func (x *CreatePurchaseOrderRequest) GetOrderDetails() string {
	if x != nil {
		return x.OrderDetails
	}
	return ""
}

func (x *CreatePurchaseOrderRequest) GetDeliveryDate() *timestamppb.Timestamp {
	if x != nil {
		return x.DeliveryDate
	}
	return nil
}

type GetPurchaseOrderByIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetPurchaseOrderByIDRequest) Reset() {
	*x = GetPurchaseOrderByIDRequest{}
	mi := &file_vms_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPurchaseOrderByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPurchaseOrderByIDRequest) ProtoMessage() {}

func (x *GetPurchaseOrderByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vms_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPurchaseOrderByIDRequest.ProtoReflect.Descriptor instead.
func (*GetPurchaseOrderByIDRequest) Descriptor() ([]byte, []int) {
	return file_vms_proto_rawDescGZIP(), []int{11}
}

func (x *GetPurchaseOrderByIDRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type UpdatePurchaseOrderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PurchaseOrder *PurchaseOrder `protobuf:"bytes,1,opt,name=purchase_order,json=purchaseOrder,proto3" json:"purchase_order,omitempty"`
}

func (x *UpdatePurchaseOrderRequest) Reset() {
	*x = UpdatePurchaseOrderRequest{}
	mi := &file_vms_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdatePurchaseOrderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePurchaseOrderRequest) ProtoMessage() {}

func (x *UpdatePurchaseOrderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vms_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePurchaseOrderRequest.ProtoReflect.Descriptor instead.
func (*UpdatePurchaseOrderRequest) Descriptor() ([]byte, []int) {
	return file_vms_proto_rawDescGZIP(), []int{12}
}

func (x *UpdatePurchaseOrderRequest) GetPurchaseOrder() *PurchaseOrder {
	if x != nil {
		return x.PurchaseOrder
	}
	return nil
}

type DeletePurchaseOrderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeletePurchaseOrderRequest) Reset() {
	*x = DeletePurchaseOrderRequest{}
	mi := &file_vms_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeletePurchaseOrderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePurchaseOrderRequest) ProtoMessage() {}

func (x *DeletePurchaseOrderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vms_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePurchaseOrderRequest.ProtoReflect.Descriptor instead.
func (*DeletePurchaseOrderRequest) Descriptor() ([]byte, []int) {
	return file_vms_proto_rawDescGZIP(), []int{13}
}

func (x *DeletePurchaseOrderRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DeletePurchaseOrderResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *DeletePurchaseOrderResponse) Reset() {
	*x = DeletePurchaseOrderResponse{}
	mi := &file_vms_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeletePurchaseOrderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePurchaseOrderResponse) ProtoMessage() {}

func (x *DeletePurchaseOrderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vms_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePurchaseOrderResponse.ProtoReflect.Descriptor instead.
func (*DeletePurchaseOrderResponse) Descriptor() ([]byte, []int) {
	return file_vms_proto_rawDescGZIP(), []int{14}
}

func (x *DeletePurchaseOrderResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type PurchaseOrderResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	VendorId     string `protobuf:"bytes,2,opt,name=vendor_id,json=vendorId,proto3" json:"vendor_id,omitempty"`
	OrderDetails string `protobuf:"bytes,3,opt,name=order_details,json=orderDetails,proto3" json:"order_details,omitempty"`
	Status       string `protobuf:"bytes,4,opt,name=status,proto3" json:"status,omitempty"`
	DeliveryDate string `protobuf:"bytes,5,opt,name=delivery_date,json=deliveryDate,proto3" json:"delivery_date,omitempty"`
	ReceivedDate string `protobuf:"bytes,6,opt,name=received_date,json=receivedDate,proto3" json:"received_date,omitempty"`
}

func (x *PurchaseOrderResponse) Reset() {
	*x = PurchaseOrderResponse{}
	mi := &file_vms_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PurchaseOrderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PurchaseOrderResponse) ProtoMessage() {}

func (x *PurchaseOrderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vms_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PurchaseOrderResponse.ProtoReflect.Descriptor instead.
func (*PurchaseOrderResponse) Descriptor() ([]byte, []int) {
	return file_vms_proto_rawDescGZIP(), []int{15}
}

func (x *PurchaseOrderResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *PurchaseOrderResponse) GetVendorId() string {
	if x != nil {
		return x.VendorId
	}
	return ""
}

func (x *PurchaseOrderResponse) GetOrderDetails() string {
	if x != nil {
		return x.OrderDetails
	}
	return ""
}

func (x *PurchaseOrderResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *PurchaseOrderResponse) GetDeliveryDate() string {
	if x != nil {
		return x.DeliveryDate
	}
	return ""
}

func (x *PurchaseOrderResponse) GetReceivedDate() string {
	if x != nil {
		return x.ReceivedDate
	}
	return ""
}

type TrackOrderStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *TrackOrderStatusRequest) Reset() {
	*x = TrackOrderStatusRequest{}
	mi := &file_vms_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TrackOrderStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrackOrderStatusRequest) ProtoMessage() {}

func (x *TrackOrderStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vms_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrackOrderStatusRequest.ProtoReflect.Descriptor instead.
func (*TrackOrderStatusRequest) Descriptor() ([]byte, []int) {
	return file_vms_proto_rawDescGZIP(), []int{16}
}

func (x *TrackOrderStatusRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type ReceiveGoodsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ReceivedDate *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=received_date,json=receivedDate,proto3" json:"received_date,omitempty"`
}

func (x *ReceiveGoodsRequest) Reset() {
	*x = ReceiveGoodsRequest{}
	mi := &file_vms_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReceiveGoodsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReceiveGoodsRequest) ProtoMessage() {}

func (x *ReceiveGoodsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vms_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReceiveGoodsRequest.ProtoReflect.Descriptor instead.
func (*ReceiveGoodsRequest) Descriptor() ([]byte, []int) {
	return file_vms_proto_rawDescGZIP(), []int{17}
}

func (x *ReceiveGoodsRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ReceiveGoodsRequest) GetReceivedDate() *timestamppb.Timestamp {
	if x != nil {
		return x.ReceivedDate
	}
	return nil
}

type ReceiveGoodsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *ReceiveGoodsResponse) Reset() {
	*x = ReceiveGoodsResponse{}
	mi := &file_vms_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReceiveGoodsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReceiveGoodsResponse) ProtoMessage() {}

func (x *ReceiveGoodsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vms_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReceiveGoodsResponse.ProtoReflect.Descriptor instead.
func (*ReceiveGoodsResponse) Descriptor() ([]byte, []int) {
	return file_vms_proto_rawDescGZIP(), []int{18}
}

func (x *ReceiveGoodsResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// Performance-related message types
type VendorPerformance struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	VendorId    string                 `protobuf:"bytes,2,opt,name=vendor_id,json=vendorId,proto3" json:"vendor_id,omitempty"`
	Score       float32                `protobuf:"fixed32,3,opt,name=score,proto3" json:"score,omitempty"`
	RiskLevel   string                 `protobuf:"bytes,4,opt,name=risk_level,json=riskLevel,proto3" json:"risk_level,omitempty"`
	EvaluatedAt *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=evaluated_at,json=evaluatedAt,proto3" json:"evaluated_at,omitempty"`
}

func (x *VendorPerformance) Reset() {
	*x = VendorPerformance{}
	mi := &file_vms_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VendorPerformance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VendorPerformance) ProtoMessage() {}

func (x *VendorPerformance) ProtoReflect() protoreflect.Message {
	mi := &file_vms_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VendorPerformance.ProtoReflect.Descriptor instead.
func (*VendorPerformance) Descriptor() ([]byte, []int) {
	return file_vms_proto_rawDescGZIP(), []int{19}
}

func (x *VendorPerformance) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *VendorPerformance) GetVendorId() string {
	if x != nil {
		return x.VendorId
	}
	return ""
}

func (x *VendorPerformance) GetScore() float32 {
	if x != nil {
		return x.Score
	}
	return 0
}

func (x *VendorPerformance) GetRiskLevel() string {
	if x != nil {
		return x.RiskLevel
	}
	return ""
}

func (x *VendorPerformance) GetEvaluatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.EvaluatedAt
	}
	return nil
}

type RecordPerformanceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VendorId    string                 `protobuf:"bytes,1,opt,name=vendor_id,json=vendorId,proto3" json:"vendor_id,omitempty"`
	Score       float32                `protobuf:"fixed32,2,opt,name=score,proto3" json:"score,omitempty"`
	RiskLevel   string                 `protobuf:"bytes,3,opt,name=risk_level,json=riskLevel,proto3" json:"risk_level,omitempty"`
	EvaluatedAt *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=evaluated_at,json=evaluatedAt,proto3" json:"evaluated_at,omitempty"`
}

func (x *RecordPerformanceRequest) Reset() {
	*x = RecordPerformanceRequest{}
	mi := &file_vms_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RecordPerformanceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecordPerformanceRequest) ProtoMessage() {}

func (x *RecordPerformanceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vms_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecordPerformanceRequest.ProtoReflect.Descriptor instead.
func (*RecordPerformanceRequest) Descriptor() ([]byte, []int) {
	return file_vms_proto_rawDescGZIP(), []int{20}
}

func (x *RecordPerformanceRequest) GetVendorId() string {
	if x != nil {
		return x.VendorId
	}
	return ""
}

func (x *RecordPerformanceRequest) GetScore() float32 {
	if x != nil {
		return x.Score
	}
	return 0
}

func (x *RecordPerformanceRequest) GetRiskLevel() string {
	if x != nil {
		return x.RiskLevel
	}
	return ""
}

func (x *RecordPerformanceRequest) GetEvaluatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.EvaluatedAt
	}
	return nil
}

type GetPerformanceByIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetPerformanceByIDRequest) Reset() {
	*x = GetPerformanceByIDRequest{}
	mi := &file_vms_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPerformanceByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPerformanceByIDRequest) ProtoMessage() {}

func (x *GetPerformanceByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vms_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPerformanceByIDRequest.ProtoReflect.Descriptor instead.
func (*GetPerformanceByIDRequest) Descriptor() ([]byte, []int) {
	return file_vms_proto_rawDescGZIP(), []int{21}
}

func (x *GetPerformanceByIDRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type UpdatePerformanceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Performance *VendorPerformance `protobuf:"bytes,1,opt,name=performance,proto3" json:"performance,omitempty"`
}

func (x *UpdatePerformanceRequest) Reset() {
	*x = UpdatePerformanceRequest{}
	mi := &file_vms_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdatePerformanceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePerformanceRequest) ProtoMessage() {}

func (x *UpdatePerformanceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vms_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePerformanceRequest.ProtoReflect.Descriptor instead.
func (*UpdatePerformanceRequest) Descriptor() ([]byte, []int) {
	return file_vms_proto_rawDescGZIP(), []int{22}
}

func (x *UpdatePerformanceRequest) GetPerformance() *VendorPerformance {
	if x != nil {
		return x.Performance
	}
	return nil
}

type DeletePerformanceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeletePerformanceRequest) Reset() {
	*x = DeletePerformanceRequest{}
	mi := &file_vms_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeletePerformanceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePerformanceRequest) ProtoMessage() {}

func (x *DeletePerformanceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vms_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePerformanceRequest.ProtoReflect.Descriptor instead.
func (*DeletePerformanceRequest) Descriptor() ([]byte, []int) {
	return file_vms_proto_rawDescGZIP(), []int{23}
}

func (x *DeletePerformanceRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DeletePerformanceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *DeletePerformanceResponse) Reset() {
	*x = DeletePerformanceResponse{}
	mi := &file_vms_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeletePerformanceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePerformanceResponse) ProtoMessage() {}

func (x *DeletePerformanceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vms_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePerformanceResponse.ProtoReflect.Descriptor instead.
func (*DeletePerformanceResponse) Descriptor() ([]byte, []int) {
	return file_vms_proto_rawDescGZIP(), []int{24}
}

func (x *DeletePerformanceResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type PerformanceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VendorId    string  `protobuf:"bytes,1,opt,name=vendor_id,json=vendorId,proto3" json:"vendor_id,omitempty"`
	Score       float32 `protobuf:"fixed32,2,opt,name=score,proto3" json:"score,omitempty"`
	RiskLevel   string  `protobuf:"bytes,3,opt,name=risk_level,json=riskLevel,proto3" json:"risk_level,omitempty"`
	EvaluatedAt string  `protobuf:"bytes,4,opt,name=evaluated_at,json=evaluatedAt,proto3" json:"evaluated_at,omitempty"`
}

func (x *PerformanceResponse) Reset() {
	*x = PerformanceResponse{}
	mi := &file_vms_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PerformanceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PerformanceResponse) ProtoMessage() {}

func (x *PerformanceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vms_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PerformanceResponse.ProtoReflect.Descriptor instead.
func (*PerformanceResponse) Descriptor() ([]byte, []int) {
	return file_vms_proto_rawDescGZIP(), []int{25}
}

func (x *PerformanceResponse) GetVendorId() string {
	if x != nil {
		return x.VendorId
	}
	return ""
}

func (x *PerformanceResponse) GetScore() float32 {
	if x != nil {
		return x.Score
	}
	return 0
}

func (x *PerformanceResponse) GetRiskLevel() string {
	if x != nil {
		return x.RiskLevel
	}
	return ""
}

func (x *PerformanceResponse) GetEvaluatedAt() string {
	if x != nil {
		return x.EvaluatedAt
	}
	return ""
}

// Payment-related message types
type Payment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	PurchaseOrderId string                 `protobuf:"bytes,2,opt,name=purchase_order_id,json=purchaseOrderId,proto3" json:"purchase_order_id,omitempty"`
	Amount          float32                `protobuf:"fixed32,3,opt,name=amount,proto3" json:"amount,omitempty"`
	Status          string                 `protobuf:"bytes,4,opt,name=status,proto3" json:"status,omitempty"`
	PaymentTerms    string                 `protobuf:"bytes,5,opt,name=payment_terms,json=paymentTerms,proto3" json:"payment_terms,omitempty"`
	PaidAt          *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=paid_at,json=paidAt,proto3" json:"paid_at,omitempty"`
}

func (x *Payment) Reset() {
	*x = Payment{}
	mi := &file_vms_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Payment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Payment) ProtoMessage() {}

func (x *Payment) ProtoReflect() protoreflect.Message {
	mi := &file_vms_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Payment.ProtoReflect.Descriptor instead.
func (*Payment) Descriptor() ([]byte, []int) {
	return file_vms_proto_rawDescGZIP(), []int{26}
}

func (x *Payment) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Payment) GetPurchaseOrderId() string {
	if x != nil {
		return x.PurchaseOrderId
	}
	return ""
}

func (x *Payment) GetAmount() float32 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *Payment) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *Payment) GetPaymentTerms() string {
	if x != nil {
		return x.PaymentTerms
	}
	return ""
}

func (x *Payment) GetPaidAt() *timestamppb.Timestamp {
	if x != nil {
		return x.PaidAt
	}
	return nil
}

type ProcessInvoiceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PurchaseOrderId string  `protobuf:"bytes,1,opt,name=purchase_order_id,json=purchaseOrderId,proto3" json:"purchase_order_id,omitempty"`
	Amount          float32 `protobuf:"fixed32,2,opt,name=amount,proto3" json:"amount,omitempty"`
	PaymentTerms    string  `protobuf:"bytes,3,opt,name=payment_terms,json=paymentTerms,proto3" json:"payment_terms,omitempty"`
}

func (x *ProcessInvoiceRequest) Reset() {
	*x = ProcessInvoiceRequest{}
	mi := &file_vms_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProcessInvoiceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessInvoiceRequest) ProtoMessage() {}

func (x *ProcessInvoiceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vms_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessInvoiceRequest.ProtoReflect.Descriptor instead.
func (*ProcessInvoiceRequest) Descriptor() ([]byte, []int) {
	return file_vms_proto_rawDescGZIP(), []int{27}
}

func (x *ProcessInvoiceRequest) GetPurchaseOrderId() string {
	if x != nil {
		return x.PurchaseOrderId
	}
	return ""
}

func (x *ProcessInvoiceRequest) GetAmount() float32 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *ProcessInvoiceRequest) GetPaymentTerms() string {
	if x != nil {
		return x.PaymentTerms
	}
	return ""
}

type UpdatePaymentStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Status string `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *UpdatePaymentStatusRequest) Reset() {
	*x = UpdatePaymentStatusRequest{}
	mi := &file_vms_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdatePaymentStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePaymentStatusRequest) ProtoMessage() {}

func (x *UpdatePaymentStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vms_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePaymentStatusRequest.ProtoReflect.Descriptor instead.
func (*UpdatePaymentStatusRequest) Descriptor() ([]byte, []int) {
	return file_vms_proto_rawDescGZIP(), []int{28}
}

func (x *UpdatePaymentStatusRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdatePaymentStatusRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type GetPaymentByIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetPaymentByIDRequest) Reset() {
	*x = GetPaymentByIDRequest{}
	mi := &file_vms_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPaymentByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPaymentByIDRequest) ProtoMessage() {}

func (x *GetPaymentByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vms_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPaymentByIDRequest.ProtoReflect.Descriptor instead.
func (*GetPaymentByIDRequest) Descriptor() ([]byte, []int) {
	return file_vms_proto_rawDescGZIP(), []int{29}
}

func (x *GetPaymentByIDRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DeletePaymentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeletePaymentRequest) Reset() {
	*x = DeletePaymentRequest{}
	mi := &file_vms_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeletePaymentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePaymentRequest) ProtoMessage() {}

func (x *DeletePaymentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vms_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePaymentRequest.ProtoReflect.Descriptor instead.
func (*DeletePaymentRequest) Descriptor() ([]byte, []int) {
	return file_vms_proto_rawDescGZIP(), []int{30}
}

func (x *DeletePaymentRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DeletePaymentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *DeletePaymentResponse) Reset() {
	*x = DeletePaymentResponse{}
	mi := &file_vms_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeletePaymentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePaymentResponse) ProtoMessage() {}

func (x *DeletePaymentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vms_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePaymentResponse.ProtoReflect.Descriptor instead.
func (*DeletePaymentResponse) Descriptor() ([]byte, []int) {
	return file_vms_proto_rawDescGZIP(), []int{31}
}

func (x *DeletePaymentResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type PaymentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              string  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	PurchaseOrderId string  `protobuf:"bytes,2,opt,name=purchase_order_id,json=purchaseOrderId,proto3" json:"purchase_order_id,omitempty"`
	Amount          float32 `protobuf:"fixed32,3,opt,name=amount,proto3" json:"amount,omitempty"`
	Status          string  `protobuf:"bytes,4,opt,name=status,proto3" json:"status,omitempty"`
	PaymentTerms    string  `protobuf:"bytes,5,opt,name=payment_terms,json=paymentTerms,proto3" json:"payment_terms,omitempty"`
	PaidAt          string  `protobuf:"bytes,6,opt,name=paid_at,json=paidAt,proto3" json:"paid_at,omitempty"`
}

func (x *PaymentResponse) Reset() {
	*x = PaymentResponse{}
	mi := &file_vms_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PaymentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaymentResponse) ProtoMessage() {}

func (x *PaymentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vms_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaymentResponse.ProtoReflect.Descriptor instead.
func (*PaymentResponse) Descriptor() ([]byte, []int) {
	return file_vms_proto_rawDescGZIP(), []int{32}
}

func (x *PaymentResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *PaymentResponse) GetPurchaseOrderId() string {
	if x != nil {
		return x.PurchaseOrderId
	}
	return ""
}

func (x *PaymentResponse) GetAmount() float32 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *PaymentResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *PaymentResponse) GetPaymentTerms() string {
	if x != nil {
		return x.PaymentTerms
	}
	return ""
}

func (x *PaymentResponse) GetPaidAt() string {
	if x != nil {
		return x.PaidAt
	}
	return ""
}

var File_vms_proto protoreflect.FileDescriptor

var file_vms_proto_rawDesc = []byte{
	0x0a, 0x09, 0x76, 0x6d, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x03, 0x76, 0x6d, 0x73,
	0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0xd1, 0x02, 0x0a, 0x06, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x18, 0x0a, 0x07,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6e, 0x64, 0x75, 0x73, 0x74,
	0x72, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6e, 0x64, 0x75, 0x73, 0x74,
	0x72, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x67, 0x73, 0x74, 0x69, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x67, 0x73, 0x74, 0x69, 0x6e, 0x12, 0x26, 0x0a, 0x0e, 0x63, 0x65, 0x72, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x73, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x73, 0x12, 0x21, 0x0a, 0x0c,
	0x69, 0x73, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x69, 0x61, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0b, 0x69, 0x73, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x69, 0x61, 0x6e, 0x74, 0x12,
	0x2b, 0x0a, 0x11, 0x70, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x73,
	0x63, 0x6f, 0x72, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x02, 0x52, 0x10, 0x70, 0x65, 0x72, 0x66,
	0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x27, 0x0a, 0x0f,
	0x72, 0x69, 0x73, 0x6b, 0x5f, 0x61, 0x73, 0x73, 0x65, 0x73, 0x73, 0x6d, 0x65, 0x6e, 0x74, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x72, 0x69, 0x73, 0x6b, 0x41, 0x73, 0x73, 0x65, 0x73,
	0x73, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x3a, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x56,
	0x65, 0x6e, 0x64, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x06,
	0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x76,
	0x6d, 0x73, 0x2e, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x52, 0x06, 0x76, 0x65, 0x6e, 0x64, 0x6f,
	0x72, 0x22, 0x26, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x42, 0x79,
	0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x3a, 0x0a, 0x13, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x23, 0x0a, 0x06, 0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0b, 0x2e, 0x76, 0x6d, 0x73, 0x2e, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x52, 0x06, 0x76,
	0x65, 0x6e, 0x64, 0x6f, 0x72, 0x22, 0x25, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x56,
	0x65, 0x6e, 0x64, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x30, 0x0a, 0x14,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x35,
	0x0a, 0x0e, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x23, 0x0a, 0x06, 0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0b, 0x2e, 0x76, 0x6d, 0x73, 0x2e, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x52, 0x06, 0x76,
	0x65, 0x6e, 0x64, 0x6f, 0x72, 0x22, 0x2c, 0x0a, 0x14, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x56,
	0x65, 0x6e, 0x64, 0x6f, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x71, 0x75,
	0x65, 0x72, 0x79, 0x22, 0x3e, 0x0a, 0x15, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x56, 0x65, 0x6e,
	0x64, 0x6f, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x07,
	0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e,
	0x76, 0x6d, 0x73, 0x2e, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x52, 0x07, 0x76, 0x65, 0x6e, 0x64,
	0x6f, 0x72, 0x73, 0x22, 0xfb, 0x01, 0x0a, 0x0d, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72,
	0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x64, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x3f, 0x0a, 0x0d, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x64, 0x61, 0x74, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x0c, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x44, 0x61, 0x74, 0x65,
	0x12, 0x3f, 0x0a, 0x0d, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x5f, 0x64, 0x61, 0x74,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x0c, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x44, 0x61, 0x74,
	0x65, 0x22, 0x9f, 0x01, 0x0a, 0x1a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x75, 0x72, 0x63,
	0x68, 0x61, 0x73, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1b, 0x0a, 0x09, 0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x23, 0x0a,
	0x0d, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x73, 0x12, 0x3f, 0x0a, 0x0d, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x64,
	0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0c, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x44,
	0x61, 0x74, 0x65, 0x22, 0x2d, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61,
	0x73, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x22, 0x57, 0x0a, 0x1a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x75, 0x72, 0x63,
	0x68, 0x61, 0x73, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x39, 0x0a, 0x0e, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x5f, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x76, 0x6d, 0x73, 0x2e, 0x50,
	0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x0d, 0x70, 0x75,
	0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x22, 0x2c, 0x0a, 0x1a, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x37, 0x0a, 0x1b, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x22, 0xcb, 0x01, 0x0a, 0x15, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09,
	0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65,
	0x72, 0x79, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64,
	0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x44, 0x61, 0x74, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x72,
	0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x44, 0x61, 0x74, 0x65,
	0x22, 0x29, 0x0a, 0x17, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x66, 0x0a, 0x13, 0x52,
	0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x3f, 0x0a, 0x0d, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x5f, 0x64,
	0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0c, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x44,
	0x61, 0x74, 0x65, 0x22, 0x30, 0x0a, 0x14, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x47, 0x6f,
	0x6f, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0xb4, 0x01, 0x0a, 0x11, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72,
	0x50, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x76,
	0x65, 0x6e, 0x64, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x72,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x1d,
	0x0a, 0x0a, 0x72, 0x69, 0x73, 0x6b, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x72, 0x69, 0x73, 0x6b, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x3d, 0x0a,
	0x0c, 0x65, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x0b, 0x65, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xab, 0x01, 0x0a,
	0x18, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x50, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x6e,
	0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x76, 0x65, 0x6e,
	0x64, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x76, 0x65,
	0x6e, 0x64, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x1d, 0x0a, 0x0a,
	0x72, 0x69, 0x73, 0x6b, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x72, 0x69, 0x73, 0x6b, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x3d, 0x0a, 0x0c, 0x65,
	0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b, 0x65,
	0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x2b, 0x0a, 0x19, 0x47, 0x65,
	0x74, 0x50, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x42, 0x79, 0x49, 0x44,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x54, 0x0a, 0x18, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x50, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x38, 0x0a, 0x0b, 0x70, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x6e,
	0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x76, 0x6d, 0x73, 0x2e, 0x56,
	0x65, 0x6e, 0x64, 0x6f, 0x72, 0x50, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65,
	0x52, 0x0b, 0x70, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x22, 0x2a, 0x0a,
	0x18, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x6e,
	0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x35, 0x0a, 0x19, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x50, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x22, 0x8a, 0x01, 0x0a, 0x13, 0x50, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x76, 0x65, 0x6e, 0x64,
	0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x76, 0x65, 0x6e,
	0x64, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x72,
	0x69, 0x73, 0x6b, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x72, 0x69, 0x73, 0x6b, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x21, 0x0a, 0x0c, 0x65, 0x76,
	0x61, 0x6c, 0x75, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x65, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xcf, 0x01,
	0x0a, 0x07, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x2a, 0x0a, 0x11, 0x70, 0x75, 0x72,
	0x63, 0x68, 0x61, 0x73, 0x65, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x5f, 0x74, 0x65, 0x72, 0x6d, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x65, 0x72, 0x6d, 0x73, 0x12, 0x33, 0x0a, 0x07, 0x70, 0x61,
	0x69, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x06, 0x70, 0x61, 0x69, 0x64, 0x41, 0x74, 0x22,
	0x80, 0x01, 0x0a, 0x15, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x49, 0x6e, 0x76, 0x6f, 0x69,
	0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2a, 0x0a, 0x11, 0x70, 0x75, 0x72,
	0x63, 0x68, 0x61, 0x73, 0x65, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x23, 0x0a,
	0x0d, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x65, 0x72, 0x6d, 0x73, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x65, 0x72,
	0x6d, 0x73, 0x22, 0x44, 0x0a, 0x1a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x27, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x50,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x22, 0x26, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x31, 0x0a, 0x15, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0xbb, 0x01, 0x0a,
	0x0f, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x2a, 0x0a, 0x11, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x5f, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x70, 0x75, 0x72,
	0x63, 0x68, 0x61, 0x73, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x61, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x23, 0x0a, 0x0d,
	0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x65, 0x72, 0x6d, 0x73, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x65, 0x72, 0x6d,
	0x73, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x61, 0x69, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x69, 0x64, 0x41, 0x74, 0x32, 0xdb, 0x02, 0x0a, 0x0d, 0x56,
	0x65, 0x6e, 0x64, 0x6f, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x3d, 0x0a, 0x0c,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x12, 0x18, 0x2e, 0x76,
	0x6d, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x76, 0x6d, 0x73, 0x2e, 0x56, 0x65, 0x6e,
	0x64, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x0d, 0x47,
	0x65, 0x74, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x42, 0x79, 0x49, 0x44, 0x12, 0x19, 0x2e, 0x76,
	0x6d, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x42, 0x79, 0x49, 0x44,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x76, 0x6d, 0x73, 0x2e, 0x56, 0x65,
	0x6e, 0x64, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x0c,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x12, 0x18, 0x2e, 0x76,
	0x6d, 0x73, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x76, 0x6d, 0x73, 0x2e, 0x56, 0x65, 0x6e,
	0x64, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x43, 0x0a, 0x0c, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x12, 0x18, 0x2e, 0x76, 0x6d,
	0x73, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x76, 0x6d, 0x73, 0x2e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x46, 0x0a, 0x0d, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72,
	0x73, 0x12, 0x19, 0x2e, 0x76, 0x6d, 0x73, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x56, 0x65,
	0x6e, 0x64, 0x6f, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x76,
	0x6d, 0x73, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0x81, 0x04, 0x0a, 0x14, 0x50, 0x75, 0x72,
	0x63, 0x68, 0x61, 0x73, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x52, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x75, 0x72, 0x63, 0x68,
	0x61, 0x73, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x1f, 0x2e, 0x76, 0x6d, 0x73, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x76, 0x6d, 0x73, 0x2e,
	0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x54, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x50, 0x75, 0x72, 0x63,
	0x68, 0x61, 0x73, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x49, 0x44, 0x12, 0x20, 0x2e,
	0x76, 0x6d, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1a, 0x2e, 0x76, 0x6d, 0x73, 0x2e, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x52, 0x0a, 0x13, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x12, 0x1f, 0x2e, 0x76, 0x6d, 0x73, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50,
	0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x76, 0x6d, 0x73, 0x2e, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61,
	0x73, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x58, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73,
	0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x1f, 0x2e, 0x76, 0x6d, 0x73, 0x2e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x76, 0x6d, 0x73, 0x2e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4c, 0x0a, 0x10, 0x54, 0x72, 0x61,
	0x63, 0x6b, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1c, 0x2e,
	0x76, 0x6d, 0x73, 0x2e, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x76, 0x6d,
	0x73, 0x2e, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x43, 0x0a, 0x0c, 0x52, 0x65, 0x63, 0x65, 0x69,
	0x76, 0x65, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x12, 0x18, 0x2e, 0x76, 0x6d, 0x73, 0x2e, 0x52, 0x65,
	0x63, 0x65, 0x69, 0x76, 0x65, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x19, 0x2e, 0x76, 0x6d, 0x73, 0x2e, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x47,
	0x6f, 0x6f, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0xd4, 0x02, 0x0a,
	0x12, 0x50, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x4c, 0x0a, 0x11, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x50, 0x65, 0x72,
	0x66, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x1d, 0x2e, 0x76, 0x6d, 0x73, 0x2e, 0x52,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x50, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x76, 0x6d, 0x73, 0x2e, 0x50, 0x65,
	0x72, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x4e, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x50, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x61,
	0x6e, 0x63, 0x65, 0x42, 0x79, 0x49, 0x44, 0x12, 0x1e, 0x2e, 0x76, 0x6d, 0x73, 0x2e, 0x47, 0x65,
	0x74, 0x50, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x42, 0x79, 0x49, 0x44,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x76, 0x6d, 0x73, 0x2e, 0x50, 0x65,
	0x72, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x4c, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x65, 0x72, 0x66, 0x6f,
	0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x1d, 0x2e, 0x76, 0x6d, 0x73, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x50, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x76, 0x6d, 0x73, 0x2e, 0x50, 0x65, 0x72, 0x66,
	0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x52, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d,
	0x61, 0x6e, 0x63, 0x65, 0x12, 0x1d, 0x2e, 0x76, 0x6d, 0x73, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x50, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x76, 0x6d, 0x73, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x50, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x32, 0xae, 0x02, 0x0a, 0x0e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x42, 0x0a, 0x0e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73,
	0x73, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x12, 0x1a, 0x2e, 0x76, 0x6d, 0x73, 0x2e, 0x50,
	0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x76, 0x6d, 0x73, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4c, 0x0a, 0x13, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x1f, 0x2e, 0x76, 0x6d, 0x73, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x14, 0x2e, 0x76, 0x6d, 0x73, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x42, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x50,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x42, 0x79, 0x49, 0x44, 0x12, 0x1a, 0x2e, 0x76, 0x6d, 0x73,
	0x2e, 0x47, 0x65, 0x74, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x42, 0x79, 0x49, 0x44, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x76, 0x6d, 0x73, 0x2e, 0x50, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x46, 0x0a, 0x0d,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x19, 0x2e,
	0x76, 0x6d, 0x73, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x76, 0x6d, 0x73, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x42, 0x09, 0x5a, 0x07, 0x2f, 0x76, 0x6d, 0x73, 0x5f, 0x70, 0x62, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_vms_proto_rawDescOnce sync.Once
	file_vms_proto_rawDescData = file_vms_proto_rawDesc
)

func file_vms_proto_rawDescGZIP() []byte {
	file_vms_proto_rawDescOnce.Do(func() {
		file_vms_proto_rawDescData = protoimpl.X.CompressGZIP(file_vms_proto_rawDescData)
	})
	return file_vms_proto_rawDescData
}

var file_vms_proto_msgTypes = make([]protoimpl.MessageInfo, 33)
var file_vms_proto_goTypes = []any{
	(*Vendor)(nil),                      // 0: vms.Vendor
	(*CreateVendorRequest)(nil),         // 1: vms.CreateVendorRequest
	(*GetVendorByIDRequest)(nil),        // 2: vms.GetVendorByIDRequest
	(*UpdateVendorRequest)(nil),         // 3: vms.UpdateVendorRequest
	(*DeleteVendorRequest)(nil),         // 4: vms.DeleteVendorRequest
	(*DeleteVendorResponse)(nil),        // 5: vms.DeleteVendorResponse
	(*VendorResponse)(nil),              // 6: vms.VendorResponse
	(*SearchVendorsRequest)(nil),        // 7: vms.SearchVendorsRequest
	(*SearchVendorsResponse)(nil),       // 8: vms.SearchVendorsResponse
	(*PurchaseOrder)(nil),               // 9: vms.PurchaseOrder
	(*CreatePurchaseOrderRequest)(nil),  // 10: vms.CreatePurchaseOrderRequest
	(*GetPurchaseOrderByIDRequest)(nil), // 11: vms.GetPurchaseOrderByIDRequest
	(*UpdatePurchaseOrderRequest)(nil),  // 12: vms.UpdatePurchaseOrderRequest
	(*DeletePurchaseOrderRequest)(nil),  // 13: vms.DeletePurchaseOrderRequest
	(*DeletePurchaseOrderResponse)(nil), // 14: vms.DeletePurchaseOrderResponse
	(*PurchaseOrderResponse)(nil),       // 15: vms.PurchaseOrderResponse
	(*TrackOrderStatusRequest)(nil),     // 16: vms.TrackOrderStatusRequest
	(*ReceiveGoodsRequest)(nil),         // 17: vms.ReceiveGoodsRequest
	(*ReceiveGoodsResponse)(nil),        // 18: vms.ReceiveGoodsResponse
	(*VendorPerformance)(nil),           // 19: vms.VendorPerformance
	(*RecordPerformanceRequest)(nil),    // 20: vms.RecordPerformanceRequest
	(*GetPerformanceByIDRequest)(nil),   // 21: vms.GetPerformanceByIDRequest
	(*UpdatePerformanceRequest)(nil),    // 22: vms.UpdatePerformanceRequest
	(*DeletePerformanceRequest)(nil),    // 23: vms.DeletePerformanceRequest
	(*DeletePerformanceResponse)(nil),   // 24: vms.DeletePerformanceResponse
	(*PerformanceResponse)(nil),         // 25: vms.PerformanceResponse
	(*Payment)(nil),                     // 26: vms.Payment
	(*ProcessInvoiceRequest)(nil),       // 27: vms.ProcessInvoiceRequest
	(*UpdatePaymentStatusRequest)(nil),  // 28: vms.UpdatePaymentStatusRequest
	(*GetPaymentByIDRequest)(nil),       // 29: vms.GetPaymentByIDRequest
	(*DeletePaymentRequest)(nil),        // 30: vms.DeletePaymentRequest
	(*DeletePaymentResponse)(nil),       // 31: vms.DeletePaymentResponse
	(*PaymentResponse)(nil),             // 32: vms.PaymentResponse
	(*timestamppb.Timestamp)(nil),       // 33: google.protobuf.Timestamp
}
var file_vms_proto_depIdxs = []int32{
	0,  // 0: vms.CreateVendorRequest.vendor:type_name -> vms.Vendor
	0,  // 1: vms.UpdateVendorRequest.vendor:type_name -> vms.Vendor
	0,  // 2: vms.VendorResponse.vendor:type_name -> vms.Vendor
	0,  // 3: vms.SearchVendorsResponse.vendors:type_name -> vms.Vendor
	33, // 4: vms.PurchaseOrder.delivery_date:type_name -> google.protobuf.Timestamp
	33, // 5: vms.PurchaseOrder.received_date:type_name -> google.protobuf.Timestamp
	33, // 6: vms.CreatePurchaseOrderRequest.delivery_date:type_name -> google.protobuf.Timestamp
	9,  // 7: vms.UpdatePurchaseOrderRequest.purchase_order:type_name -> vms.PurchaseOrder
	33, // 8: vms.ReceiveGoodsRequest.received_date:type_name -> google.protobuf.Timestamp
	33, // 9: vms.VendorPerformance.evaluated_at:type_name -> google.protobuf.Timestamp
	33, // 10: vms.RecordPerformanceRequest.evaluated_at:type_name -> google.protobuf.Timestamp
	19, // 11: vms.UpdatePerformanceRequest.performance:type_name -> vms.VendorPerformance
	33, // 12: vms.Payment.paid_at:type_name -> google.protobuf.Timestamp
	1,  // 13: vms.VendorService.CreateVendor:input_type -> vms.CreateVendorRequest
	2,  // 14: vms.VendorService.GetVendorByID:input_type -> vms.GetVendorByIDRequest
	3,  // 15: vms.VendorService.UpdateVendor:input_type -> vms.UpdateVendorRequest
	4,  // 16: vms.VendorService.DeleteVendor:input_type -> vms.DeleteVendorRequest
	7,  // 17: vms.VendorService.SearchVendors:input_type -> vms.SearchVendorsRequest
	10, // 18: vms.PurchaseOrderService.CreatePurchaseOrder:input_type -> vms.CreatePurchaseOrderRequest
	11, // 19: vms.PurchaseOrderService.GetPurchaseOrderByID:input_type -> vms.GetPurchaseOrderByIDRequest
	12, // 20: vms.PurchaseOrderService.UpdatePurchaseOrder:input_type -> vms.UpdatePurchaseOrderRequest
	13, // 21: vms.PurchaseOrderService.DeletePurchaseOrder:input_type -> vms.DeletePurchaseOrderRequest
	16, // 22: vms.PurchaseOrderService.TrackOrderStatus:input_type -> vms.TrackOrderStatusRequest
	17, // 23: vms.PurchaseOrderService.ReceiveGoods:input_type -> vms.ReceiveGoodsRequest
	20, // 24: vms.PerformanceService.RecordPerformance:input_type -> vms.RecordPerformanceRequest
	21, // 25: vms.PerformanceService.GetPerformanceByID:input_type -> vms.GetPerformanceByIDRequest
	22, // 26: vms.PerformanceService.UpdatePerformance:input_type -> vms.UpdatePerformanceRequest
	23, // 27: vms.PerformanceService.DeletePerformance:input_type -> vms.DeletePerformanceRequest
	27, // 28: vms.PaymentService.ProcessInvoice:input_type -> vms.ProcessInvoiceRequest
	28, // 29: vms.PaymentService.UpdatePaymentStatus:input_type -> vms.UpdatePaymentStatusRequest
	29, // 30: vms.PaymentService.GetPaymentByID:input_type -> vms.GetPaymentByIDRequest
	30, // 31: vms.PaymentService.DeletePayment:input_type -> vms.DeletePaymentRequest
	6,  // 32: vms.VendorService.CreateVendor:output_type -> vms.VendorResponse
	6,  // 33: vms.VendorService.GetVendorByID:output_type -> vms.VendorResponse
	6,  // 34: vms.VendorService.UpdateVendor:output_type -> vms.VendorResponse
	5,  // 35: vms.VendorService.DeleteVendor:output_type -> vms.DeleteVendorResponse
	8,  // 36: vms.VendorService.SearchVendors:output_type -> vms.SearchVendorsResponse
	15, // 37: vms.PurchaseOrderService.CreatePurchaseOrder:output_type -> vms.PurchaseOrderResponse
	15, // 38: vms.PurchaseOrderService.GetPurchaseOrderByID:output_type -> vms.PurchaseOrderResponse
	15, // 39: vms.PurchaseOrderService.UpdatePurchaseOrder:output_type -> vms.PurchaseOrderResponse
	14, // 40: vms.PurchaseOrderService.DeletePurchaseOrder:output_type -> vms.DeletePurchaseOrderResponse
	15, // 41: vms.PurchaseOrderService.TrackOrderStatus:output_type -> vms.PurchaseOrderResponse
	18, // 42: vms.PurchaseOrderService.ReceiveGoods:output_type -> vms.ReceiveGoodsResponse
	25, // 43: vms.PerformanceService.RecordPerformance:output_type -> vms.PerformanceResponse
	25, // 44: vms.PerformanceService.GetPerformanceByID:output_type -> vms.PerformanceResponse
	25, // 45: vms.PerformanceService.UpdatePerformance:output_type -> vms.PerformanceResponse
	24, // 46: vms.PerformanceService.DeletePerformance:output_type -> vms.DeletePerformanceResponse
	32, // 47: vms.PaymentService.ProcessInvoice:output_type -> vms.PaymentResponse
	32, // 48: vms.PaymentService.UpdatePaymentStatus:output_type -> vms.PaymentResponse
	32, // 49: vms.PaymentService.GetPaymentByID:output_type -> vms.PaymentResponse
	31, // 50: vms.PaymentService.DeletePayment:output_type -> vms.DeletePaymentResponse
	32, // [32:51] is the sub-list for method output_type
	13, // [13:32] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_vms_proto_init() }
func file_vms_proto_init() {
	if File_vms_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_vms_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   33,
			NumExtensions: 0,
			NumServices:   4,
		},
		GoTypes:           file_vms_proto_goTypes,
		DependencyIndexes: file_vms_proto_depIdxs,
		MessageInfos:      file_vms_proto_msgTypes,
	}.Build()
	File_vms_proto = out.File
	file_vms_proto_rawDesc = nil
	file_vms_proto_goTypes = nil
	file_vms_proto_depIdxs = nil
}
