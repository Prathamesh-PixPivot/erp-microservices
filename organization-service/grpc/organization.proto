syntax = "proto3";

// import "google/protobuf/timestamp.proto";

package organization;

option go_package = "/organizationpb";

// -------------------- Organization Service --------------------
service OrganizationService {
    rpc GetOrganization(GetOrganizationRequest) returns (GetOrganizationResponse);
    rpc CreateOrganization(CreateOrganizationRequest) returns (CreateOrganizationResponse);
    rpc UpdateOrganization(UpdateOrganizationRequest) returns (UpdateOrganizationResponse);
    rpc DeleteOrganization(DeleteOrganizationRequest) returns (DeleteOrganizationResponse);
    rpc ListOrganizations(ListOrganizationsRequest) returns (ListOrganizationsResponse);
    rpc GetChildOrganizations(GetChildOrganizationsRequest) returns (GetChildOrganizationsResponse);
    rpc AssignParentOrganization(AssignParentOrganizationRequest) returns (AssignParentOrganizationResponse);
    rpc GetOrganizationHierarchy(GetOrganizationHierarchyRequest) returns (GetOrganizationHierarchyResponse);
}

// -------------------- Organization Messages --------------------
message Organization {
    uint32 id = 1;
    string gst_in = 2;
    string name = 3;
    string phone = 4;
    string email = 5;
    string address = 6;
    string template_id = 7;
    string website = 8;
    string city = 9;
    string country = 10;
    string state = 11;
    string module_id = 12;
    string zipcode = 13;
    string industry = 14;
    string status = 15; // "Pending", "Verified", "Suspended"
    uint32 parent_org_id = 16; // Parent organization for branches/multi-tenancy
    repeated OrganizationConfig configs = 17;
    string created_at = 18;
    string updated_at = 19;
}


// user proto
message User {
    uint32 id = 1;
    string first_name = 2;
    string last_name = 3;
    string email = 4;
    string phone = 5;
    string role = 6;
    string permissions = 7; // ABAC permissions (Casbin attributes)
    uint32 organization_id = 8;
    optional uint32 parent_org_id = 9; // For users with access to parent-child hierarchy
    string created_at = 10;
    string updated_at = 11;
}

// Organization Configuration (Industry-Specific Settings)
message OrganizationConfig {
    string key = 1;
    string value = 2;
}

// -------------------- Parent-Child Organization Management --------------------
message GetChildOrganizationsRequest {
    uint32 parent_org_id = 1;
}

message GetChildOrganizationsResponse {
    repeated Organization child_organizations = 1;
}

message AssignParentOrganizationRequest {
    uint32 child_org_id = 1;
    uint32 parent_org_id = 2;
}

message AssignParentOrganizationResponse {
    bool success = 1;
}

message GetOrganizationHierarchyRequest {
    uint32 org_id = 1;
}

message GetOrganizationHierarchyResponse {
    Organization parent_org = 1;
    repeated Organization child_organizations = 2;
}

// -------------------- Request & Response Messages --------------------
message GetOrganizationRequest { uint32 id = 1; }

message GetOrganizationResponse {
    Organization organization = 1;
    repeated User users = 2;
}

message CreateOrganizationRequest {
    string gst_in = 1;
    string name = 2;
    string phone = 3;
    string email = 4;
    string address = 5;
    string template_id = 6;
    string website = 7;
    string city = 8;
    string country = 9;
    string state = 10;
    string module_id = 11;
    string zipcode = 12;
    string industry = 13;
    optional uint32 parent_org_id = 14;
}

message CreateOrganizationResponse { Organization organization = 1; }

message UpdateOrganizationRequest { Organization organization = 1; }
message UpdateOrganizationResponse { Organization organization = 1; }

message DeleteOrganizationRequest { uint32 id = 1; }
message DeleteOrganizationResponse { bool success = 1; }

message ListOrganizationsRequest {
    int32 page = 1;
    int32 page_size = 2;
    string sort_by = 3;
    bool ascending = 4;
}

message ListOrganizationsResponse { repeated Organization organizations = 1; }
