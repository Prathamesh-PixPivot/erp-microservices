// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v5.29.3
// source: pantry.proto

package pantry_pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// pantry items
type PantryItem struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ProductName   string                 `protobuf:"bytes,1,opt,name=product_name,json=productName,proto3" json:"product_name,omitempty"`
	Price         float32                `protobuf:"fixed32,2,opt,name=price,proto3" json:"price,omitempty"`
	Category      string                 `protobuf:"bytes,3,opt,name=category,proto3" json:"category,omitempty"`
	CreatedAt     string                 `protobuf:"bytes,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt     string                 `protobuf:"bytes,5,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PantryItem) Reset() {
	*x = PantryItem{}
	mi := &file_pantry_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PantryItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PantryItem) ProtoMessage() {}

func (x *PantryItem) ProtoReflect() protoreflect.Message {
	mi := &file_pantry_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PantryItem.ProtoReflect.Descriptor instead.
func (*PantryItem) Descriptor() ([]byte, []int) {
	return file_pantry_proto_rawDescGZIP(), []int{0}
}

func (x *PantryItem) GetProductName() string {
	if x != nil {
		return x.ProductName
	}
	return ""
}

func (x *PantryItem) GetPrice() float32 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *PantryItem) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *PantryItem) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *PantryItem) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

// pantry bucket items
type BucketItem struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ProductId     string                 `protobuf:"bytes,1,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
	Qty           float32                `protobuf:"fixed32,2,opt,name=qty,proto3" json:"qty,omitempty"`
	Price         float32                `protobuf:"fixed32,3,opt,name=price,proto3" json:"price,omitempty"`
	Total         float32                `protobuf:"fixed32,4,opt,name=total,proto3" json:"total,omitempty"`
	PaidBy        string                 `protobuf:"bytes,5,opt,name=paid_by,json=paidBy,proto3" json:"paid_by,omitempty"`
	CreatedAt     string                 `protobuf:"bytes,6,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt     string                 `protobuf:"bytes,7,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BucketItem) Reset() {
	*x = BucketItem{}
	mi := &file_pantry_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BucketItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BucketItem) ProtoMessage() {}

func (x *BucketItem) ProtoReflect() protoreflect.Message {
	mi := &file_pantry_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BucketItem.ProtoReflect.Descriptor instead.
func (*BucketItem) Descriptor() ([]byte, []int) {
	return file_pantry_proto_rawDescGZIP(), []int{1}
}

func (x *BucketItem) GetProductId() string {
	if x != nil {
		return x.ProductId
	}
	return ""
}

func (x *BucketItem) GetQty() float32 {
	if x != nil {
		return x.Qty
	}
	return 0
}

func (x *BucketItem) GetPrice() float32 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *BucketItem) GetTotal() float32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *BucketItem) GetPaidBy() string {
	if x != nil {
		return x.PaidBy
	}
	return ""
}

func (x *BucketItem) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *BucketItem) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

// pantry expense logs
type ExpenseLog struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AmtReceived   float32                `protobuf:"fixed32,1,opt,name=amt_received,json=amtReceived,proto3" json:"amt_received,omitempty"`
	AmtSpend      float32                `protobuf:"fixed32,2,opt,name=amt_spend,json=amtSpend,proto3" json:"amt_spend,omitempty"`
	CreatedAt     string                 `protobuf:"bytes,3,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt     string                 `protobuf:"bytes,4,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExpenseLog) Reset() {
	*x = ExpenseLog{}
	mi := &file_pantry_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExpenseLog) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExpenseLog) ProtoMessage() {}

func (x *ExpenseLog) ProtoReflect() protoreflect.Message {
	mi := &file_pantry_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExpenseLog.ProtoReflect.Descriptor instead.
func (*ExpenseLog) Descriptor() ([]byte, []int) {
	return file_pantry_proto_rawDescGZIP(), []int{2}
}

func (x *ExpenseLog) GetAmtReceived() float32 {
	if x != nil {
		return x.AmtReceived
	}
	return 0
}

func (x *ExpenseLog) GetAmtSpend() float32 {
	if x != nil {
		return x.AmtSpend
	}
	return 0
}

func (x *ExpenseLog) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *ExpenseLog) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

// messages for pantry items
type CreatePantryItemRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Item          *PantryItem            `protobuf:"bytes,1,opt,name=item,proto3" json:"item,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreatePantryItemRequest) Reset() {
	*x = CreatePantryItemRequest{}
	mi := &file_pantry_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreatePantryItemRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePantryItemRequest) ProtoMessage() {}

func (x *CreatePantryItemRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pantry_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePantryItemRequest.ProtoReflect.Descriptor instead.
func (*CreatePantryItemRequest) Descriptor() ([]byte, []int) {
	return file_pantry_proto_rawDescGZIP(), []int{3}
}

func (x *CreatePantryItemRequest) GetItem() *PantryItem {
	if x != nil {
		return x.Item
	}
	return nil
}

type CreatePantryItemResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Item          *PantryItem            `protobuf:"bytes,1,opt,name=item,proto3" json:"item,omitempty"`
	Success       bool                   `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreatePantryItemResponse) Reset() {
	*x = CreatePantryItemResponse{}
	mi := &file_pantry_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreatePantryItemResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePantryItemResponse) ProtoMessage() {}

func (x *CreatePantryItemResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pantry_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePantryItemResponse.ProtoReflect.Descriptor instead.
func (*CreatePantryItemResponse) Descriptor() ([]byte, []int) {
	return file_pantry_proto_rawDescGZIP(), []int{4}
}

func (x *CreatePantryItemResponse) GetItem() *PantryItem {
	if x != nil {
		return x.Item
	}
	return nil
}

func (x *CreatePantryItemResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type GetPantryItemRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ProductId     string                 `protobuf:"bytes,1,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPantryItemRequest) Reset() {
	*x = GetPantryItemRequest{}
	mi := &file_pantry_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPantryItemRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPantryItemRequest) ProtoMessage() {}

func (x *GetPantryItemRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pantry_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPantryItemRequest.ProtoReflect.Descriptor instead.
func (*GetPantryItemRequest) Descriptor() ([]byte, []int) {
	return file_pantry_proto_rawDescGZIP(), []int{5}
}

func (x *GetPantryItemRequest) GetProductId() string {
	if x != nil {
		return x.ProductId
	}
	return ""
}

type GetPantryItemResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Item          *PantryItem            `protobuf:"bytes,1,opt,name=item,proto3" json:"item,omitempty"`
	Success       bool                   `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPantryItemResponse) Reset() {
	*x = GetPantryItemResponse{}
	mi := &file_pantry_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPantryItemResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPantryItemResponse) ProtoMessage() {}

func (x *GetPantryItemResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pantry_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPantryItemResponse.ProtoReflect.Descriptor instead.
func (*GetPantryItemResponse) Descriptor() ([]byte, []int) {
	return file_pantry_proto_rawDescGZIP(), []int{6}
}

func (x *GetPantryItemResponse) GetItem() *PantryItem {
	if x != nil {
		return x.Item
	}
	return nil
}

func (x *GetPantryItemResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type UpdatePantryItemRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Item          *PantryItem            `protobuf:"bytes,1,opt,name=item,proto3" json:"item,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdatePantryItemRequest) Reset() {
	*x = UpdatePantryItemRequest{}
	mi := &file_pantry_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdatePantryItemRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePantryItemRequest) ProtoMessage() {}

func (x *UpdatePantryItemRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pantry_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePantryItemRequest.ProtoReflect.Descriptor instead.
func (*UpdatePantryItemRequest) Descriptor() ([]byte, []int) {
	return file_pantry_proto_rawDescGZIP(), []int{7}
}

func (x *UpdatePantryItemRequest) GetItem() *PantryItem {
	if x != nil {
		return x.Item
	}
	return nil
}

type UpdatePantryItemResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Item          *PantryItem            `protobuf:"bytes,1,opt,name=item,proto3" json:"item,omitempty"`
	Success       bool                   `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdatePantryItemResponse) Reset() {
	*x = UpdatePantryItemResponse{}
	mi := &file_pantry_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdatePantryItemResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePantryItemResponse) ProtoMessage() {}

func (x *UpdatePantryItemResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pantry_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePantryItemResponse.ProtoReflect.Descriptor instead.
func (*UpdatePantryItemResponse) Descriptor() ([]byte, []int) {
	return file_pantry_proto_rawDescGZIP(), []int{8}
}

func (x *UpdatePantryItemResponse) GetItem() *PantryItem {
	if x != nil {
		return x.Item
	}
	return nil
}

func (x *UpdatePantryItemResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type DeletePantryItemRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ProductId     string                 `protobuf:"bytes,1,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeletePantryItemRequest) Reset() {
	*x = DeletePantryItemRequest{}
	mi := &file_pantry_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeletePantryItemRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePantryItemRequest) ProtoMessage() {}

func (x *DeletePantryItemRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pantry_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePantryItemRequest.ProtoReflect.Descriptor instead.
func (*DeletePantryItemRequest) Descriptor() ([]byte, []int) {
	return file_pantry_proto_rawDescGZIP(), []int{9}
}

func (x *DeletePantryItemRequest) GetProductId() string {
	if x != nil {
		return x.ProductId
	}
	return ""
}

type DeletePantryItemResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeletePantryItemResponse) Reset() {
	*x = DeletePantryItemResponse{}
	mi := &file_pantry_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeletePantryItemResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePantryItemResponse) ProtoMessage() {}

func (x *DeletePantryItemResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pantry_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePantryItemResponse.ProtoReflect.Descriptor instead.
func (*DeletePantryItemResponse) Descriptor() ([]byte, []int) {
	return file_pantry_proto_rawDescGZIP(), []int{10}
}

func (x *DeletePantryItemResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type ListPantryItemsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Limit         int32                  `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset        int32                  `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListPantryItemsRequest) Reset() {
	*x = ListPantryItemsRequest{}
	mi := &file_pantry_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListPantryItemsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPantryItemsRequest) ProtoMessage() {}

func (x *ListPantryItemsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pantry_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPantryItemsRequest.ProtoReflect.Descriptor instead.
func (*ListPantryItemsRequest) Descriptor() ([]byte, []int) {
	return file_pantry_proto_rawDescGZIP(), []int{11}
}

func (x *ListPantryItemsRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListPantryItemsRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

type ListPantryItemsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Items         []*PantryItem          `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	Success       bool                   `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListPantryItemsResponse) Reset() {
	*x = ListPantryItemsResponse{}
	mi := &file_pantry_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListPantryItemsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPantryItemsResponse) ProtoMessage() {}

func (x *ListPantryItemsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pantry_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPantryItemsResponse.ProtoReflect.Descriptor instead.
func (*ListPantryItemsResponse) Descriptor() ([]byte, []int) {
	return file_pantry_proto_rawDescGZIP(), []int{12}
}

func (x *ListPantryItemsResponse) GetItems() []*PantryItem {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *ListPantryItemsResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

// messages for Pantry bucket items
type CreateBucketItemRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Item          *BucketItem            `protobuf:"bytes,1,opt,name=item,proto3" json:"item,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateBucketItemRequest) Reset() {
	*x = CreateBucketItemRequest{}
	mi := &file_pantry_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateBucketItemRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateBucketItemRequest) ProtoMessage() {}

func (x *CreateBucketItemRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pantry_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateBucketItemRequest.ProtoReflect.Descriptor instead.
func (*CreateBucketItemRequest) Descriptor() ([]byte, []int) {
	return file_pantry_proto_rawDescGZIP(), []int{13}
}

func (x *CreateBucketItemRequest) GetItem() *BucketItem {
	if x != nil {
		return x.Item
	}
	return nil
}

type CreateBucketItemResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Item          *BucketItem            `protobuf:"bytes,1,opt,name=item,proto3" json:"item,omitempty"`
	Success       bool                   `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateBucketItemResponse) Reset() {
	*x = CreateBucketItemResponse{}
	mi := &file_pantry_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateBucketItemResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateBucketItemResponse) ProtoMessage() {}

func (x *CreateBucketItemResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pantry_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateBucketItemResponse.ProtoReflect.Descriptor instead.
func (*CreateBucketItemResponse) Descriptor() ([]byte, []int) {
	return file_pantry_proto_rawDescGZIP(), []int{14}
}

func (x *CreateBucketItemResponse) GetItem() *BucketItem {
	if x != nil {
		return x.Item
	}
	return nil
}

func (x *CreateBucketItemResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type GetBucketItemRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ProductId     string                 `protobuf:"bytes,1,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetBucketItemRequest) Reset() {
	*x = GetBucketItemRequest{}
	mi := &file_pantry_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetBucketItemRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBucketItemRequest) ProtoMessage() {}

func (x *GetBucketItemRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pantry_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBucketItemRequest.ProtoReflect.Descriptor instead.
func (*GetBucketItemRequest) Descriptor() ([]byte, []int) {
	return file_pantry_proto_rawDescGZIP(), []int{15}
}

func (x *GetBucketItemRequest) GetProductId() string {
	if x != nil {
		return x.ProductId
	}
	return ""
}

type GetBucketItemResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Item          *BucketItem            `protobuf:"bytes,1,opt,name=item,proto3" json:"item,omitempty"`
	Success       bool                   `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetBucketItemResponse) Reset() {
	*x = GetBucketItemResponse{}
	mi := &file_pantry_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetBucketItemResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBucketItemResponse) ProtoMessage() {}

func (x *GetBucketItemResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pantry_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBucketItemResponse.ProtoReflect.Descriptor instead.
func (*GetBucketItemResponse) Descriptor() ([]byte, []int) {
	return file_pantry_proto_rawDescGZIP(), []int{16}
}

func (x *GetBucketItemResponse) GetItem() *BucketItem {
	if x != nil {
		return x.Item
	}
	return nil
}

func (x *GetBucketItemResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type UpdateBucketItemRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Item          *BucketItem            `protobuf:"bytes,1,opt,name=item,proto3" json:"item,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateBucketItemRequest) Reset() {
	*x = UpdateBucketItemRequest{}
	mi := &file_pantry_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateBucketItemRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateBucketItemRequest) ProtoMessage() {}

func (x *UpdateBucketItemRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pantry_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateBucketItemRequest.ProtoReflect.Descriptor instead.
func (*UpdateBucketItemRequest) Descriptor() ([]byte, []int) {
	return file_pantry_proto_rawDescGZIP(), []int{17}
}

func (x *UpdateBucketItemRequest) GetItem() *BucketItem {
	if x != nil {
		return x.Item
	}
	return nil
}

type UpdateBucketItemResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Item          *BucketItem            `protobuf:"bytes,1,opt,name=item,proto3" json:"item,omitempty"`
	Success       bool                   `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateBucketItemResponse) Reset() {
	*x = UpdateBucketItemResponse{}
	mi := &file_pantry_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateBucketItemResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateBucketItemResponse) ProtoMessage() {}

func (x *UpdateBucketItemResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pantry_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateBucketItemResponse.ProtoReflect.Descriptor instead.
func (*UpdateBucketItemResponse) Descriptor() ([]byte, []int) {
	return file_pantry_proto_rawDescGZIP(), []int{18}
}

func (x *UpdateBucketItemResponse) GetItem() *BucketItem {
	if x != nil {
		return x.Item
	}
	return nil
}

func (x *UpdateBucketItemResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type DeleteBucketItemRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ProductId     string                 `protobuf:"bytes,1,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteBucketItemRequest) Reset() {
	*x = DeleteBucketItemRequest{}
	mi := &file_pantry_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteBucketItemRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteBucketItemRequest) ProtoMessage() {}

func (x *DeleteBucketItemRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pantry_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteBucketItemRequest.ProtoReflect.Descriptor instead.
func (*DeleteBucketItemRequest) Descriptor() ([]byte, []int) {
	return file_pantry_proto_rawDescGZIP(), []int{19}
}

func (x *DeleteBucketItemRequest) GetProductId() string {
	if x != nil {
		return x.ProductId
	}
	return ""
}

type DeleteBucketItemResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteBucketItemResponse) Reset() {
	*x = DeleteBucketItemResponse{}
	mi := &file_pantry_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteBucketItemResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteBucketItemResponse) ProtoMessage() {}

func (x *DeleteBucketItemResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pantry_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteBucketItemResponse.ProtoReflect.Descriptor instead.
func (*DeleteBucketItemResponse) Descriptor() ([]byte, []int) {
	return file_pantry_proto_rawDescGZIP(), []int{20}
}

func (x *DeleteBucketItemResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type ListBucketItemsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Limit         int32                  `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset        int32                  `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListBucketItemsRequest) Reset() {
	*x = ListBucketItemsRequest{}
	mi := &file_pantry_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListBucketItemsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListBucketItemsRequest) ProtoMessage() {}

func (x *ListBucketItemsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pantry_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListBucketItemsRequest.ProtoReflect.Descriptor instead.
func (*ListBucketItemsRequest) Descriptor() ([]byte, []int) {
	return file_pantry_proto_rawDescGZIP(), []int{21}
}

func (x *ListBucketItemsRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListBucketItemsRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

type ListBucketItemsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Items         []*BucketItem          `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	Success       bool                   `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListBucketItemsResponse) Reset() {
	*x = ListBucketItemsResponse{}
	mi := &file_pantry_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListBucketItemsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListBucketItemsResponse) ProtoMessage() {}

func (x *ListBucketItemsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pantry_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListBucketItemsResponse.ProtoReflect.Descriptor instead.
func (*ListBucketItemsResponse) Descriptor() ([]byte, []int) {
	return file_pantry_proto_rawDescGZIP(), []int{22}
}

func (x *ListBucketItemsResponse) GetItems() []*BucketItem {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *ListBucketItemsResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

// messages for Pantry bucket items
type CreateExpenseLogRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Log           *ExpenseLog            `protobuf:"bytes,1,opt,name=log,proto3" json:"log,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateExpenseLogRequest) Reset() {
	*x = CreateExpenseLogRequest{}
	mi := &file_pantry_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateExpenseLogRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateExpenseLogRequest) ProtoMessage() {}

func (x *CreateExpenseLogRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pantry_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateExpenseLogRequest.ProtoReflect.Descriptor instead.
func (*CreateExpenseLogRequest) Descriptor() ([]byte, []int) {
	return file_pantry_proto_rawDescGZIP(), []int{23}
}

func (x *CreateExpenseLogRequest) GetLog() *ExpenseLog {
	if x != nil {
		return x.Log
	}
	return nil
}

type CreateExpenseLogResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Log           *ExpenseLog            `protobuf:"bytes,1,opt,name=log,proto3" json:"log,omitempty"`
	Success       bool                   `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateExpenseLogResponse) Reset() {
	*x = CreateExpenseLogResponse{}
	mi := &file_pantry_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateExpenseLogResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateExpenseLogResponse) ProtoMessage() {}

func (x *CreateExpenseLogResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pantry_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateExpenseLogResponse.ProtoReflect.Descriptor instead.
func (*CreateExpenseLogResponse) Descriptor() ([]byte, []int) {
	return file_pantry_proto_rawDescGZIP(), []int{24}
}

func (x *CreateExpenseLogResponse) GetLog() *ExpenseLog {
	if x != nil {
		return x.Log
	}
	return nil
}

func (x *CreateExpenseLogResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type GetExpenseLogRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	LogID         string                 `protobuf:"bytes,1,opt,name=logID,proto3" json:"logID,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetExpenseLogRequest) Reset() {
	*x = GetExpenseLogRequest{}
	mi := &file_pantry_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetExpenseLogRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetExpenseLogRequest) ProtoMessage() {}

func (x *GetExpenseLogRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pantry_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetExpenseLogRequest.ProtoReflect.Descriptor instead.
func (*GetExpenseLogRequest) Descriptor() ([]byte, []int) {
	return file_pantry_proto_rawDescGZIP(), []int{25}
}

func (x *GetExpenseLogRequest) GetLogID() string {
	if x != nil {
		return x.LogID
	}
	return ""
}

type GetExpenseLogResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Log           *ExpenseLog            `protobuf:"bytes,1,opt,name=log,proto3" json:"log,omitempty"`
	Success       bool                   `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetExpenseLogResponse) Reset() {
	*x = GetExpenseLogResponse{}
	mi := &file_pantry_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetExpenseLogResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetExpenseLogResponse) ProtoMessage() {}

func (x *GetExpenseLogResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pantry_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetExpenseLogResponse.ProtoReflect.Descriptor instead.
func (*GetExpenseLogResponse) Descriptor() ([]byte, []int) {
	return file_pantry_proto_rawDescGZIP(), []int{26}
}

func (x *GetExpenseLogResponse) GetLog() *ExpenseLog {
	if x != nil {
		return x.Log
	}
	return nil
}

func (x *GetExpenseLogResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type UpdateExpenseLogRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Log           *ExpenseLog            `protobuf:"bytes,1,opt,name=log,proto3" json:"log,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateExpenseLogRequest) Reset() {
	*x = UpdateExpenseLogRequest{}
	mi := &file_pantry_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateExpenseLogRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateExpenseLogRequest) ProtoMessage() {}

func (x *UpdateExpenseLogRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pantry_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateExpenseLogRequest.ProtoReflect.Descriptor instead.
func (*UpdateExpenseLogRequest) Descriptor() ([]byte, []int) {
	return file_pantry_proto_rawDescGZIP(), []int{27}
}

func (x *UpdateExpenseLogRequest) GetLog() *ExpenseLog {
	if x != nil {
		return x.Log
	}
	return nil
}

type UpdateExpenseLogResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Log           *ExpenseLog            `protobuf:"bytes,1,opt,name=log,proto3" json:"log,omitempty"`
	Success       bool                   `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateExpenseLogResponse) Reset() {
	*x = UpdateExpenseLogResponse{}
	mi := &file_pantry_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateExpenseLogResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateExpenseLogResponse) ProtoMessage() {}

func (x *UpdateExpenseLogResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pantry_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateExpenseLogResponse.ProtoReflect.Descriptor instead.
func (*UpdateExpenseLogResponse) Descriptor() ([]byte, []int) {
	return file_pantry_proto_rawDescGZIP(), []int{28}
}

func (x *UpdateExpenseLogResponse) GetLog() *ExpenseLog {
	if x != nil {
		return x.Log
	}
	return nil
}

func (x *UpdateExpenseLogResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type DeleteExpenseLogRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	LogID         string                 `protobuf:"bytes,1,opt,name=logID,proto3" json:"logID,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteExpenseLogRequest) Reset() {
	*x = DeleteExpenseLogRequest{}
	mi := &file_pantry_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteExpenseLogRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteExpenseLogRequest) ProtoMessage() {}

func (x *DeleteExpenseLogRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pantry_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteExpenseLogRequest.ProtoReflect.Descriptor instead.
func (*DeleteExpenseLogRequest) Descriptor() ([]byte, []int) {
	return file_pantry_proto_rawDescGZIP(), []int{29}
}

func (x *DeleteExpenseLogRequest) GetLogID() string {
	if x != nil {
		return x.LogID
	}
	return ""
}

type DeleteExpenseLogResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteExpenseLogResponse) Reset() {
	*x = DeleteExpenseLogResponse{}
	mi := &file_pantry_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteExpenseLogResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteExpenseLogResponse) ProtoMessage() {}

func (x *DeleteExpenseLogResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pantry_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteExpenseLogResponse.ProtoReflect.Descriptor instead.
func (*DeleteExpenseLogResponse) Descriptor() ([]byte, []int) {
	return file_pantry_proto_rawDescGZIP(), []int{30}
}

func (x *DeleteExpenseLogResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type ListExpenseLogsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Limit         int32                  `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset        int32                  `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListExpenseLogsRequest) Reset() {
	*x = ListExpenseLogsRequest{}
	mi := &file_pantry_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListExpenseLogsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListExpenseLogsRequest) ProtoMessage() {}

func (x *ListExpenseLogsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pantry_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListExpenseLogsRequest.ProtoReflect.Descriptor instead.
func (*ListExpenseLogsRequest) Descriptor() ([]byte, []int) {
	return file_pantry_proto_rawDescGZIP(), []int{31}
}

func (x *ListExpenseLogsRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListExpenseLogsRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

type ListExpenseLogsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Logs          []*ExpenseLog          `protobuf:"bytes,1,rep,name=logs,proto3" json:"logs,omitempty"`
	Success       bool                   `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListExpenseLogsResponse) Reset() {
	*x = ListExpenseLogsResponse{}
	mi := &file_pantry_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListExpenseLogsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListExpenseLogsResponse) ProtoMessage() {}

func (x *ListExpenseLogsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pantry_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListExpenseLogsResponse.ProtoReflect.Descriptor instead.
func (*ListExpenseLogsResponse) Descriptor() ([]byte, []int) {
	return file_pantry_proto_rawDescGZIP(), []int{32}
}

func (x *ListExpenseLogsResponse) GetLogs() []*ExpenseLog {
	if x != nil {
		return x.Logs
	}
	return nil
}

func (x *ListExpenseLogsResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

var File_pantry_proto protoreflect.FileDescriptor

var file_pantry_proto_rawDesc = string([]byte{
	0x0a, 0x0c, 0x70, 0x61, 0x6e, 0x74, 0x72, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06,
	0x70, 0x61, 0x6e, 0x74, 0x72, 0x79, 0x22, 0x9f, 0x01, 0x0a, 0x0a, 0x50, 0x61, 0x6e, 0x74, 0x72,
	0x79, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xc0, 0x01, 0x0a, 0x0a, 0x42, 0x75, 0x63,
	0x6b, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x71, 0x74, 0x79, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x03, 0x71, 0x74, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x61, 0x69, 0x64, 0x5f, 0x62, 0x79, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x69, 0x64, 0x42, 0x79, 0x12, 0x1d, 0x0a,
	0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x8a, 0x01, 0x0a, 0x0a,
	0x45, 0x78, 0x70, 0x65, 0x6e, 0x73, 0x65, 0x4c, 0x6f, 0x67, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x6d,
	0x74, 0x5f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x0b, 0x61, 0x6d, 0x74, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x12, 0x1b, 0x0a,
	0x09, 0x61, 0x6d, 0x74, 0x5f, 0x73, 0x70, 0x65, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x08, 0x61, 0x6d, 0x74, 0x53, 0x70, 0x65, 0x6e, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x41, 0x0a, 0x17, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x50, 0x61, 0x6e, 0x74, 0x72, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x70, 0x61, 0x6e, 0x74, 0x72, 0x79, 0x2e, 0x50, 0x61, 0x6e, 0x74, 0x72,
	0x79, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x22, 0x5c, 0x0a, 0x18, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x61, 0x6e, 0x74, 0x72, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x26, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x61, 0x6e, 0x74, 0x72, 0x79, 0x2e, 0x50,
	0x61, 0x6e, 0x74, 0x72, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x12,
	0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x35, 0x0a, 0x14, 0x47, 0x65, 0x74,
	0x50, 0x61, 0x6e, 0x74, 0x72, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64,
	0x22, 0x59, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x50, 0x61, 0x6e, 0x74, 0x72, 0x79, 0x49, 0x74, 0x65,
	0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x26, 0x0a, 0x04, 0x69, 0x74, 0x65,
	0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x61, 0x6e, 0x74, 0x72, 0x79,
	0x2e, 0x50, 0x61, 0x6e, 0x74, 0x72, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x69, 0x74, 0x65,
	0x6d, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x41, 0x0a, 0x17, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x61, 0x6e, 0x74, 0x72, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x61, 0x6e, 0x74, 0x72, 0x79, 0x2e, 0x50, 0x61,
	0x6e, 0x74, 0x72, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x22, 0x5c,
	0x0a, 0x18, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x61, 0x6e, 0x74, 0x72, 0x79, 0x49, 0x74,
	0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x26, 0x0a, 0x04, 0x69, 0x74,
	0x65, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x61, 0x6e, 0x74, 0x72,
	0x79, 0x2e, 0x50, 0x61, 0x6e, 0x74, 0x72, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x69, 0x74,
	0x65, 0x6d, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x38, 0x0a, 0x17,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x61, 0x6e, 0x74, 0x72, 0x79, 0x49, 0x74, 0x65, 0x6d,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x22, 0x34, 0x0a, 0x18, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x50, 0x61, 0x6e, 0x74, 0x72, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x46, 0x0a, 0x16,
	0x4c, 0x69, 0x73, 0x74, 0x50, 0x61, 0x6e, 0x74, 0x72, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6f, 0x66,
	0x66, 0x73, 0x65, 0x74, 0x22, 0x5d, 0x0a, 0x17, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x61, 0x6e, 0x74,
	0x72, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x28, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x70, 0x61, 0x6e, 0x74, 0x72, 0x79, 0x2e, 0x50, 0x61, 0x6e, 0x74, 0x72, 0x79, 0x49, 0x74,
	0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x22, 0x41, 0x0a, 0x17, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x75, 0x63,
	0x6b, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x26,
	0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70,
	0x61, 0x6e, 0x74, 0x72, 0x79, 0x2e, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d,
	0x52, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x22, 0x5c, 0x0a, 0x18, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x26, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x70, 0x61, 0x6e, 0x74, 0x72, 0x79, 0x2e, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74,
	0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x22, 0x35, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x42, 0x75, 0x63, 0x6b, 0x65,
	0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x22, 0x59, 0x0a, 0x15, 0x47,
	0x65, 0x74, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x26, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x61, 0x6e, 0x74, 0x72, 0x79, 0x2e, 0x42, 0x75, 0x63, 0x6b,
	0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x12, 0x18, 0x0a, 0x07,
	0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x41, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x26, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x70, 0x61, 0x6e, 0x74, 0x72, 0x79, 0x2e, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x49,
	0x74, 0x65, 0x6d, 0x52, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x22, 0x5c, 0x0a, 0x18, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x26, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x61, 0x6e, 0x74, 0x72, 0x79, 0x2e, 0x42, 0x75, 0x63,
	0x6b, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x12, 0x18, 0x0a,
	0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07,
	0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x38, 0x0a, 0x17, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49,
	0x64, 0x22, 0x34, 0x0a, 0x18, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x75, 0x63, 0x6b, 0x65,
	0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07,
	0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x46, 0x0a, 0x16, 0x4c, 0x69, 0x73, 0x74, 0x42,
	0x75, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x22,
	0x5d, 0x0a, 0x17, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x74, 0x65,
	0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a, 0x05, 0x69, 0x74,
	0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x61, 0x6e, 0x74,
	0x72, 0x79, 0x2e, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69,
	0x74, 0x65, 0x6d, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x3f,
	0x0a, 0x17, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x78, 0x70, 0x65, 0x6e, 0x73, 0x65, 0x4c,
	0x6f, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x03, 0x6c, 0x6f, 0x67,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x61, 0x6e, 0x74, 0x72, 0x79, 0x2e,
	0x45, 0x78, 0x70, 0x65, 0x6e, 0x73, 0x65, 0x4c, 0x6f, 0x67, 0x52, 0x03, 0x6c, 0x6f, 0x67, 0x22,
	0x5a, 0x0a, 0x18, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x78, 0x70, 0x65, 0x6e, 0x73, 0x65,
	0x4c, 0x6f, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x24, 0x0a, 0x03, 0x6c,
	0x6f, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x61, 0x6e, 0x74, 0x72,
	0x79, 0x2e, 0x45, 0x78, 0x70, 0x65, 0x6e, 0x73, 0x65, 0x4c, 0x6f, 0x67, 0x52, 0x03, 0x6c, 0x6f,
	0x67, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x2c, 0x0a, 0x14, 0x47,
	0x65, 0x74, 0x45, 0x78, 0x70, 0x65, 0x6e, 0x73, 0x65, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x6f, 0x67, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x6c, 0x6f, 0x67, 0x49, 0x44, 0x22, 0x57, 0x0a, 0x15, 0x47, 0x65, 0x74,
	0x45, 0x78, 0x70, 0x65, 0x6e, 0x73, 0x65, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x24, 0x0a, 0x03, 0x6c, 0x6f, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x70, 0x61, 0x6e, 0x74, 0x72, 0x79, 0x2e, 0x45, 0x78, 0x70, 0x65, 0x6e, 0x73, 0x65,
	0x4c, 0x6f, 0x67, 0x52, 0x03, 0x6c, 0x6f, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x22, 0x3f, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x78, 0x70, 0x65,
	0x6e, 0x73, 0x65, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a,
	0x03, 0x6c, 0x6f, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x61, 0x6e,
	0x74, 0x72, 0x79, 0x2e, 0x45, 0x78, 0x70, 0x65, 0x6e, 0x73, 0x65, 0x4c, 0x6f, 0x67, 0x52, 0x03,
	0x6c, 0x6f, 0x67, 0x22, 0x5a, 0x0a, 0x18, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x78, 0x70,
	0x65, 0x6e, 0x73, 0x65, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x24, 0x0a, 0x03, 0x6c, 0x6f, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70,
	0x61, 0x6e, 0x74, 0x72, 0x79, 0x2e, 0x45, 0x78, 0x70, 0x65, 0x6e, 0x73, 0x65, 0x4c, 0x6f, 0x67,
	0x52, 0x03, 0x6c, 0x6f, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22,
	0x2f, 0x0a, 0x17, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x45, 0x78, 0x70, 0x65, 0x6e, 0x73, 0x65,
	0x4c, 0x6f, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x6f,
	0x67, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x6f, 0x67, 0x49, 0x44,
	0x22, 0x34, 0x0a, 0x18, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x45, 0x78, 0x70, 0x65, 0x6e, 0x73,
	0x65, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x46, 0x0a, 0x16, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x78,
	0x70, 0x65, 0x6e, 0x73, 0x65, 0x4c, 0x6f, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x22, 0x5b,
	0x0a, 0x17, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x78, 0x70, 0x65, 0x6e, 0x73, 0x65, 0x4c, 0x6f, 0x67,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x26, 0x0a, 0x04, 0x6c, 0x6f, 0x67,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x61, 0x6e, 0x74, 0x72, 0x79,
	0x2e, 0x45, 0x78, 0x70, 0x65, 0x6e, 0x73, 0x65, 0x4c, 0x6f, 0x67, 0x52, 0x04, 0x6c, 0x6f, 0x67,
	0x73, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x32, 0x84, 0x0a, 0x0a, 0x0d,
	0x50, 0x61, 0x6e, 0x74, 0x72, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x55, 0x0a,
	0x10, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x61, 0x6e, 0x74, 0x72, 0x79, 0x49, 0x74, 0x65,
	0x6d, 0x12, 0x1f, 0x2e, 0x70, 0x61, 0x6e, 0x74, 0x72, 0x79, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x50, 0x61, 0x6e, 0x74, 0x72, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x20, 0x2e, 0x70, 0x61, 0x6e, 0x74, 0x72, 0x79, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x50, 0x61, 0x6e, 0x74, 0x72, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4c, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x50, 0x61, 0x6e, 0x74, 0x72,
	0x79, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x1c, 0x2e, 0x70, 0x61, 0x6e, 0x74, 0x72, 0x79, 0x2e, 0x47,
	0x65, 0x74, 0x50, 0x61, 0x6e, 0x74, 0x72, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x70, 0x61, 0x6e, 0x74, 0x72, 0x79, 0x2e, 0x47, 0x65, 0x74,
	0x50, 0x61, 0x6e, 0x74, 0x72, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x55, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x61, 0x6e, 0x74,
	0x72, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x1f, 0x2e, 0x70, 0x61, 0x6e, 0x74, 0x72, 0x79, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x61, 0x6e, 0x74, 0x72, 0x79, 0x49, 0x74, 0x65, 0x6d,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x70, 0x61, 0x6e, 0x74, 0x72, 0x79,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x61, 0x6e, 0x74, 0x72, 0x79, 0x49, 0x74, 0x65,
	0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x55, 0x0a, 0x10, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x50, 0x61, 0x6e, 0x74, 0x72, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x1f, 0x2e,
	0x70, 0x61, 0x6e, 0x74, 0x72, 0x79, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x61, 0x6e,
	0x74, 0x72, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20,
	0x2e, 0x70, 0x61, 0x6e, 0x74, 0x72, 0x79, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x61,
	0x6e, 0x74, 0x72, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x52, 0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x61, 0x6e, 0x74, 0x72, 0x79, 0x49, 0x74,
	0x65, 0x6d, 0x73, 0x12, 0x1e, 0x2e, 0x70, 0x61, 0x6e, 0x74, 0x72, 0x79, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x50, 0x61, 0x6e, 0x74, 0x72, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x70, 0x61, 0x6e, 0x74, 0x72, 0x79, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x50, 0x61, 0x6e, 0x74, 0x72, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x55, 0x0a, 0x10, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x75,
	0x63, 0x6b, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x1f, 0x2e, 0x70, 0x61, 0x6e, 0x74, 0x72,
	0x79, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x74,
	0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x70, 0x61, 0x6e, 0x74,
	0x72, 0x79, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x49,
	0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4c, 0x0a, 0x0d, 0x47,
	0x65, 0x74, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x1c, 0x2e, 0x70,
	0x61, 0x6e, 0x74, 0x72, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x49,
	0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x70, 0x61, 0x6e,
	0x74, 0x72, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x74, 0x65,
	0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x55, 0x0a, 0x10, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x1f, 0x2e,
	0x70, 0x61, 0x6e, 0x74, 0x72, 0x79, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x75, 0x63,
	0x6b, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20,
	0x2e, 0x70, 0x61, 0x6e, 0x74, 0x72, 0x79, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x75,
	0x63, 0x6b, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x55, 0x0a, 0x10, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74,
	0x49, 0x74, 0x65, 0x6d, 0x12, 0x1f, 0x2e, 0x70, 0x61, 0x6e, 0x74, 0x72, 0x79, 0x2e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x70, 0x61, 0x6e, 0x74, 0x72, 0x79, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x52, 0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74, 0x42,
	0x75, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x1e, 0x2e, 0x70, 0x61, 0x6e,
	0x74, 0x72, 0x79, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x74,
	0x65, 0x6d, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x70, 0x61, 0x6e,
	0x74, 0x72, 0x79, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x74,
	0x65, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x55, 0x0a, 0x10, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x78, 0x70, 0x65, 0x6e, 0x73, 0x65, 0x4c, 0x6f, 0x67, 0x12,
	0x1f, 0x2e, 0x70, 0x61, 0x6e, 0x74, 0x72, 0x79, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45,
	0x78, 0x70, 0x65, 0x6e, 0x73, 0x65, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x20, 0x2e, 0x70, 0x61, 0x6e, 0x74, 0x72, 0x79, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x45, 0x78, 0x70, 0x65, 0x6e, 0x73, 0x65, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x4c, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x45, 0x78, 0x70, 0x65, 0x6e, 0x73, 0x65,
	0x4c, 0x6f, 0x67, 0x12, 0x1c, 0x2e, 0x70, 0x61, 0x6e, 0x74, 0x72, 0x79, 0x2e, 0x47, 0x65, 0x74,
	0x45, 0x78, 0x70, 0x65, 0x6e, 0x73, 0x65, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1d, 0x2e, 0x70, 0x61, 0x6e, 0x74, 0x72, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x78,
	0x70, 0x65, 0x6e, 0x73, 0x65, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x55, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x78, 0x70, 0x65, 0x6e, 0x73,
	0x65, 0x4c, 0x6f, 0x67, 0x12, 0x1f, 0x2e, 0x70, 0x61, 0x6e, 0x74, 0x72, 0x79, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x45, 0x78, 0x70, 0x65, 0x6e, 0x73, 0x65, 0x4c, 0x6f, 0x67, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x70, 0x61, 0x6e, 0x74, 0x72, 0x79, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x78, 0x70, 0x65, 0x6e, 0x73, 0x65, 0x4c, 0x6f, 0x67, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x55, 0x0a, 0x10, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x45, 0x78, 0x70, 0x65, 0x6e, 0x73, 0x65, 0x4c, 0x6f, 0x67, 0x12, 0x1f, 0x2e, 0x70, 0x61,
	0x6e, 0x74, 0x72, 0x79, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x45, 0x78, 0x70, 0x65, 0x6e,
	0x73, 0x65, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x70,
	0x61, 0x6e, 0x74, 0x72, 0x79, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x45, 0x78, 0x70, 0x65,
	0x6e, 0x73, 0x65, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x52,
	0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x78, 0x70, 0x65, 0x6e, 0x73, 0x65, 0x4c, 0x6f, 0x67,
	0x73, 0x12, 0x1e, 0x2e, 0x70, 0x61, 0x6e, 0x74, 0x72, 0x79, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x45,
	0x78, 0x70, 0x65, 0x6e, 0x73, 0x65, 0x4c, 0x6f, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1f, 0x2e, 0x70, 0x61, 0x6e, 0x74, 0x72, 0x79, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x45,
	0x78, 0x70, 0x65, 0x6e, 0x73, 0x65, 0x4c, 0x6f, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x42, 0x0c, 0x5a, 0x0a, 0x2f, 0x70, 0x61, 0x6e, 0x74, 0x72, 0x79, 0x5f, 0x70, 0x62,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_pantry_proto_rawDescOnce sync.Once
	file_pantry_proto_rawDescData []byte
)

func file_pantry_proto_rawDescGZIP() []byte {
	file_pantry_proto_rawDescOnce.Do(func() {
		file_pantry_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_pantry_proto_rawDesc), len(file_pantry_proto_rawDesc)))
	})
	return file_pantry_proto_rawDescData
}

var file_pantry_proto_msgTypes = make([]protoimpl.MessageInfo, 33)
var file_pantry_proto_goTypes = []any{
	(*PantryItem)(nil),               // 0: pantry.PantryItem
	(*BucketItem)(nil),               // 1: pantry.BucketItem
	(*ExpenseLog)(nil),               // 2: pantry.ExpenseLog
	(*CreatePantryItemRequest)(nil),  // 3: pantry.CreatePantryItemRequest
	(*CreatePantryItemResponse)(nil), // 4: pantry.CreatePantryItemResponse
	(*GetPantryItemRequest)(nil),     // 5: pantry.GetPantryItemRequest
	(*GetPantryItemResponse)(nil),    // 6: pantry.GetPantryItemResponse
	(*UpdatePantryItemRequest)(nil),  // 7: pantry.UpdatePantryItemRequest
	(*UpdatePantryItemResponse)(nil), // 8: pantry.UpdatePantryItemResponse
	(*DeletePantryItemRequest)(nil),  // 9: pantry.DeletePantryItemRequest
	(*DeletePantryItemResponse)(nil), // 10: pantry.DeletePantryItemResponse
	(*ListPantryItemsRequest)(nil),   // 11: pantry.ListPantryItemsRequest
	(*ListPantryItemsResponse)(nil),  // 12: pantry.ListPantryItemsResponse
	(*CreateBucketItemRequest)(nil),  // 13: pantry.CreateBucketItemRequest
	(*CreateBucketItemResponse)(nil), // 14: pantry.CreateBucketItemResponse
	(*GetBucketItemRequest)(nil),     // 15: pantry.GetBucketItemRequest
	(*GetBucketItemResponse)(nil),    // 16: pantry.GetBucketItemResponse
	(*UpdateBucketItemRequest)(nil),  // 17: pantry.UpdateBucketItemRequest
	(*UpdateBucketItemResponse)(nil), // 18: pantry.UpdateBucketItemResponse
	(*DeleteBucketItemRequest)(nil),  // 19: pantry.DeleteBucketItemRequest
	(*DeleteBucketItemResponse)(nil), // 20: pantry.DeleteBucketItemResponse
	(*ListBucketItemsRequest)(nil),   // 21: pantry.ListBucketItemsRequest
	(*ListBucketItemsResponse)(nil),  // 22: pantry.ListBucketItemsResponse
	(*CreateExpenseLogRequest)(nil),  // 23: pantry.CreateExpenseLogRequest
	(*CreateExpenseLogResponse)(nil), // 24: pantry.CreateExpenseLogResponse
	(*GetExpenseLogRequest)(nil),     // 25: pantry.GetExpenseLogRequest
	(*GetExpenseLogResponse)(nil),    // 26: pantry.GetExpenseLogResponse
	(*UpdateExpenseLogRequest)(nil),  // 27: pantry.UpdateExpenseLogRequest
	(*UpdateExpenseLogResponse)(nil), // 28: pantry.UpdateExpenseLogResponse
	(*DeleteExpenseLogRequest)(nil),  // 29: pantry.DeleteExpenseLogRequest
	(*DeleteExpenseLogResponse)(nil), // 30: pantry.DeleteExpenseLogResponse
	(*ListExpenseLogsRequest)(nil),   // 31: pantry.ListExpenseLogsRequest
	(*ListExpenseLogsResponse)(nil),  // 32: pantry.ListExpenseLogsResponse
}
var file_pantry_proto_depIdxs = []int32{
	0,  // 0: pantry.CreatePantryItemRequest.item:type_name -> pantry.PantryItem
	0,  // 1: pantry.CreatePantryItemResponse.item:type_name -> pantry.PantryItem
	0,  // 2: pantry.GetPantryItemResponse.item:type_name -> pantry.PantryItem
	0,  // 3: pantry.UpdatePantryItemRequest.item:type_name -> pantry.PantryItem
	0,  // 4: pantry.UpdatePantryItemResponse.item:type_name -> pantry.PantryItem
	0,  // 5: pantry.ListPantryItemsResponse.items:type_name -> pantry.PantryItem
	1,  // 6: pantry.CreateBucketItemRequest.item:type_name -> pantry.BucketItem
	1,  // 7: pantry.CreateBucketItemResponse.item:type_name -> pantry.BucketItem
	1,  // 8: pantry.GetBucketItemResponse.item:type_name -> pantry.BucketItem
	1,  // 9: pantry.UpdateBucketItemRequest.item:type_name -> pantry.BucketItem
	1,  // 10: pantry.UpdateBucketItemResponse.item:type_name -> pantry.BucketItem
	1,  // 11: pantry.ListBucketItemsResponse.items:type_name -> pantry.BucketItem
	2,  // 12: pantry.CreateExpenseLogRequest.log:type_name -> pantry.ExpenseLog
	2,  // 13: pantry.CreateExpenseLogResponse.log:type_name -> pantry.ExpenseLog
	2,  // 14: pantry.GetExpenseLogResponse.log:type_name -> pantry.ExpenseLog
	2,  // 15: pantry.UpdateExpenseLogRequest.log:type_name -> pantry.ExpenseLog
	2,  // 16: pantry.UpdateExpenseLogResponse.log:type_name -> pantry.ExpenseLog
	2,  // 17: pantry.ListExpenseLogsResponse.logs:type_name -> pantry.ExpenseLog
	3,  // 18: pantry.PantryService.CreatePantryItem:input_type -> pantry.CreatePantryItemRequest
	5,  // 19: pantry.PantryService.GetPantryItem:input_type -> pantry.GetPantryItemRequest
	7,  // 20: pantry.PantryService.UpdatePantryItem:input_type -> pantry.UpdatePantryItemRequest
	9,  // 21: pantry.PantryService.DeletePantryItem:input_type -> pantry.DeletePantryItemRequest
	11, // 22: pantry.PantryService.ListPantryItems:input_type -> pantry.ListPantryItemsRequest
	13, // 23: pantry.PantryService.CreateBucketItem:input_type -> pantry.CreateBucketItemRequest
	15, // 24: pantry.PantryService.GetBucketItem:input_type -> pantry.GetBucketItemRequest
	17, // 25: pantry.PantryService.UpdateBucketItem:input_type -> pantry.UpdateBucketItemRequest
	19, // 26: pantry.PantryService.DeleteBucketItem:input_type -> pantry.DeleteBucketItemRequest
	21, // 27: pantry.PantryService.ListBucketItems:input_type -> pantry.ListBucketItemsRequest
	23, // 28: pantry.PantryService.CreateExpenseLog:input_type -> pantry.CreateExpenseLogRequest
	25, // 29: pantry.PantryService.GetExpenseLog:input_type -> pantry.GetExpenseLogRequest
	27, // 30: pantry.PantryService.UpdateExpenseLog:input_type -> pantry.UpdateExpenseLogRequest
	29, // 31: pantry.PantryService.DeleteExpenseLog:input_type -> pantry.DeleteExpenseLogRequest
	31, // 32: pantry.PantryService.ListExpenseLogs:input_type -> pantry.ListExpenseLogsRequest
	4,  // 33: pantry.PantryService.CreatePantryItem:output_type -> pantry.CreatePantryItemResponse
	6,  // 34: pantry.PantryService.GetPantryItem:output_type -> pantry.GetPantryItemResponse
	8,  // 35: pantry.PantryService.UpdatePantryItem:output_type -> pantry.UpdatePantryItemResponse
	10, // 36: pantry.PantryService.DeletePantryItem:output_type -> pantry.DeletePantryItemResponse
	12, // 37: pantry.PantryService.ListPantryItems:output_type -> pantry.ListPantryItemsResponse
	14, // 38: pantry.PantryService.CreateBucketItem:output_type -> pantry.CreateBucketItemResponse
	16, // 39: pantry.PantryService.GetBucketItem:output_type -> pantry.GetBucketItemResponse
	18, // 40: pantry.PantryService.UpdateBucketItem:output_type -> pantry.UpdateBucketItemResponse
	20, // 41: pantry.PantryService.DeleteBucketItem:output_type -> pantry.DeleteBucketItemResponse
	22, // 42: pantry.PantryService.ListBucketItems:output_type -> pantry.ListBucketItemsResponse
	24, // 43: pantry.PantryService.CreateExpenseLog:output_type -> pantry.CreateExpenseLogResponse
	26, // 44: pantry.PantryService.GetExpenseLog:output_type -> pantry.GetExpenseLogResponse
	28, // 45: pantry.PantryService.UpdateExpenseLog:output_type -> pantry.UpdateExpenseLogResponse
	30, // 46: pantry.PantryService.DeleteExpenseLog:output_type -> pantry.DeleteExpenseLogResponse
	32, // 47: pantry.PantryService.ListExpenseLogs:output_type -> pantry.ListExpenseLogsResponse
	33, // [33:48] is the sub-list for method output_type
	18, // [18:33] is the sub-list for method input_type
	18, // [18:18] is the sub-list for extension type_name
	18, // [18:18] is the sub-list for extension extendee
	0,  // [0:18] is the sub-list for field type_name
}

func init() { file_pantry_proto_init() }
func file_pantry_proto_init() {
	if File_pantry_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_pantry_proto_rawDesc), len(file_pantry_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   33,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pantry_proto_goTypes,
		DependencyIndexes: file_pantry_proto_depIdxs,
		MessageInfos:      file_pantry_proto_msgTypes,
	}.Build()
	File_pantry_proto = out.File
	file_pantry_proto_goTypes = nil
	file_pantry_proto_depIdxs = nil
}
