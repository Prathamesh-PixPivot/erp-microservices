// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.5.1
// - protoc             v6.30.0--rc2
// source: itsm.proto

package itsm

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.64.0 or later.
const _ = grpc.SupportPackageIsVersion9

const (
	ITSMService_CreateIncident_FullMethodName       = "/itsm.ITSMService/CreateIncident"
	ITSMService_GetIncident_FullMethodName          = "/itsm.ITSMService/GetIncident"
	ITSMService_UpdateIncident_FullMethodName       = "/itsm.ITSMService/UpdateIncident"
	ITSMService_ListIncidents_FullMethodName        = "/itsm.ITSMService/ListIncidents"
	ITSMService_CreateChange_FullMethodName         = "/itsm.ITSMService/CreateChange"
	ITSMService_GetChange_FullMethodName            = "/itsm.ITSMService/GetChange"
	ITSMService_UpdateChange_FullMethodName         = "/itsm.ITSMService/UpdateChange"
	ITSMService_ListChanges_FullMethodName          = "/itsm.ITSMService/ListChanges"
	ITSMService_CreateServiceRequest_FullMethodName = "/itsm.ITSMService/CreateServiceRequest"
	ITSMService_GetServiceRequest_FullMethodName    = "/itsm.ITSMService/GetServiceRequest"
	ITSMService_UpdateServiceRequest_FullMethodName = "/itsm.ITSMService/UpdateServiceRequest"
	ITSMService_ListServiceRequests_FullMethodName  = "/itsm.ITSMService/ListServiceRequests"
)

// ITSMServiceClient is the client API for ITSMService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
//
// ITSM service definition
type ITSMServiceClient interface {
	// Incident Management
	CreateIncident(ctx context.Context, in *CreateIncidentRequest, opts ...grpc.CallOption) (*CreateIncidentResponse, error)
	GetIncident(ctx context.Context, in *GetIncidentRequest, opts ...grpc.CallOption) (*GetIncidentResponse, error)
	UpdateIncident(ctx context.Context, in *UpdateIncidentRequest, opts ...grpc.CallOption) (*UpdateIncidentResponse, error)
	ListIncidents(ctx context.Context, in *ListIncidentsRequest, opts ...grpc.CallOption) (*ListIncidentsResponse, error)
	// Change Management
	CreateChange(ctx context.Context, in *CreateChangeRequest, opts ...grpc.CallOption) (*CreateChangeResponse, error)
	GetChange(ctx context.Context, in *GetChangeRequest, opts ...grpc.CallOption) (*GetChangeResponse, error)
	UpdateChange(ctx context.Context, in *UpdateChangeRequest, opts ...grpc.CallOption) (*UpdateChangeResponse, error)
	ListChanges(ctx context.Context, in *ListChangesRequest, opts ...grpc.CallOption) (*ListChangesResponse, error)
	// Service Request Management
	CreateServiceRequest(ctx context.Context, in *CreateServiceRequestRequest, opts ...grpc.CallOption) (*CreateServiceRequestResponse, error)
	GetServiceRequest(ctx context.Context, in *GetServiceRequestRequest, opts ...grpc.CallOption) (*GetServiceRequestResponse, error)
	UpdateServiceRequest(ctx context.Context, in *UpdateServiceRequestRequest, opts ...grpc.CallOption) (*UpdateServiceRequestResponse, error)
	ListServiceRequests(ctx context.Context, in *ListServiceRequestsRequest, opts ...grpc.CallOption) (*ListServiceRequestsResponse, error)
}

type iTSMServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewITSMServiceClient(cc grpc.ClientConnInterface) ITSMServiceClient {
	return &iTSMServiceClient{cc}
}

func (c *iTSMServiceClient) CreateIncident(ctx context.Context, in *CreateIncidentRequest, opts ...grpc.CallOption) (*CreateIncidentResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(CreateIncidentResponse)
	err := c.cc.Invoke(ctx, ITSMService_CreateIncident_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *iTSMServiceClient) GetIncident(ctx context.Context, in *GetIncidentRequest, opts ...grpc.CallOption) (*GetIncidentResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(GetIncidentResponse)
	err := c.cc.Invoke(ctx, ITSMService_GetIncident_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *iTSMServiceClient) UpdateIncident(ctx context.Context, in *UpdateIncidentRequest, opts ...grpc.CallOption) (*UpdateIncidentResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(UpdateIncidentResponse)
	err := c.cc.Invoke(ctx, ITSMService_UpdateIncident_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *iTSMServiceClient) ListIncidents(ctx context.Context, in *ListIncidentsRequest, opts ...grpc.CallOption) (*ListIncidentsResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(ListIncidentsResponse)
	err := c.cc.Invoke(ctx, ITSMService_ListIncidents_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *iTSMServiceClient) CreateChange(ctx context.Context, in *CreateChangeRequest, opts ...grpc.CallOption) (*CreateChangeResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(CreateChangeResponse)
	err := c.cc.Invoke(ctx, ITSMService_CreateChange_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *iTSMServiceClient) GetChange(ctx context.Context, in *GetChangeRequest, opts ...grpc.CallOption) (*GetChangeResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(GetChangeResponse)
	err := c.cc.Invoke(ctx, ITSMService_GetChange_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *iTSMServiceClient) UpdateChange(ctx context.Context, in *UpdateChangeRequest, opts ...grpc.CallOption) (*UpdateChangeResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(UpdateChangeResponse)
	err := c.cc.Invoke(ctx, ITSMService_UpdateChange_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *iTSMServiceClient) ListChanges(ctx context.Context, in *ListChangesRequest, opts ...grpc.CallOption) (*ListChangesResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(ListChangesResponse)
	err := c.cc.Invoke(ctx, ITSMService_ListChanges_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *iTSMServiceClient) CreateServiceRequest(ctx context.Context, in *CreateServiceRequestRequest, opts ...grpc.CallOption) (*CreateServiceRequestResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(CreateServiceRequestResponse)
	err := c.cc.Invoke(ctx, ITSMService_CreateServiceRequest_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *iTSMServiceClient) GetServiceRequest(ctx context.Context, in *GetServiceRequestRequest, opts ...grpc.CallOption) (*GetServiceRequestResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(GetServiceRequestResponse)
	err := c.cc.Invoke(ctx, ITSMService_GetServiceRequest_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *iTSMServiceClient) UpdateServiceRequest(ctx context.Context, in *UpdateServiceRequestRequest, opts ...grpc.CallOption) (*UpdateServiceRequestResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(UpdateServiceRequestResponse)
	err := c.cc.Invoke(ctx, ITSMService_UpdateServiceRequest_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *iTSMServiceClient) ListServiceRequests(ctx context.Context, in *ListServiceRequestsRequest, opts ...grpc.CallOption) (*ListServiceRequestsResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(ListServiceRequestsResponse)
	err := c.cc.Invoke(ctx, ITSMService_ListServiceRequests_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ITSMServiceServer is the server API for ITSMService service.
// All implementations must embed UnimplementedITSMServiceServer
// for forward compatibility.
//
// ITSM service definition
type ITSMServiceServer interface {
	// Incident Management
	CreateIncident(context.Context, *CreateIncidentRequest) (*CreateIncidentResponse, error)
	GetIncident(context.Context, *GetIncidentRequest) (*GetIncidentResponse, error)
	UpdateIncident(context.Context, *UpdateIncidentRequest) (*UpdateIncidentResponse, error)
	ListIncidents(context.Context, *ListIncidentsRequest) (*ListIncidentsResponse, error)
	// Change Management
	CreateChange(context.Context, *CreateChangeRequest) (*CreateChangeResponse, error)
	GetChange(context.Context, *GetChangeRequest) (*GetChangeResponse, error)
	UpdateChange(context.Context, *UpdateChangeRequest) (*UpdateChangeResponse, error)
	ListChanges(context.Context, *ListChangesRequest) (*ListChangesResponse, error)
	// Service Request Management
	CreateServiceRequest(context.Context, *CreateServiceRequestRequest) (*CreateServiceRequestResponse, error)
	GetServiceRequest(context.Context, *GetServiceRequestRequest) (*GetServiceRequestResponse, error)
	UpdateServiceRequest(context.Context, *UpdateServiceRequestRequest) (*UpdateServiceRequestResponse, error)
	ListServiceRequests(context.Context, *ListServiceRequestsRequest) (*ListServiceRequestsResponse, error)
	mustEmbedUnimplementedITSMServiceServer()
}

// UnimplementedITSMServiceServer must be embedded to have
// forward compatible implementations.
//
// NOTE: this should be embedded by value instead of pointer to avoid a nil
// pointer dereference when methods are called.
type UnimplementedITSMServiceServer struct{}

func (UnimplementedITSMServiceServer) CreateIncident(context.Context, *CreateIncidentRequest) (*CreateIncidentResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateIncident not implemented")
}
func (UnimplementedITSMServiceServer) GetIncident(context.Context, *GetIncidentRequest) (*GetIncidentResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetIncident not implemented")
}
func (UnimplementedITSMServiceServer) UpdateIncident(context.Context, *UpdateIncidentRequest) (*UpdateIncidentResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateIncident not implemented")
}
func (UnimplementedITSMServiceServer) ListIncidents(context.Context, *ListIncidentsRequest) (*ListIncidentsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListIncidents not implemented")
}
func (UnimplementedITSMServiceServer) CreateChange(context.Context, *CreateChangeRequest) (*CreateChangeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateChange not implemented")
}
func (UnimplementedITSMServiceServer) GetChange(context.Context, *GetChangeRequest) (*GetChangeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetChange not implemented")
}
func (UnimplementedITSMServiceServer) UpdateChange(context.Context, *UpdateChangeRequest) (*UpdateChangeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateChange not implemented")
}
func (UnimplementedITSMServiceServer) ListChanges(context.Context, *ListChangesRequest) (*ListChangesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListChanges not implemented")
}
func (UnimplementedITSMServiceServer) CreateServiceRequest(context.Context, *CreateServiceRequestRequest) (*CreateServiceRequestResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateServiceRequest not implemented")
}
func (UnimplementedITSMServiceServer) GetServiceRequest(context.Context, *GetServiceRequestRequest) (*GetServiceRequestResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetServiceRequest not implemented")
}
func (UnimplementedITSMServiceServer) UpdateServiceRequest(context.Context, *UpdateServiceRequestRequest) (*UpdateServiceRequestResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateServiceRequest not implemented")
}
func (UnimplementedITSMServiceServer) ListServiceRequests(context.Context, *ListServiceRequestsRequest) (*ListServiceRequestsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListServiceRequests not implemented")
}
func (UnimplementedITSMServiceServer) mustEmbedUnimplementedITSMServiceServer() {}
func (UnimplementedITSMServiceServer) testEmbeddedByValue()                     {}

// UnsafeITSMServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to ITSMServiceServer will
// result in compilation errors.
type UnsafeITSMServiceServer interface {
	mustEmbedUnimplementedITSMServiceServer()
}

func RegisterITSMServiceServer(s grpc.ServiceRegistrar, srv ITSMServiceServer) {
	// If the following call pancis, it indicates UnimplementedITSMServiceServer was
	// embedded by pointer and is nil.  This will cause panics if an
	// unimplemented method is ever invoked, so we test this at initialization
	// time to prevent it from happening at runtime later due to I/O.
	if t, ok := srv.(interface{ testEmbeddedByValue() }); ok {
		t.testEmbeddedByValue()
	}
	s.RegisterService(&ITSMService_ServiceDesc, srv)
}

func _ITSMService_CreateIncident_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateIncidentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ITSMServiceServer).CreateIncident(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: ITSMService_CreateIncident_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ITSMServiceServer).CreateIncident(ctx, req.(*CreateIncidentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ITSMService_GetIncident_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetIncidentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ITSMServiceServer).GetIncident(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: ITSMService_GetIncident_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ITSMServiceServer).GetIncident(ctx, req.(*GetIncidentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ITSMService_UpdateIncident_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateIncidentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ITSMServiceServer).UpdateIncident(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: ITSMService_UpdateIncident_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ITSMServiceServer).UpdateIncident(ctx, req.(*UpdateIncidentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ITSMService_ListIncidents_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListIncidentsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ITSMServiceServer).ListIncidents(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: ITSMService_ListIncidents_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ITSMServiceServer).ListIncidents(ctx, req.(*ListIncidentsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ITSMService_CreateChange_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateChangeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ITSMServiceServer).CreateChange(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: ITSMService_CreateChange_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ITSMServiceServer).CreateChange(ctx, req.(*CreateChangeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ITSMService_GetChange_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetChangeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ITSMServiceServer).GetChange(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: ITSMService_GetChange_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ITSMServiceServer).GetChange(ctx, req.(*GetChangeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ITSMService_UpdateChange_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateChangeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ITSMServiceServer).UpdateChange(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: ITSMService_UpdateChange_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ITSMServiceServer).UpdateChange(ctx, req.(*UpdateChangeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ITSMService_ListChanges_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListChangesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ITSMServiceServer).ListChanges(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: ITSMService_ListChanges_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ITSMServiceServer).ListChanges(ctx, req.(*ListChangesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ITSMService_CreateServiceRequest_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateServiceRequestRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ITSMServiceServer).CreateServiceRequest(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: ITSMService_CreateServiceRequest_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ITSMServiceServer).CreateServiceRequest(ctx, req.(*CreateServiceRequestRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ITSMService_GetServiceRequest_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetServiceRequestRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ITSMServiceServer).GetServiceRequest(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: ITSMService_GetServiceRequest_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ITSMServiceServer).GetServiceRequest(ctx, req.(*GetServiceRequestRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ITSMService_UpdateServiceRequest_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateServiceRequestRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ITSMServiceServer).UpdateServiceRequest(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: ITSMService_UpdateServiceRequest_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ITSMServiceServer).UpdateServiceRequest(ctx, req.(*UpdateServiceRequestRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ITSMService_ListServiceRequests_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListServiceRequestsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ITSMServiceServer).ListServiceRequests(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: ITSMService_ListServiceRequests_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ITSMServiceServer).ListServiceRequests(ctx, req.(*ListServiceRequestsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// ITSMService_ServiceDesc is the grpc.ServiceDesc for ITSMService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var ITSMService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "itsm.ITSMService",
	HandlerType: (*ITSMServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateIncident",
			Handler:    _ITSMService_CreateIncident_Handler,
		},
		{
			MethodName: "GetIncident",
			Handler:    _ITSMService_GetIncident_Handler,
		},
		{
			MethodName: "UpdateIncident",
			Handler:    _ITSMService_UpdateIncident_Handler,
		},
		{
			MethodName: "ListIncidents",
			Handler:    _ITSMService_ListIncidents_Handler,
		},
		{
			MethodName: "CreateChange",
			Handler:    _ITSMService_CreateChange_Handler,
		},
		{
			MethodName: "GetChange",
			Handler:    _ITSMService_GetChange_Handler,
		},
		{
			MethodName: "UpdateChange",
			Handler:    _ITSMService_UpdateChange_Handler,
		},
		{
			MethodName: "ListChanges",
			Handler:    _ITSMService_ListChanges_Handler,
		},
		{
			MethodName: "CreateServiceRequest",
			Handler:    _ITSMService_CreateServiceRequest_Handler,
		},
		{
			MethodName: "GetServiceRequest",
			Handler:    _ITSMService_GetServiceRequest_Handler,
		},
		{
			MethodName: "UpdateServiceRequest",
			Handler:    _ITSMService_UpdateServiceRequest_Handler,
		},
		{
			MethodName: "ListServiceRequests",
			Handler:    _ITSMService_ListServiceRequests_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "itsm.proto",
}
