// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v5.29.3
// source: proto/leave_policy.proto

package hrms

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Leave policy message
type LeavePolicy struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Id             uint64                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	OrganizationId uint64                 `protobuf:"varint,2,opt,name=organization_id,json=organizationId,proto3" json:"organization_id,omitempty"`
	LeaveType      LeaveType              `protobuf:"varint,3,opt,name=leave_type,json=leaveType,proto3,enum=hrms.LeaveType" json:"leave_type,omitempty"` // ✅ Use hrms.LeaveType
	MaxDays        int32                  `protobuf:"varint,4,opt,name=max_days,json=maxDays,proto3" json:"max_days,omitempty"`
	CarryForward   bool                   `protobuf:"varint,5,opt,name=carry_forward,json=carryForward,proto3" json:"carry_forward,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *LeavePolicy) Reset() {
	*x = LeavePolicy{}
	mi := &file_proto_leave_policy_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LeavePolicy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeavePolicy) ProtoMessage() {}

func (x *LeavePolicy) ProtoReflect() protoreflect.Message {
	mi := &file_proto_leave_policy_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeavePolicy.ProtoReflect.Descriptor instead.
func (*LeavePolicy) Descriptor() ([]byte, []int) {
	return file_proto_leave_policy_proto_rawDescGZIP(), []int{0}
}

func (x *LeavePolicy) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *LeavePolicy) GetOrganizationId() uint64 {
	if x != nil {
		return x.OrganizationId
	}
	return 0
}

func (x *LeavePolicy) GetLeaveType() LeaveType {
	if x != nil {
		return x.LeaveType
	}
	return LeaveType_UNDEFINED
}

func (x *LeavePolicy) GetMaxDays() int32 {
	if x != nil {
		return x.MaxDays
	}
	return 0
}

func (x *LeavePolicy) GetCarryForward() bool {
	if x != nil {
		return x.CarryForward
	}
	return false
}

// Request for creating a leave policy
type CreateLeavePolicyRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	OrganizationId uint64                 `protobuf:"varint,1,opt,name=organization_id,json=organizationId,proto3" json:"organization_id,omitempty"`
	LeaveType      LeaveType              `protobuf:"varint,2,opt,name=leave_type,json=leaveType,proto3,enum=hrms.LeaveType" json:"leave_type,omitempty"` // ✅ Use hrms.LeaveType
	MaxDays        int32                  `protobuf:"varint,3,opt,name=max_days,json=maxDays,proto3" json:"max_days,omitempty"`
	CarryForward   bool                   `protobuf:"varint,4,opt,name=carry_forward,json=carryForward,proto3" json:"carry_forward,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *CreateLeavePolicyRequest) Reset() {
	*x = CreateLeavePolicyRequest{}
	mi := &file_proto_leave_policy_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateLeavePolicyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateLeavePolicyRequest) ProtoMessage() {}

func (x *CreateLeavePolicyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_leave_policy_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateLeavePolicyRequest.ProtoReflect.Descriptor instead.
func (*CreateLeavePolicyRequest) Descriptor() ([]byte, []int) {
	return file_proto_leave_policy_proto_rawDescGZIP(), []int{1}
}

func (x *CreateLeavePolicyRequest) GetOrganizationId() uint64 {
	if x != nil {
		return x.OrganizationId
	}
	return 0
}

func (x *CreateLeavePolicyRequest) GetLeaveType() LeaveType {
	if x != nil {
		return x.LeaveType
	}
	return LeaveType_UNDEFINED
}

func (x *CreateLeavePolicyRequest) GetMaxDays() int32 {
	if x != nil {
		return x.MaxDays
	}
	return 0
}

func (x *CreateLeavePolicyRequest) GetCarryForward() bool {
	if x != nil {
		return x.CarryForward
	}
	return false
}

// Response containing leave policy details
type LeavePolicyResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Policy        *LeavePolicy           `protobuf:"bytes,1,opt,name=policy,proto3" json:"policy,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LeavePolicyResponse) Reset() {
	*x = LeavePolicyResponse{}
	mi := &file_proto_leave_policy_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LeavePolicyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeavePolicyResponse) ProtoMessage() {}

func (x *LeavePolicyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_leave_policy_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeavePolicyResponse.ProtoReflect.Descriptor instead.
func (*LeavePolicyResponse) Descriptor() ([]byte, []int) {
	return file_proto_leave_policy_proto_rawDescGZIP(), []int{2}
}

func (x *LeavePolicyResponse) GetPolicy() *LeavePolicy {
	if x != nil {
		return x.Policy
	}
	return nil
}

// Request to fetch a leave policy by ID
type GetLeavePolicyRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PolicyId      uint64                 `protobuf:"varint,1,opt,name=policy_id,json=policyId,proto3" json:"policy_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetLeavePolicyRequest) Reset() {
	*x = GetLeavePolicyRequest{}
	mi := &file_proto_leave_policy_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetLeavePolicyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLeavePolicyRequest) ProtoMessage() {}

func (x *GetLeavePolicyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_leave_policy_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLeavePolicyRequest.ProtoReflect.Descriptor instead.
func (*GetLeavePolicyRequest) Descriptor() ([]byte, []int) {
	return file_proto_leave_policy_proto_rawDescGZIP(), []int{3}
}

func (x *GetLeavePolicyRequest) GetPolicyId() uint64 {
	if x != nil {
		return x.PolicyId
	}
	return 0
}

// Request to list leave policies for an organization
type ListLeavePoliciesRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	OrganizationId uint64                 `protobuf:"varint,1,opt,name=organization_id,json=organizationId,proto3" json:"organization_id,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ListLeavePoliciesRequest) Reset() {
	*x = ListLeavePoliciesRequest{}
	mi := &file_proto_leave_policy_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListLeavePoliciesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListLeavePoliciesRequest) ProtoMessage() {}

func (x *ListLeavePoliciesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_leave_policy_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListLeavePoliciesRequest.ProtoReflect.Descriptor instead.
func (*ListLeavePoliciesRequest) Descriptor() ([]byte, []int) {
	return file_proto_leave_policy_proto_rawDescGZIP(), []int{4}
}

func (x *ListLeavePoliciesRequest) GetOrganizationId() uint64 {
	if x != nil {
		return x.OrganizationId
	}
	return 0
}

// Response containing a list of leave policies
type ListLeavePoliciesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Policies      []*LeavePolicy         `protobuf:"bytes,1,rep,name=policies,proto3" json:"policies,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListLeavePoliciesResponse) Reset() {
	*x = ListLeavePoliciesResponse{}
	mi := &file_proto_leave_policy_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListLeavePoliciesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListLeavePoliciesResponse) ProtoMessage() {}

func (x *ListLeavePoliciesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_leave_policy_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListLeavePoliciesResponse.ProtoReflect.Descriptor instead.
func (*ListLeavePoliciesResponse) Descriptor() ([]byte, []int) {
	return file_proto_leave_policy_proto_rawDescGZIP(), []int{5}
}

func (x *ListLeavePoliciesResponse) GetPolicies() []*LeavePolicy {
	if x != nil {
		return x.Policies
	}
	return nil
}

// Request to update leave policy fields
type UpdateLeavePolicyRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PolicyId      uint64                 `protobuf:"varint,1,opt,name=policy_id,json=policyId,proto3" json:"policy_id,omitempty"`
	MaxDays       *int32                 `protobuf:"varint,2,opt,name=max_days,json=maxDays,proto3,oneof" json:"max_days,omitempty"`
	CarryForward  *bool                  `protobuf:"varint,3,opt,name=carry_forward,json=carryForward,proto3,oneof" json:"carry_forward,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateLeavePolicyRequest) Reset() {
	*x = UpdateLeavePolicyRequest{}
	mi := &file_proto_leave_policy_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateLeavePolicyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateLeavePolicyRequest) ProtoMessage() {}

func (x *UpdateLeavePolicyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_leave_policy_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateLeavePolicyRequest.ProtoReflect.Descriptor instead.
func (*UpdateLeavePolicyRequest) Descriptor() ([]byte, []int) {
	return file_proto_leave_policy_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateLeavePolicyRequest) GetPolicyId() uint64 {
	if x != nil {
		return x.PolicyId
	}
	return 0
}

func (x *UpdateLeavePolicyRequest) GetMaxDays() int32 {
	if x != nil && x.MaxDays != nil {
		return *x.MaxDays
	}
	return 0
}

func (x *UpdateLeavePolicyRequest) GetCarryForward() bool {
	if x != nil && x.CarryForward != nil {
		return *x.CarryForward
	}
	return false
}

// Request to delete a leave policy
type DeleteLeavePolicyRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PolicyId      uint64                 `protobuf:"varint,1,opt,name=policy_id,json=policyId,proto3" json:"policy_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteLeavePolicyRequest) Reset() {
	*x = DeleteLeavePolicyRequest{}
	mi := &file_proto_leave_policy_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteLeavePolicyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteLeavePolicyRequest) ProtoMessage() {}

func (x *DeleteLeavePolicyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_leave_policy_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteLeavePolicyRequest.ProtoReflect.Descriptor instead.
func (*DeleteLeavePolicyRequest) Descriptor() ([]byte, []int) {
	return file_proto_leave_policy_proto_rawDescGZIP(), []int{7}
}

func (x *DeleteLeavePolicyRequest) GetPolicyId() uint64 {
	if x != nil {
		return x.PolicyId
	}
	return 0
}

var File_proto_leave_policy_proto protoreflect.FileDescriptor

var file_proto_leave_policy_proto_rawDesc = string([]byte{
	0x0a, 0x18, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6c, 0x65, 0x61, 0x76, 0x65, 0x5f, 0x70, 0x6f,
	0x6c, 0x69, 0x63, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x68, 0x72, 0x6d, 0x73,
	0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6c, 0x65, 0x61, 0x76, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0xb6, 0x01, 0x0a, 0x0b, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x27, 0x0a, 0x0f, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x6f, 0x72, 0x67, 0x61, 0x6e,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x0a, 0x6c, 0x65, 0x61,
	0x76, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e,
	0x68, 0x72, 0x6d, 0x73, 0x2e, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09,
	0x6c, 0x65, 0x61, 0x76, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x61, 0x78,
	0x5f, 0x64, 0x61, 0x79, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x6d, 0x61, 0x78,
	0x44, 0x61, 0x79, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x61, 0x72, 0x72, 0x79, 0x5f, 0x66, 0x6f,
	0x72, 0x77, 0x61, 0x72, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x63, 0x61, 0x72,
	0x72, 0x79, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x22, 0xb3, 0x01, 0x0a, 0x18, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12,
	0x2e, 0x0a, 0x0a, 0x6c, 0x65, 0x61, 0x76, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x68, 0x72, 0x6d, 0x73, 0x2e, 0x4c, 0x65, 0x61, 0x76, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x6c, 0x65, 0x61, 0x76, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x19, 0x0a, 0x08, 0x6d, 0x61, 0x78, 0x5f, 0x64, 0x61, 0x79, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x07, 0x6d, 0x61, 0x78, 0x44, 0x61, 0x79, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x61,
	0x72, 0x72, 0x79, 0x5f, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0c, 0x63, 0x61, 0x72, 0x72, 0x79, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x22,
	0x40, 0x0a, 0x13, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x29, 0x0a, 0x06, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x68, 0x72, 0x6d, 0x73, 0x2e, 0x4c, 0x65,
	0x61, 0x76, 0x65, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x06, 0x70, 0x6f, 0x6c, 0x69, 0x63,
	0x79, 0x22, 0x34, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x50, 0x6f, 0x6c,
	0x69, 0x63, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6f,
	0x6c, 0x69, 0x63, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x70,
	0x6f, 0x6c, 0x69, 0x63, 0x79, 0x49, 0x64, 0x22, 0x43, 0x0a, 0x18, 0x4c, 0x69, 0x73, 0x74, 0x4c,
	0x65, 0x61, 0x76, 0x65, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x6f, 0x72,
	0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x4a, 0x0a, 0x19,
	0x4c, 0x69, 0x73, 0x74, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2d, 0x0a, 0x08, 0x70, 0x6f, 0x6c,
	0x69, 0x63, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x68, 0x72,
	0x6d, 0x73, 0x2e, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x08,
	0x70, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x22, 0xa0, 0x01, 0x0a, 0x18, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79,
	0x49, 0x64, 0x12, 0x1e, 0x0a, 0x08, 0x6d, 0x61, 0x78, 0x5f, 0x64, 0x61, 0x79, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x07, 0x6d, 0x61, 0x78, 0x44, 0x61, 0x79, 0x73, 0x88,
	0x01, 0x01, 0x12, 0x28, 0x0a, 0x0d, 0x63, 0x61, 0x72, 0x72, 0x79, 0x5f, 0x66, 0x6f, 0x72, 0x77,
	0x61, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x48, 0x01, 0x52, 0x0c, 0x63, 0x61, 0x72,
	0x72, 0x79, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x88, 0x01, 0x01, 0x42, 0x0b, 0x0a, 0x09,
	0x5f, 0x6d, 0x61, 0x78, 0x5f, 0x64, 0x61, 0x79, 0x73, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x63, 0x61,
	0x72, 0x72, 0x79, 0x5f, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x22, 0x37, 0x0a, 0x18, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6f, 0x6c, 0x69, 0x63,
	0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x70, 0x6f, 0x6c, 0x69,
	0x63, 0x79, 0x49, 0x64, 0x32, 0x9e, 0x03, 0x0a, 0x12, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x50, 0x6f,
	0x6c, 0x69, 0x63, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x4e, 0x0a, 0x11, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79,
	0x12, 0x1e, 0x2e, 0x68, 0x72, 0x6d, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x65,
	0x61, 0x76, 0x65, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x19, 0x2e, 0x68, 0x72, 0x6d, 0x73, 0x2e, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x50, 0x6f, 0x6c,
	0x69, 0x63, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x48, 0x0a, 0x0e, 0x47,
	0x65, 0x74, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0x1b, 0x2e,
	0x68, 0x72, 0x6d, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x50, 0x6f, 0x6c,
	0x69, 0x63, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x68, 0x72, 0x6d,
	0x73, 0x2e, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x54, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x4c, 0x65, 0x61,
	0x76, 0x65, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x12, 0x1e, 0x2e, 0x68, 0x72, 0x6d,
	0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x50, 0x6f, 0x6c, 0x69, 0x63,
	0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x68, 0x72, 0x6d,
	0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x50, 0x6f, 0x6c, 0x69, 0x63,
	0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4b, 0x0a, 0x11, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79,
	0x12, 0x1e, 0x2e, 0x68, 0x72, 0x6d, 0x73, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x65,
	0x61, 0x76, 0x65, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x4b, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0x1e, 0x2e,
	0x68, 0x72, 0x6d, 0x73, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4c, 0x65, 0x61, 0x76, 0x65,
	0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x42, 0x11, 0x5a, 0x0f, 0x68, 0x72, 0x6d, 0x73, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x3b, 0x68, 0x72, 0x6d, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_proto_leave_policy_proto_rawDescOnce sync.Once
	file_proto_leave_policy_proto_rawDescData []byte
)

func file_proto_leave_policy_proto_rawDescGZIP() []byte {
	file_proto_leave_policy_proto_rawDescOnce.Do(func() {
		file_proto_leave_policy_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_leave_policy_proto_rawDesc), len(file_proto_leave_policy_proto_rawDesc)))
	})
	return file_proto_leave_policy_proto_rawDescData
}

var file_proto_leave_policy_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_proto_leave_policy_proto_goTypes = []any{
	(*LeavePolicy)(nil),               // 0: hrms.LeavePolicy
	(*CreateLeavePolicyRequest)(nil),  // 1: hrms.CreateLeavePolicyRequest
	(*LeavePolicyResponse)(nil),       // 2: hrms.LeavePolicyResponse
	(*GetLeavePolicyRequest)(nil),     // 3: hrms.GetLeavePolicyRequest
	(*ListLeavePoliciesRequest)(nil),  // 4: hrms.ListLeavePoliciesRequest
	(*ListLeavePoliciesResponse)(nil), // 5: hrms.ListLeavePoliciesResponse
	(*UpdateLeavePolicyRequest)(nil),  // 6: hrms.UpdateLeavePolicyRequest
	(*DeleteLeavePolicyRequest)(nil),  // 7: hrms.DeleteLeavePolicyRequest
	(LeaveType)(0),                    // 8: hrms.LeaveType
	(*emptypb.Empty)(nil),             // 9: google.protobuf.Empty
}
var file_proto_leave_policy_proto_depIdxs = []int32{
	8, // 0: hrms.LeavePolicy.leave_type:type_name -> hrms.LeaveType
	8, // 1: hrms.CreateLeavePolicyRequest.leave_type:type_name -> hrms.LeaveType
	0, // 2: hrms.LeavePolicyResponse.policy:type_name -> hrms.LeavePolicy
	0, // 3: hrms.ListLeavePoliciesResponse.policies:type_name -> hrms.LeavePolicy
	1, // 4: hrms.LeavePolicyService.CreateLeavePolicy:input_type -> hrms.CreateLeavePolicyRequest
	3, // 5: hrms.LeavePolicyService.GetLeavePolicy:input_type -> hrms.GetLeavePolicyRequest
	4, // 6: hrms.LeavePolicyService.ListLeavePolicies:input_type -> hrms.ListLeavePoliciesRequest
	6, // 7: hrms.LeavePolicyService.UpdateLeavePolicy:input_type -> hrms.UpdateLeavePolicyRequest
	7, // 8: hrms.LeavePolicyService.DeleteLeavePolicy:input_type -> hrms.DeleteLeavePolicyRequest
	2, // 9: hrms.LeavePolicyService.CreateLeavePolicy:output_type -> hrms.LeavePolicyResponse
	2, // 10: hrms.LeavePolicyService.GetLeavePolicy:output_type -> hrms.LeavePolicyResponse
	5, // 11: hrms.LeavePolicyService.ListLeavePolicies:output_type -> hrms.ListLeavePoliciesResponse
	9, // 12: hrms.LeavePolicyService.UpdateLeavePolicy:output_type -> google.protobuf.Empty
	9, // 13: hrms.LeavePolicyService.DeleteLeavePolicy:output_type -> google.protobuf.Empty
	9, // [9:14] is the sub-list for method output_type
	4, // [4:9] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_proto_leave_policy_proto_init() }
func file_proto_leave_policy_proto_init() {
	if File_proto_leave_policy_proto != nil {
		return
	}
	file_proto_leave_proto_init()
	file_proto_leave_policy_proto_msgTypes[6].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_leave_policy_proto_rawDesc), len(file_proto_leave_policy_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_leave_policy_proto_goTypes,
		DependencyIndexes: file_proto_leave_policy_proto_depIdxs,
		MessageInfos:      file_proto_leave_policy_proto_msgTypes,
	}.Build()
	File_proto_leave_policy_proto = out.File
	file_proto_leave_policy_proto_goTypes = nil
	file_proto_leave_policy_proto_depIdxs = nil
}
