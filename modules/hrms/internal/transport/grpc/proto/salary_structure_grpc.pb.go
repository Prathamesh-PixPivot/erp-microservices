// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.5.1
// - protoc             v5.29.3
// source: proto/salary_structure.proto

package hrms

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.64.0 or later.
const _ = grpc.SupportPackageIsVersion9

const (
	SalaryStructureService_CreateSalaryStructure_FullMethodName = "/hrms.SalaryStructureService/CreateSalaryStructure"
	SalaryStructureService_GetSalaryStructure_FullMethodName    = "/hrms.SalaryStructureService/GetSalaryStructure"
	SalaryStructureService_ListSalaryStructures_FullMethodName  = "/hrms.SalaryStructureService/ListSalaryStructures"
	SalaryStructureService_UpdateSalaryStructure_FullMethodName = "/hrms.SalaryStructureService/UpdateSalaryStructure"
	SalaryStructureService_DeleteSalaryStructure_FullMethodName = "/hrms.SalaryStructureService/DeleteSalaryStructure"
)

// SalaryStructureServiceClient is the client API for SalaryStructureService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
//
// Salary Structure service definition.
type SalaryStructureServiceClient interface {
	// Creates a new salary structure.
	CreateSalaryStructure(ctx context.Context, in *CreateSalaryStructureRequest, opts ...grpc.CallOption) (*SalaryStructureResponse, error)
	// Fetches a specific salary structure by ID.
	GetSalaryStructure(ctx context.Context, in *GetSalaryStructureRequest, opts ...grpc.CallOption) (*SalaryStructureResponse, error)
	// Retrieves all salary structures with optional organization or designation filters.
	ListSalaryStructures(ctx context.Context, in *ListSalaryStructuresRequest, opts ...grpc.CallOption) (*ListSalaryStructuresResponse, error)
	// Updates an existing salary structure.
	UpdateSalaryStructure(ctx context.Context, in *UpdateSalaryStructureRequest, opts ...grpc.CallOption) (*UpdateSalaryStructureResponse, error)
	// Deletes a salary structure.
	DeleteSalaryStructure(ctx context.Context, in *DeleteSalaryStructureRequest, opts ...grpc.CallOption) (*DeleteSalaryStructureResponse, error)
}

type salaryStructureServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewSalaryStructureServiceClient(cc grpc.ClientConnInterface) SalaryStructureServiceClient {
	return &salaryStructureServiceClient{cc}
}

func (c *salaryStructureServiceClient) CreateSalaryStructure(ctx context.Context, in *CreateSalaryStructureRequest, opts ...grpc.CallOption) (*SalaryStructureResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(SalaryStructureResponse)
	err := c.cc.Invoke(ctx, SalaryStructureService_CreateSalaryStructure_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *salaryStructureServiceClient) GetSalaryStructure(ctx context.Context, in *GetSalaryStructureRequest, opts ...grpc.CallOption) (*SalaryStructureResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(SalaryStructureResponse)
	err := c.cc.Invoke(ctx, SalaryStructureService_GetSalaryStructure_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *salaryStructureServiceClient) ListSalaryStructures(ctx context.Context, in *ListSalaryStructuresRequest, opts ...grpc.CallOption) (*ListSalaryStructuresResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(ListSalaryStructuresResponse)
	err := c.cc.Invoke(ctx, SalaryStructureService_ListSalaryStructures_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *salaryStructureServiceClient) UpdateSalaryStructure(ctx context.Context, in *UpdateSalaryStructureRequest, opts ...grpc.CallOption) (*UpdateSalaryStructureResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(UpdateSalaryStructureResponse)
	err := c.cc.Invoke(ctx, SalaryStructureService_UpdateSalaryStructure_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *salaryStructureServiceClient) DeleteSalaryStructure(ctx context.Context, in *DeleteSalaryStructureRequest, opts ...grpc.CallOption) (*DeleteSalaryStructureResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(DeleteSalaryStructureResponse)
	err := c.cc.Invoke(ctx, SalaryStructureService_DeleteSalaryStructure_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SalaryStructureServiceServer is the server API for SalaryStructureService service.
// All implementations must embed UnimplementedSalaryStructureServiceServer
// for forward compatibility.
//
// Salary Structure service definition.
type SalaryStructureServiceServer interface {
	// Creates a new salary structure.
	CreateSalaryStructure(context.Context, *CreateSalaryStructureRequest) (*SalaryStructureResponse, error)
	// Fetches a specific salary structure by ID.
	GetSalaryStructure(context.Context, *GetSalaryStructureRequest) (*SalaryStructureResponse, error)
	// Retrieves all salary structures with optional organization or designation filters.
	ListSalaryStructures(context.Context, *ListSalaryStructuresRequest) (*ListSalaryStructuresResponse, error)
	// Updates an existing salary structure.
	UpdateSalaryStructure(context.Context, *UpdateSalaryStructureRequest) (*UpdateSalaryStructureResponse, error)
	// Deletes a salary structure.
	DeleteSalaryStructure(context.Context, *DeleteSalaryStructureRequest) (*DeleteSalaryStructureResponse, error)
	mustEmbedUnimplementedSalaryStructureServiceServer()
}

// UnimplementedSalaryStructureServiceServer must be embedded to have
// forward compatible implementations.
//
// NOTE: this should be embedded by value instead of pointer to avoid a nil
// pointer dereference when methods are called.
type UnimplementedSalaryStructureServiceServer struct{}

func (UnimplementedSalaryStructureServiceServer) CreateSalaryStructure(context.Context, *CreateSalaryStructureRequest) (*SalaryStructureResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateSalaryStructure not implemented")
}
func (UnimplementedSalaryStructureServiceServer) GetSalaryStructure(context.Context, *GetSalaryStructureRequest) (*SalaryStructureResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetSalaryStructure not implemented")
}
func (UnimplementedSalaryStructureServiceServer) ListSalaryStructures(context.Context, *ListSalaryStructuresRequest) (*ListSalaryStructuresResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListSalaryStructures not implemented")
}
func (UnimplementedSalaryStructureServiceServer) UpdateSalaryStructure(context.Context, *UpdateSalaryStructureRequest) (*UpdateSalaryStructureResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateSalaryStructure not implemented")
}
func (UnimplementedSalaryStructureServiceServer) DeleteSalaryStructure(context.Context, *DeleteSalaryStructureRequest) (*DeleteSalaryStructureResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteSalaryStructure not implemented")
}
func (UnimplementedSalaryStructureServiceServer) mustEmbedUnimplementedSalaryStructureServiceServer() {
}
func (UnimplementedSalaryStructureServiceServer) testEmbeddedByValue() {}

// UnsafeSalaryStructureServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to SalaryStructureServiceServer will
// result in compilation errors.
type UnsafeSalaryStructureServiceServer interface {
	mustEmbedUnimplementedSalaryStructureServiceServer()
}

func RegisterSalaryStructureServiceServer(s grpc.ServiceRegistrar, srv SalaryStructureServiceServer) {
	// If the following call pancis, it indicates UnimplementedSalaryStructureServiceServer was
	// embedded by pointer and is nil.  This will cause panics if an
	// unimplemented method is ever invoked, so we test this at initialization
	// time to prevent it from happening at runtime later due to I/O.
	if t, ok := srv.(interface{ testEmbeddedByValue() }); ok {
		t.testEmbeddedByValue()
	}
	s.RegisterService(&SalaryStructureService_ServiceDesc, srv)
}

func _SalaryStructureService_CreateSalaryStructure_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateSalaryStructureRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SalaryStructureServiceServer).CreateSalaryStructure(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: SalaryStructureService_CreateSalaryStructure_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SalaryStructureServiceServer).CreateSalaryStructure(ctx, req.(*CreateSalaryStructureRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SalaryStructureService_GetSalaryStructure_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetSalaryStructureRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SalaryStructureServiceServer).GetSalaryStructure(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: SalaryStructureService_GetSalaryStructure_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SalaryStructureServiceServer).GetSalaryStructure(ctx, req.(*GetSalaryStructureRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SalaryStructureService_ListSalaryStructures_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListSalaryStructuresRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SalaryStructureServiceServer).ListSalaryStructures(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: SalaryStructureService_ListSalaryStructures_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SalaryStructureServiceServer).ListSalaryStructures(ctx, req.(*ListSalaryStructuresRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SalaryStructureService_UpdateSalaryStructure_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateSalaryStructureRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SalaryStructureServiceServer).UpdateSalaryStructure(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: SalaryStructureService_UpdateSalaryStructure_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SalaryStructureServiceServer).UpdateSalaryStructure(ctx, req.(*UpdateSalaryStructureRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SalaryStructureService_DeleteSalaryStructure_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteSalaryStructureRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SalaryStructureServiceServer).DeleteSalaryStructure(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: SalaryStructureService_DeleteSalaryStructure_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SalaryStructureServiceServer).DeleteSalaryStructure(ctx, req.(*DeleteSalaryStructureRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// SalaryStructureService_ServiceDesc is the grpc.ServiceDesc for SalaryStructureService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var SalaryStructureService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "hrms.SalaryStructureService",
	HandlerType: (*SalaryStructureServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateSalaryStructure",
			Handler:    _SalaryStructureService_CreateSalaryStructure_Handler,
		},
		{
			MethodName: "GetSalaryStructure",
			Handler:    _SalaryStructureService_GetSalaryStructure_Handler,
		},
		{
			MethodName: "ListSalaryStructures",
			Handler:    _SalaryStructureService_ListSalaryStructures_Handler,
		},
		{
			MethodName: "UpdateSalaryStructure",
			Handler:    _SalaryStructureService_UpdateSalaryStructure_Handler,
		},
		{
			MethodName: "DeleteSalaryStructure",
			Handler:    _SalaryStructureService_DeleteSalaryStructure_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/salary_structure.proto",
}
