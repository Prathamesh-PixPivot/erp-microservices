// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v5.29.3
// source: proto/bonus.proto

package hrms

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Bonus struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            uint64                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	EmployeeId    uint64                 `protobuf:"varint,2,opt,name=employee_id,json=employeeId,proto3" json:"employee_id,omitempty"`
	Amount        float64                `protobuf:"fixed64,3,opt,name=amount,proto3" json:"amount,omitempty"`
	BonusType     string                 `protobuf:"bytes,4,opt,name=bonus_type,json=bonusType,proto3" json:"bonus_type,omitempty"`
	Description   string                 `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	ApprovedBy    uint64                 `protobuf:"varint,6,opt,name=approved_by,json=approvedBy,proto3" json:"approved_by,omitempty"`
	ApprovalDate  *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=approval_date,json=approvalDate,proto3" json:"approval_date,omitempty"`
	IssueDate     *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=issue_date,json=issueDate,proto3" json:"issue_date,omitempty"`
	Status        string                 `protobuf:"bytes,9,opt,name=status,proto3" json:"status,omitempty"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt     *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Bonus) Reset() {
	*x = Bonus{}
	mi := &file_proto_bonus_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Bonus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Bonus) ProtoMessage() {}

func (x *Bonus) ProtoReflect() protoreflect.Message {
	mi := &file_proto_bonus_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Bonus.ProtoReflect.Descriptor instead.
func (*Bonus) Descriptor() ([]byte, []int) {
	return file_proto_bonus_proto_rawDescGZIP(), []int{0}
}

func (x *Bonus) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Bonus) GetEmployeeId() uint64 {
	if x != nil {
		return x.EmployeeId
	}
	return 0
}

func (x *Bonus) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *Bonus) GetBonusType() string {
	if x != nil {
		return x.BonusType
	}
	return ""
}

func (x *Bonus) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Bonus) GetApprovedBy() uint64 {
	if x != nil {
		return x.ApprovedBy
	}
	return 0
}

func (x *Bonus) GetApprovalDate() *timestamppb.Timestamp {
	if x != nil {
		return x.ApprovalDate
	}
	return nil
}

func (x *Bonus) GetIssueDate() *timestamppb.Timestamp {
	if x != nil {
		return x.IssueDate
	}
	return nil
}

func (x *Bonus) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *Bonus) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Bonus) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type CreateBonusRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	EmployeeId    uint64                 `protobuf:"varint,1,opt,name=employee_id,json=employeeId,proto3" json:"employee_id,omitempty"`
	Amount        float64                `protobuf:"fixed64,2,opt,name=amount,proto3" json:"amount,omitempty"`
	BonusType     string                 `protobuf:"bytes,3,opt,name=bonus_type,json=bonusType,proto3" json:"bonus_type,omitempty"`
	Description   string                 `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	ApprovedBy    uint64                 `protobuf:"varint,5,opt,name=approved_by,json=approvedBy,proto3" json:"approved_by,omitempty"`
	ApprovalDate  *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=approval_date,json=approvalDate,proto3" json:"approval_date,omitempty"`
	IssueDate     *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=issue_date,json=issueDate,proto3" json:"issue_date,omitempty"`
	Status        string                 `protobuf:"bytes,8,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateBonusRequest) Reset() {
	*x = CreateBonusRequest{}
	mi := &file_proto_bonus_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateBonusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateBonusRequest) ProtoMessage() {}

func (x *CreateBonusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_bonus_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateBonusRequest.ProtoReflect.Descriptor instead.
func (*CreateBonusRequest) Descriptor() ([]byte, []int) {
	return file_proto_bonus_proto_rawDescGZIP(), []int{1}
}

func (x *CreateBonusRequest) GetEmployeeId() uint64 {
	if x != nil {
		return x.EmployeeId
	}
	return 0
}

func (x *CreateBonusRequest) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *CreateBonusRequest) GetBonusType() string {
	if x != nil {
		return x.BonusType
	}
	return ""
}

func (x *CreateBonusRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CreateBonusRequest) GetApprovedBy() uint64 {
	if x != nil {
		return x.ApprovedBy
	}
	return 0
}

func (x *CreateBonusRequest) GetApprovalDate() *timestamppb.Timestamp {
	if x != nil {
		return x.ApprovalDate
	}
	return nil
}

func (x *CreateBonusRequest) GetIssueDate() *timestamppb.Timestamp {
	if x != nil {
		return x.IssueDate
	}
	return nil
}

func (x *CreateBonusRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type GetBonusRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            uint64                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetBonusRequest) Reset() {
	*x = GetBonusRequest{}
	mi := &file_proto_bonus_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetBonusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBonusRequest) ProtoMessage() {}

func (x *GetBonusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_bonus_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBonusRequest.ProtoReflect.Descriptor instead.
func (*GetBonusRequest) Descriptor() ([]byte, []int) {
	return file_proto_bonus_proto_rawDescGZIP(), []int{2}
}

func (x *GetBonusRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type ListBonusesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	EmployeeId    *uint64                `protobuf:"varint,1,opt,name=employee_id,json=employeeId,proto3,oneof" json:"employee_id,omitempty"`
	Status        *string                `protobuf:"bytes,2,opt,name=status,proto3,oneof" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListBonusesRequest) Reset() {
	*x = ListBonusesRequest{}
	mi := &file_proto_bonus_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListBonusesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListBonusesRequest) ProtoMessage() {}

func (x *ListBonusesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_bonus_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListBonusesRequest.ProtoReflect.Descriptor instead.
func (*ListBonusesRequest) Descriptor() ([]byte, []int) {
	return file_proto_bonus_proto_rawDescGZIP(), []int{3}
}

func (x *ListBonusesRequest) GetEmployeeId() uint64 {
	if x != nil && x.EmployeeId != nil {
		return *x.EmployeeId
	}
	return 0
}

func (x *ListBonusesRequest) GetStatus() string {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return ""
}

type ListBonusesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Bonuses       []*Bonus               `protobuf:"bytes,1,rep,name=bonuses,proto3" json:"bonuses,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListBonusesResponse) Reset() {
	*x = ListBonusesResponse{}
	mi := &file_proto_bonus_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListBonusesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListBonusesResponse) ProtoMessage() {}

func (x *ListBonusesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_bonus_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListBonusesResponse.ProtoReflect.Descriptor instead.
func (*ListBonusesResponse) Descriptor() ([]byte, []int) {
	return file_proto_bonus_proto_rawDescGZIP(), []int{4}
}

func (x *ListBonusesResponse) GetBonuses() []*Bonus {
	if x != nil {
		return x.Bonuses
	}
	return nil
}

type BonusResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Bonus         *Bonus                 `protobuf:"bytes,1,opt,name=bonus,proto3" json:"bonus,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BonusResponse) Reset() {
	*x = BonusResponse{}
	mi := &file_proto_bonus_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BonusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BonusResponse) ProtoMessage() {}

func (x *BonusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_bonus_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BonusResponse.ProtoReflect.Descriptor instead.
func (*BonusResponse) Descriptor() ([]byte, []int) {
	return file_proto_bonus_proto_rawDescGZIP(), []int{5}
}

func (x *BonusResponse) GetBonus() *Bonus {
	if x != nil {
		return x.Bonus
	}
	return nil
}

type UpdateBonusRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            uint64                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Status        *string                `protobuf:"bytes,2,opt,name=status,proto3,oneof" json:"status,omitempty"`
	ApprovalDate  *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=approval_date,json=approvalDate,proto3,oneof" json:"approval_date,omitempty"`
	Description   *string                `protobuf:"bytes,4,opt,name=description,proto3,oneof" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateBonusRequest) Reset() {
	*x = UpdateBonusRequest{}
	mi := &file_proto_bonus_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateBonusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateBonusRequest) ProtoMessage() {}

func (x *UpdateBonusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_bonus_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateBonusRequest.ProtoReflect.Descriptor instead.
func (*UpdateBonusRequest) Descriptor() ([]byte, []int) {
	return file_proto_bonus_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateBonusRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateBonusRequest) GetStatus() string {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return ""
}

func (x *UpdateBonusRequest) GetApprovalDate() *timestamppb.Timestamp {
	if x != nil {
		return x.ApprovalDate
	}
	return nil
}

func (x *UpdateBonusRequest) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

type DeleteBonusRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            uint64                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteBonusRequest) Reset() {
	*x = DeleteBonusRequest{}
	mi := &file_proto_bonus_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteBonusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteBonusRequest) ProtoMessage() {}

func (x *DeleteBonusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_bonus_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteBonusRequest.ProtoReflect.Descriptor instead.
func (*DeleteBonusRequest) Descriptor() ([]byte, []int) {
	return file_proto_bonus_proto_rawDescGZIP(), []int{7}
}

func (x *DeleteBonusRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

var File_proto_bonus_proto protoreflect.FileDescriptor

var file_proto_bonus_proto_rawDesc = string([]byte{
	0x0a, 0x11, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x62, 0x6f, 0x6e, 0x75, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x04, 0x68, 0x72, 0x6d, 0x73, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74,
	0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xbc, 0x03, 0x0a, 0x05, 0x42, 0x6f, 0x6e, 0x75,
	0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x65, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65,
	0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x6f,
	0x6e, 0x75, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x62, 0x6f, 0x6e, 0x75, 0x73, 0x54, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x61,
	0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x0a, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x64, 0x42, 0x79, 0x12, 0x3f, 0x0a, 0x0d,
	0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x0c, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x44, 0x61, 0x74, 0x65, 0x12, 0x39, 0x0a,
	0x0a, 0x69, 0x73, 0x73, 0x75, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x69,
	0x73, 0x73, 0x75, 0x65, 0x44, 0x61, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xc3, 0x02, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a,
	0x0b, 0x65, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0a, 0x65, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x49, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x6f, 0x6e, 0x75, 0x73, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x6f, 0x6e, 0x75,
	0x73, 0x54, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x70, 0x70, 0x72, 0x6f,
	0x76, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x61, 0x70,
	0x70, 0x72, 0x6f, 0x76, 0x65, 0x64, 0x42, 0x79, 0x12, 0x3f, 0x0a, 0x0d, 0x61, 0x70, 0x70, 0x72,
	0x6f, 0x76, 0x61, 0x6c, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0c, 0x61, 0x70, 0x70,
	0x72, 0x6f, 0x76, 0x61, 0x6c, 0x44, 0x61, 0x74, 0x65, 0x12, 0x39, 0x0a, 0x0a, 0x69, 0x73, 0x73,
	0x75, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x69, 0x73, 0x73, 0x75, 0x65,
	0x44, 0x61, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x21, 0x0a, 0x0f,
	0x47, 0x65, 0x74, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x22,
	0x72, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x65, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x0b, 0x65, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x48, 0x00, 0x52, 0x0a, 0x65, 0x6d,
	0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x88, 0x01, 0x01, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x65, 0x6d, 0x70,
	0x6c, 0x6f, 0x79, 0x65, 0x65, 0x5f, 0x69, 0x64, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x22, 0x3c, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x6f, 0x6e, 0x75, 0x73,
	0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x07, 0x62, 0x6f,
	0x6e, 0x75, 0x73, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x68, 0x72,
	0x6d, 0x73, 0x2e, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x52, 0x07, 0x62, 0x6f, 0x6e, 0x75, 0x73, 0x65,
	0x73, 0x22, 0x32, 0x0a, 0x0d, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x21, 0x0a, 0x05, 0x62, 0x6f, 0x6e, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0b, 0x2e, 0x68, 0x72, 0x6d, 0x73, 0x2e, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x52, 0x05,
	0x62, 0x6f, 0x6e, 0x75, 0x73, 0x22, 0xdb, 0x01, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x42, 0x6f, 0x6e, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x88, 0x01, 0x01, 0x12, 0x44, 0x0a, 0x0d, 0x61, 0x70, 0x70,
	0x72, 0x6f, 0x76, 0x61, 0x6c, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x48, 0x01, 0x52, 0x0c,
	0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x44, 0x61, 0x74, 0x65, 0x88, 0x01, 0x01, 0x12,
	0x25, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x5f, 0x64,
	0x61, 0x74, 0x65, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x22, 0x24, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x6f, 0x6e,
	0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x32, 0xce, 0x02, 0x0a, 0x0c, 0x42, 0x6f,
	0x6e, 0x75, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x3c, 0x0a, 0x0b, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x12, 0x18, 0x2e, 0x68, 0x72, 0x6d, 0x73,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x68, 0x72, 0x6d, 0x73, 0x2e, 0x42, 0x6f, 0x6e, 0x75, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3a, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x42,
	0x6f, 0x6e, 0x75, 0x73, 0x42, 0x79, 0x49, 0x44, 0x12, 0x15, 0x2e, 0x68, 0x72, 0x6d, 0x73, 0x2e,
	0x47, 0x65, 0x74, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x13, 0x2e, 0x68, 0x72, 0x6d, 0x73, 0x2e, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x42, 0x0a, 0x0b, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x6f, 0x6e, 0x75,
	0x73, 0x65, 0x73, 0x12, 0x18, 0x2e, 0x68, 0x72, 0x6d, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x42,
	0x6f, 0x6e, 0x75, 0x73, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e,
	0x68, 0x72, 0x6d, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x65, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x0b, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x12, 0x18, 0x2e, 0x68, 0x72, 0x6d, 0x73, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x3f, 0x0a, 0x0b, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x12, 0x18, 0x2e, 0x68, 0x72, 0x6d, 0x73, 0x2e,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x42, 0x11, 0x5a, 0x0f, 0x68, 0x72,
	0x6d, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x3b, 0x68, 0x72, 0x6d, 0x73, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_proto_bonus_proto_rawDescOnce sync.Once
	file_proto_bonus_proto_rawDescData []byte
)

func file_proto_bonus_proto_rawDescGZIP() []byte {
	file_proto_bonus_proto_rawDescOnce.Do(func() {
		file_proto_bonus_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_bonus_proto_rawDesc), len(file_proto_bonus_proto_rawDesc)))
	})
	return file_proto_bonus_proto_rawDescData
}

var file_proto_bonus_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_proto_bonus_proto_goTypes = []any{
	(*Bonus)(nil),                 // 0: hrms.Bonus
	(*CreateBonusRequest)(nil),    // 1: hrms.CreateBonusRequest
	(*GetBonusRequest)(nil),       // 2: hrms.GetBonusRequest
	(*ListBonusesRequest)(nil),    // 3: hrms.ListBonusesRequest
	(*ListBonusesResponse)(nil),   // 4: hrms.ListBonusesResponse
	(*BonusResponse)(nil),         // 5: hrms.BonusResponse
	(*UpdateBonusRequest)(nil),    // 6: hrms.UpdateBonusRequest
	(*DeleteBonusRequest)(nil),    // 7: hrms.DeleteBonusRequest
	(*timestamppb.Timestamp)(nil), // 8: google.protobuf.Timestamp
	(*emptypb.Empty)(nil),         // 9: google.protobuf.Empty
}
var file_proto_bonus_proto_depIdxs = []int32{
	8,  // 0: hrms.Bonus.approval_date:type_name -> google.protobuf.Timestamp
	8,  // 1: hrms.Bonus.issue_date:type_name -> google.protobuf.Timestamp
	8,  // 2: hrms.Bonus.created_at:type_name -> google.protobuf.Timestamp
	8,  // 3: hrms.Bonus.updated_at:type_name -> google.protobuf.Timestamp
	8,  // 4: hrms.CreateBonusRequest.approval_date:type_name -> google.protobuf.Timestamp
	8,  // 5: hrms.CreateBonusRequest.issue_date:type_name -> google.protobuf.Timestamp
	0,  // 6: hrms.ListBonusesResponse.bonuses:type_name -> hrms.Bonus
	0,  // 7: hrms.BonusResponse.bonus:type_name -> hrms.Bonus
	8,  // 8: hrms.UpdateBonusRequest.approval_date:type_name -> google.protobuf.Timestamp
	1,  // 9: hrms.BonusService.CreateBonus:input_type -> hrms.CreateBonusRequest
	2,  // 10: hrms.BonusService.GetBonusByID:input_type -> hrms.GetBonusRequest
	3,  // 11: hrms.BonusService.ListBonuses:input_type -> hrms.ListBonusesRequest
	6,  // 12: hrms.BonusService.UpdateBonus:input_type -> hrms.UpdateBonusRequest
	7,  // 13: hrms.BonusService.DeleteBonus:input_type -> hrms.DeleteBonusRequest
	5,  // 14: hrms.BonusService.CreateBonus:output_type -> hrms.BonusResponse
	5,  // 15: hrms.BonusService.GetBonusByID:output_type -> hrms.BonusResponse
	4,  // 16: hrms.BonusService.ListBonuses:output_type -> hrms.ListBonusesResponse
	9,  // 17: hrms.BonusService.UpdateBonus:output_type -> google.protobuf.Empty
	9,  // 18: hrms.BonusService.DeleteBonus:output_type -> google.protobuf.Empty
	14, // [14:19] is the sub-list for method output_type
	9,  // [9:14] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_proto_bonus_proto_init() }
func file_proto_bonus_proto_init() {
	if File_proto_bonus_proto != nil {
		return
	}
	file_proto_bonus_proto_msgTypes[3].OneofWrappers = []any{}
	file_proto_bonus_proto_msgTypes[6].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_bonus_proto_rawDesc), len(file_proto_bonus_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_bonus_proto_goTypes,
		DependencyIndexes: file_proto_bonus_proto_depIdxs,
		MessageInfos:      file_proto_bonus_proto_msgTypes,
	}.Build()
	File_proto_bonus_proto = out.File
	file_proto_bonus_proto_goTypes = nil
	file_proto_bonus_proto_depIdxs = nil
}
