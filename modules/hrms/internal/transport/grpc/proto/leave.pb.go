// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v5.29.3
// source: proto/leave.proto

package hrms

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Enum for leave status
type LeaveStatus int32

const (
	LeaveStatus_PENDING  LeaveStatus = 0
	LeaveStatus_APPROVED LeaveStatus = 1
	LeaveStatus_REJECTED LeaveStatus = 2
)

// Enum value maps for LeaveStatus.
var (
	LeaveStatus_name = map[int32]string{
		0: "PENDING",
		1: "APPROVED",
		2: "REJECTED",
	}
	LeaveStatus_value = map[string]int32{
		"PENDING":  0,
		"APPROVED": 1,
		"REJECTED": 2,
	}
)

func (x LeaveStatus) Enum() *LeaveStatus {
	p := new(LeaveStatus)
	*p = x
	return p
}

func (x LeaveStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LeaveStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_leave_proto_enumTypes[0].Descriptor()
}

func (LeaveStatus) Type() protoreflect.EnumType {
	return &file_proto_leave_proto_enumTypes[0]
}

func (x LeaveStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LeaveStatus.Descriptor instead.
func (LeaveStatus) EnumDescriptor() ([]byte, []int) {
	return file_proto_leave_proto_rawDescGZIP(), []int{0}
}

// Enum for leave types (Keep it here)
type LeaveType int32

const (
	LeaveType_UNDEFINED       LeaveType = 0
	LeaveType_SICK_LEAVE      LeaveType = 1
	LeaveType_CASUAL_LEAVE    LeaveType = 2
	LeaveType_ANNUAL_LEAVE    LeaveType = 3
	LeaveType_MATERNITY_LEAVE LeaveType = 4
	LeaveType_PATERNITY_LEAVE LeaveType = 5
)

// Enum value maps for LeaveType.
var (
	LeaveType_name = map[int32]string{
		0: "UNDEFINED",
		1: "SICK_LEAVE",
		2: "CASUAL_LEAVE",
		3: "ANNUAL_LEAVE",
		4: "MATERNITY_LEAVE",
		5: "PATERNITY_LEAVE",
	}
	LeaveType_value = map[string]int32{
		"UNDEFINED":       0,
		"SICK_LEAVE":      1,
		"CASUAL_LEAVE":    2,
		"ANNUAL_LEAVE":    3,
		"MATERNITY_LEAVE": 4,
		"PATERNITY_LEAVE": 5,
	}
)

func (x LeaveType) Enum() *LeaveType {
	p := new(LeaveType)
	*p = x
	return p
}

func (x LeaveType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LeaveType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_leave_proto_enumTypes[1].Descriptor()
}

func (LeaveType) Type() protoreflect.EnumType {
	return &file_proto_leave_proto_enumTypes[1]
}

func (x LeaveType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LeaveType.Descriptor instead.
func (LeaveType) EnumDescriptor() ([]byte, []int) {
	return file_proto_leave_proto_rawDescGZIP(), []int{1}
}

// Leave request message
type Leave struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            uint64                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	EmployeeId    uint64                 `protobuf:"varint,2,opt,name=employee_id,json=employeeId,proto3" json:"employee_id,omitempty"`
	LeaveType     LeaveType              `protobuf:"varint,3,opt,name=leave_type,json=leaveType,proto3,enum=hrms.LeaveType" json:"leave_type,omitempty"`
	StartDate     *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty"`
	EndDate       *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=end_date,json=endDate,proto3" json:"end_date,omitempty"`
	Status        LeaveStatus            `protobuf:"varint,6,opt,name=status,proto3,enum=hrms.LeaveStatus" json:"status,omitempty"`
	ApproverId    *uint64                `protobuf:"varint,7,opt,name=approver_id,json=approverId,proto3,oneof" json:"approver_id,omitempty"`
	Comments      *string                `protobuf:"bytes,8,opt,name=comments,proto3,oneof" json:"comments,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Leave) Reset() {
	*x = Leave{}
	mi := &file_proto_leave_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Leave) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Leave) ProtoMessage() {}

func (x *Leave) ProtoReflect() protoreflect.Message {
	mi := &file_proto_leave_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Leave.ProtoReflect.Descriptor instead.
func (*Leave) Descriptor() ([]byte, []int) {
	return file_proto_leave_proto_rawDescGZIP(), []int{0}
}

func (x *Leave) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Leave) GetEmployeeId() uint64 {
	if x != nil {
		return x.EmployeeId
	}
	return 0
}

func (x *Leave) GetLeaveType() LeaveType {
	if x != nil {
		return x.LeaveType
	}
	return LeaveType_UNDEFINED
}

func (x *Leave) GetStartDate() *timestamppb.Timestamp {
	if x != nil {
		return x.StartDate
	}
	return nil
}

func (x *Leave) GetEndDate() *timestamppb.Timestamp {
	if x != nil {
		return x.EndDate
	}
	return nil
}

func (x *Leave) GetStatus() LeaveStatus {
	if x != nil {
		return x.Status
	}
	return LeaveStatus_PENDING
}

func (x *Leave) GetApproverId() uint64 {
	if x != nil && x.ApproverId != nil {
		return *x.ApproverId
	}
	return 0
}

func (x *Leave) GetComments() string {
	if x != nil && x.Comments != nil {
		return *x.Comments
	}
	return ""
}

// Request for creating a leave request
type CreateLeaveRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	EmployeeId    uint64                 `protobuf:"varint,1,opt,name=employee_id,json=employeeId,proto3" json:"employee_id,omitempty"`
	LeaveType     LeaveType              `protobuf:"varint,2,opt,name=leave_type,json=leaveType,proto3,enum=hrms.LeaveType" json:"leave_type,omitempty"`
	StartDate     *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty"`
	EndDate       *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=end_date,json=endDate,proto3" json:"end_date,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateLeaveRequest) Reset() {
	*x = CreateLeaveRequest{}
	mi := &file_proto_leave_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateLeaveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateLeaveRequest) ProtoMessage() {}

func (x *CreateLeaveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_leave_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateLeaveRequest.ProtoReflect.Descriptor instead.
func (*CreateLeaveRequest) Descriptor() ([]byte, []int) {
	return file_proto_leave_proto_rawDescGZIP(), []int{1}
}

func (x *CreateLeaveRequest) GetEmployeeId() uint64 {
	if x != nil {
		return x.EmployeeId
	}
	return 0
}

func (x *CreateLeaveRequest) GetLeaveType() LeaveType {
	if x != nil {
		return x.LeaveType
	}
	return LeaveType_UNDEFINED
}

func (x *CreateLeaveRequest) GetStartDate() *timestamppb.Timestamp {
	if x != nil {
		return x.StartDate
	}
	return nil
}

func (x *CreateLeaveRequest) GetEndDate() *timestamppb.Timestamp {
	if x != nil {
		return x.EndDate
	}
	return nil
}

// Response containing leave details
type LeaveResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Leave         *Leave                 `protobuf:"bytes,1,opt,name=leave,proto3" json:"leave,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LeaveResponse) Reset() {
	*x = LeaveResponse{}
	mi := &file_proto_leave_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LeaveResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeaveResponse) ProtoMessage() {}

func (x *LeaveResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_leave_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeaveResponse.ProtoReflect.Descriptor instead.
func (*LeaveResponse) Descriptor() ([]byte, []int) {
	return file_proto_leave_proto_rawDescGZIP(), []int{2}
}

func (x *LeaveResponse) GetLeave() *Leave {
	if x != nil {
		return x.Leave
	}
	return nil
}

// Request to fetch a leave request by ID
type GetLeaveRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	LeaveId       uint64                 `protobuf:"varint,1,opt,name=leave_id,json=leaveId,proto3" json:"leave_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetLeaveRequest) Reset() {
	*x = GetLeaveRequest{}
	mi := &file_proto_leave_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetLeaveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLeaveRequest) ProtoMessage() {}

func (x *GetLeaveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_leave_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLeaveRequest.ProtoReflect.Descriptor instead.
func (*GetLeaveRequest) Descriptor() ([]byte, []int) {
	return file_proto_leave_proto_rawDescGZIP(), []int{3}
}

func (x *GetLeaveRequest) GetLeaveId() uint64 {
	if x != nil {
		return x.LeaveId
	}
	return 0
}

// Request to update the status of a leave request
type UpdateLeaveStatusRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	LeaveId       uint64                 `protobuf:"varint,1,opt,name=leave_id,json=leaveId,proto3" json:"leave_id,omitempty"`
	ApproverId    uint64                 `protobuf:"varint,2,opt,name=approver_id,json=approverId,proto3" json:"approver_id,omitempty"`
	Status        LeaveStatus            `protobuf:"varint,3,opt,name=status,proto3,enum=hrms.LeaveStatus" json:"status,omitempty"`
	Comments      *string                `protobuf:"bytes,4,opt,name=comments,proto3,oneof" json:"comments,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateLeaveStatusRequest) Reset() {
	*x = UpdateLeaveStatusRequest{}
	mi := &file_proto_leave_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateLeaveStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateLeaveStatusRequest) ProtoMessage() {}

func (x *UpdateLeaveStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_leave_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateLeaveStatusRequest.ProtoReflect.Descriptor instead.
func (*UpdateLeaveStatusRequest) Descriptor() ([]byte, []int) {
	return file_proto_leave_proto_rawDescGZIP(), []int{4}
}

func (x *UpdateLeaveStatusRequest) GetLeaveId() uint64 {
	if x != nil {
		return x.LeaveId
	}
	return 0
}

func (x *UpdateLeaveStatusRequest) GetApproverId() uint64 {
	if x != nil {
		return x.ApproverId
	}
	return 0
}

func (x *UpdateLeaveStatusRequest) GetStatus() LeaveStatus {
	if x != nil {
		return x.Status
	}
	return LeaveStatus_PENDING
}

func (x *UpdateLeaveStatusRequest) GetComments() string {
	if x != nil && x.Comments != nil {
		return *x.Comments
	}
	return ""
}

// Request to list leave requests with filters
type ListLeavesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	EmployeeId    *uint64                `protobuf:"varint,1,opt,name=employee_id,json=employeeId,proto3,oneof" json:"employee_id,omitempty"`
	Status        *LeaveStatus           `protobuf:"varint,2,opt,name=status,proto3,enum=hrms.LeaveStatus,oneof" json:"status,omitempty"`
	StartDate     *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=start_date,json=startDate,proto3,oneof" json:"start_date,omitempty"`
	EndDate       *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=end_date,json=endDate,proto3,oneof" json:"end_date,omitempty"`
	Limit         int32                  `protobuf:"varint,5,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset        int32                  `protobuf:"varint,6,opt,name=offset,proto3" json:"offset,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListLeavesRequest) Reset() {
	*x = ListLeavesRequest{}
	mi := &file_proto_leave_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListLeavesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListLeavesRequest) ProtoMessage() {}

func (x *ListLeavesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_leave_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListLeavesRequest.ProtoReflect.Descriptor instead.
func (*ListLeavesRequest) Descriptor() ([]byte, []int) {
	return file_proto_leave_proto_rawDescGZIP(), []int{5}
}

func (x *ListLeavesRequest) GetEmployeeId() uint64 {
	if x != nil && x.EmployeeId != nil {
		return *x.EmployeeId
	}
	return 0
}

func (x *ListLeavesRequest) GetStatus() LeaveStatus {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return LeaveStatus_PENDING
}

func (x *ListLeavesRequest) GetStartDate() *timestamppb.Timestamp {
	if x != nil {
		return x.StartDate
	}
	return nil
}

func (x *ListLeavesRequest) GetEndDate() *timestamppb.Timestamp {
	if x != nil {
		return x.EndDate
	}
	return nil
}

func (x *ListLeavesRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListLeavesRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

// Response containing a list of leave requests
type ListLeavesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Leaves        []*Leave               `protobuf:"bytes,1,rep,name=leaves,proto3" json:"leaves,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListLeavesResponse) Reset() {
	*x = ListLeavesResponse{}
	mi := &file_proto_leave_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListLeavesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListLeavesResponse) ProtoMessage() {}

func (x *ListLeavesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_leave_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListLeavesResponse.ProtoReflect.Descriptor instead.
func (*ListLeavesResponse) Descriptor() ([]byte, []int) {
	return file_proto_leave_proto_rawDescGZIP(), []int{6}
}

func (x *ListLeavesResponse) GetLeaves() []*Leave {
	if x != nil {
		return x.Leaves
	}
	return nil
}

// Request to delete a leave request
type DeleteLeaveRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	LeaveId       uint64                 `protobuf:"varint,1,opt,name=leave_id,json=leaveId,proto3" json:"leave_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteLeaveRequest) Reset() {
	*x = DeleteLeaveRequest{}
	mi := &file_proto_leave_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteLeaveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteLeaveRequest) ProtoMessage() {}

func (x *DeleteLeaveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_leave_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteLeaveRequest.ProtoReflect.Descriptor instead.
func (*DeleteLeaveRequest) Descriptor() ([]byte, []int) {
	return file_proto_leave_proto_rawDescGZIP(), []int{7}
}

func (x *DeleteLeaveRequest) GetLeaveId() uint64 {
	if x != nil {
		return x.LeaveId
	}
	return 0
}

var File_proto_leave_proto protoreflect.FileDescriptor

var file_proto_leave_proto_rawDesc = string([]byte{
	0x0a, 0x11, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6c, 0x65, 0x61, 0x76, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x04, 0x68, 0x72, 0x6d, 0x73, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74,
	0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xe9, 0x02, 0x0a, 0x05, 0x4c, 0x65, 0x61, 0x76,
	0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x65, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65,
	0x49, 0x64, 0x12, 0x2e, 0x0a, 0x0a, 0x6c, 0x65, 0x61, 0x76, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x68, 0x72, 0x6d, 0x73, 0x2e, 0x4c, 0x65,
	0x61, 0x76, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x6c, 0x65, 0x61, 0x76, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x39, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x35, 0x0a,
	0x08, 0x65, 0x6e, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x65, 0x6e, 0x64,
	0x44, 0x61, 0x74, 0x65, 0x12, 0x29, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x68, 0x72, 0x6d, 0x73, 0x2e, 0x4c, 0x65, 0x61, 0x76,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x24, 0x0a, 0x0b, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x04, 0x48, 0x00, 0x52, 0x0a, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x72,
	0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x08, 0x63, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x88, 0x01, 0x01, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f,
	0x76, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x22, 0xd7, 0x01, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x65,
	0x61, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x6d,
	0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0a, 0x65, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x0a, 0x6c,
	0x65, 0x61, 0x76, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x0f, 0x2e, 0x68, 0x72, 0x6d, 0x73, 0x2e, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x09, 0x6c, 0x65, 0x61, 0x76, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x39, 0x0a, 0x0a, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x35, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x64, 0x61,
	0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x22, 0x32, 0x0a,
	0x0d, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x21,
	0x0a, 0x05, 0x6c, 0x65, 0x61, 0x76, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e,
	0x68, 0x72, 0x6d, 0x73, 0x2e, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x52, 0x05, 0x6c, 0x65, 0x61, 0x76,
	0x65, 0x22, 0x2c, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x6c, 0x65, 0x61, 0x76, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x6c, 0x65, 0x61, 0x76, 0x65, 0x49, 0x64, 0x22,
	0xaf, 0x01, 0x0a, 0x18, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08,
	0x6c, 0x65, 0x61, 0x76, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07,
	0x6c, 0x65, 0x61, 0x76, 0x65, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x70, 0x70, 0x72, 0x6f,
	0x76, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x61, 0x70,
	0x70, 0x72, 0x6f, 0x76, 0x65, 0x72, 0x49, 0x64, 0x12, 0x29, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x68, 0x72, 0x6d, 0x73, 0x2e,
	0x4c, 0x65, 0x61, 0x76, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x1f, 0x0a, 0x08, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x08, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x88, 0x01, 0x01, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x22, 0xca, 0x02, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x0b, 0x65, 0x6d, 0x70, 0x6c, 0x6f,
	0x79, 0x65, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x48, 0x00, 0x52, 0x0a,
	0x65, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x2e, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e,
	0x68, 0x72, 0x6d, 0x73, 0x2e, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x48, 0x01, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x88, 0x01, 0x01, 0x12, 0x3e, 0x0a,
	0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x48, 0x02, 0x52,
	0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x88, 0x01, 0x01, 0x12, 0x3a, 0x0a,
	0x08, 0x65, 0x6e, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x48, 0x03, 0x52, 0x07, 0x65,
	0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x88, 0x01, 0x01, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d,
	0x69, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x65, 0x6d, 0x70, 0x6c,
	0x6f, 0x79, 0x65, 0x65, 0x5f, 0x69, 0x64, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x64, 0x61, 0x74,
	0x65, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x65, 0x6e, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x22, 0x39,
	0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x23, 0x0a, 0x06, 0x6c, 0x65, 0x61, 0x76, 0x65, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x68, 0x72, 0x6d, 0x73, 0x2e, 0x4c, 0x65, 0x61, 0x76,
	0x65, 0x52, 0x06, 0x6c, 0x65, 0x61, 0x76, 0x65, 0x73, 0x22, 0x2f, 0x0a, 0x12, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x19, 0x0a, 0x08, 0x6c, 0x65, 0x61, 0x76, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x07, 0x6c, 0x65, 0x61, 0x76, 0x65, 0x49, 0x64, 0x2a, 0x36, 0x0a, 0x0b, 0x4c, 0x65,
	0x61, 0x76, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0b, 0x0a, 0x07, 0x50, 0x45, 0x4e,
	0x44, 0x49, 0x4e, 0x47, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x41, 0x50, 0x50, 0x52, 0x4f, 0x56,
	0x45, 0x44, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x52, 0x45, 0x4a, 0x45, 0x43, 0x54, 0x45, 0x44,
	0x10, 0x02, 0x2a, 0x78, 0x0a, 0x09, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x0d, 0x0a, 0x09, 0x55, 0x4e, 0x44, 0x45, 0x46, 0x49, 0x4e, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0e,
	0x0a, 0x0a, 0x53, 0x49, 0x43, 0x4b, 0x5f, 0x4c, 0x45, 0x41, 0x56, 0x45, 0x10, 0x01, 0x12, 0x10,
	0x0a, 0x0c, 0x43, 0x41, 0x53, 0x55, 0x41, 0x4c, 0x5f, 0x4c, 0x45, 0x41, 0x56, 0x45, 0x10, 0x02,
	0x12, 0x10, 0x0a, 0x0c, 0x41, 0x4e, 0x4e, 0x55, 0x41, 0x4c, 0x5f, 0x4c, 0x45, 0x41, 0x56, 0x45,
	0x10, 0x03, 0x12, 0x13, 0x0a, 0x0f, 0x4d, 0x41, 0x54, 0x45, 0x52, 0x4e, 0x49, 0x54, 0x59, 0x5f,
	0x4c, 0x45, 0x41, 0x56, 0x45, 0x10, 0x04, 0x12, 0x13, 0x0a, 0x0f, 0x50, 0x41, 0x54, 0x45, 0x52,
	0x4e, 0x49, 0x54, 0x59, 0x5f, 0x4c, 0x45, 0x41, 0x56, 0x45, 0x10, 0x05, 0x32, 0xd3, 0x02, 0x0a,
	0x0c, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x3c, 0x0a,
	0x0b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x12, 0x18, 0x2e, 0x68,
	0x72, 0x6d, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x68, 0x72, 0x6d, 0x73, 0x2e, 0x4c, 0x65,
	0x61, 0x76, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a, 0x08, 0x47,
	0x65, 0x74, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x12, 0x15, 0x2e, 0x68, 0x72, 0x6d, 0x73, 0x2e, 0x47,
	0x65, 0x74, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13,
	0x2e, 0x68, 0x72, 0x6d, 0x73, 0x2e, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x4b, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x65, 0x61,
	0x76, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1e, 0x2e, 0x68, 0x72, 0x6d, 0x73, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x12, 0x3f, 0x0a, 0x0a, 0x4c, 0x69, 0x73, 0x74, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x73, 0x12, 0x17,
	0x2e, 0x68, 0x72, 0x6d, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x68, 0x72, 0x6d, 0x73, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x3f, 0x0a, 0x0b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4c, 0x65, 0x61, 0x76, 0x65,
	0x12, 0x18, 0x2e, 0x68, 0x72, 0x6d, 0x73, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4c, 0x65,
	0x61, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x42, 0x11, 0x5a, 0x0f, 0x68, 0x72, 0x6d, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x3b, 0x68, 0x72, 0x6d, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_proto_leave_proto_rawDescOnce sync.Once
	file_proto_leave_proto_rawDescData []byte
)

func file_proto_leave_proto_rawDescGZIP() []byte {
	file_proto_leave_proto_rawDescOnce.Do(func() {
		file_proto_leave_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_leave_proto_rawDesc), len(file_proto_leave_proto_rawDesc)))
	})
	return file_proto_leave_proto_rawDescData
}

var file_proto_leave_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_proto_leave_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_proto_leave_proto_goTypes = []any{
	(LeaveStatus)(0),                 // 0: hrms.LeaveStatus
	(LeaveType)(0),                   // 1: hrms.LeaveType
	(*Leave)(nil),                    // 2: hrms.Leave
	(*CreateLeaveRequest)(nil),       // 3: hrms.CreateLeaveRequest
	(*LeaveResponse)(nil),            // 4: hrms.LeaveResponse
	(*GetLeaveRequest)(nil),          // 5: hrms.GetLeaveRequest
	(*UpdateLeaveStatusRequest)(nil), // 6: hrms.UpdateLeaveStatusRequest
	(*ListLeavesRequest)(nil),        // 7: hrms.ListLeavesRequest
	(*ListLeavesResponse)(nil),       // 8: hrms.ListLeavesResponse
	(*DeleteLeaveRequest)(nil),       // 9: hrms.DeleteLeaveRequest
	(*timestamppb.Timestamp)(nil),    // 10: google.protobuf.Timestamp
	(*emptypb.Empty)(nil),            // 11: google.protobuf.Empty
}
var file_proto_leave_proto_depIdxs = []int32{
	1,  // 0: hrms.Leave.leave_type:type_name -> hrms.LeaveType
	10, // 1: hrms.Leave.start_date:type_name -> google.protobuf.Timestamp
	10, // 2: hrms.Leave.end_date:type_name -> google.protobuf.Timestamp
	0,  // 3: hrms.Leave.status:type_name -> hrms.LeaveStatus
	1,  // 4: hrms.CreateLeaveRequest.leave_type:type_name -> hrms.LeaveType
	10, // 5: hrms.CreateLeaveRequest.start_date:type_name -> google.protobuf.Timestamp
	10, // 6: hrms.CreateLeaveRequest.end_date:type_name -> google.protobuf.Timestamp
	2,  // 7: hrms.LeaveResponse.leave:type_name -> hrms.Leave
	0,  // 8: hrms.UpdateLeaveStatusRequest.status:type_name -> hrms.LeaveStatus
	0,  // 9: hrms.ListLeavesRequest.status:type_name -> hrms.LeaveStatus
	10, // 10: hrms.ListLeavesRequest.start_date:type_name -> google.protobuf.Timestamp
	10, // 11: hrms.ListLeavesRequest.end_date:type_name -> google.protobuf.Timestamp
	2,  // 12: hrms.ListLeavesResponse.leaves:type_name -> hrms.Leave
	3,  // 13: hrms.LeaveService.CreateLeave:input_type -> hrms.CreateLeaveRequest
	5,  // 14: hrms.LeaveService.GetLeave:input_type -> hrms.GetLeaveRequest
	6,  // 15: hrms.LeaveService.UpdateLeaveStatus:input_type -> hrms.UpdateLeaveStatusRequest
	7,  // 16: hrms.LeaveService.ListLeaves:input_type -> hrms.ListLeavesRequest
	9,  // 17: hrms.LeaveService.DeleteLeave:input_type -> hrms.DeleteLeaveRequest
	4,  // 18: hrms.LeaveService.CreateLeave:output_type -> hrms.LeaveResponse
	4,  // 19: hrms.LeaveService.GetLeave:output_type -> hrms.LeaveResponse
	11, // 20: hrms.LeaveService.UpdateLeaveStatus:output_type -> google.protobuf.Empty
	8,  // 21: hrms.LeaveService.ListLeaves:output_type -> hrms.ListLeavesResponse
	11, // 22: hrms.LeaveService.DeleteLeave:output_type -> google.protobuf.Empty
	18, // [18:23] is the sub-list for method output_type
	13, // [13:18] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_proto_leave_proto_init() }
func file_proto_leave_proto_init() {
	if File_proto_leave_proto != nil {
		return
	}
	file_proto_leave_proto_msgTypes[0].OneofWrappers = []any{}
	file_proto_leave_proto_msgTypes[4].OneofWrappers = []any{}
	file_proto_leave_proto_msgTypes[5].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_leave_proto_rawDesc), len(file_proto_leave_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_leave_proto_goTypes,
		DependencyIndexes: file_proto_leave_proto_depIdxs,
		EnumInfos:         file_proto_leave_proto_enumTypes,
		MessageInfos:      file_proto_leave_proto_msgTypes,
	}.Build()
	File_proto_leave_proto = out.File
	file_proto_leave_proto_goTypes = nil
	file_proto_leave_proto_depIdxs = nil
}
