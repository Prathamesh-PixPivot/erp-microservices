// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v5.29.3
// source: proto/leave_balance.proto

package hrms

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Leave balance message
type LeaveBalance struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	EmployeeId    uint64                 `protobuf:"varint,1,opt,name=employee_id,json=employeeId,proto3" json:"employee_id,omitempty"`
	LeaveType     LeaveType              `protobuf:"varint,2,opt,name=leave_type,json=leaveType,proto3,enum=hrms.LeaveType" json:"leave_type,omitempty"` // âœ… Use hrms.LeaveType
	TotalLeaves   int32                  `protobuf:"varint,3,opt,name=total_leaves,json=totalLeaves,proto3" json:"total_leaves,omitempty"`
	UsedLeaves    int32                  `protobuf:"varint,4,opt,name=used_leaves,json=usedLeaves,proto3" json:"used_leaves,omitempty"`
	Remaining     int32                  `protobuf:"varint,5,opt,name=remaining,proto3" json:"remaining,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LeaveBalance) Reset() {
	*x = LeaveBalance{}
	mi := &file_proto_leave_balance_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LeaveBalance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeaveBalance) ProtoMessage() {}

func (x *LeaveBalance) ProtoReflect() protoreflect.Message {
	mi := &file_proto_leave_balance_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeaveBalance.ProtoReflect.Descriptor instead.
func (*LeaveBalance) Descriptor() ([]byte, []int) {
	return file_proto_leave_balance_proto_rawDescGZIP(), []int{0}
}

func (x *LeaveBalance) GetEmployeeId() uint64 {
	if x != nil {
		return x.EmployeeId
	}
	return 0
}

func (x *LeaveBalance) GetLeaveType() LeaveType {
	if x != nil {
		return x.LeaveType
	}
	return LeaveType_UNDEFINED
}

func (x *LeaveBalance) GetTotalLeaves() int32 {
	if x != nil {
		return x.TotalLeaves
	}
	return 0
}

func (x *LeaveBalance) GetUsedLeaves() int32 {
	if x != nil {
		return x.UsedLeaves
	}
	return 0
}

func (x *LeaveBalance) GetRemaining() int32 {
	if x != nil {
		return x.Remaining
	}
	return 0
}

// Request for creating a leave balance
type CreateLeaveBalanceRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	EmployeeId    uint64                 `protobuf:"varint,1,opt,name=employee_id,json=employeeId,proto3" json:"employee_id,omitempty"`
	LeaveType     LeaveType              `protobuf:"varint,2,opt,name=leave_type,json=leaveType,proto3,enum=hrms.LeaveType" json:"leave_type,omitempty"`
	TotalLeaves   int32                  `protobuf:"varint,3,opt,name=total_leaves,json=totalLeaves,proto3" json:"total_leaves,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateLeaveBalanceRequest) Reset() {
	*x = CreateLeaveBalanceRequest{}
	mi := &file_proto_leave_balance_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateLeaveBalanceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateLeaveBalanceRequest) ProtoMessage() {}

func (x *CreateLeaveBalanceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_leave_balance_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateLeaveBalanceRequest.ProtoReflect.Descriptor instead.
func (*CreateLeaveBalanceRequest) Descriptor() ([]byte, []int) {
	return file_proto_leave_balance_proto_rawDescGZIP(), []int{1}
}

func (x *CreateLeaveBalanceRequest) GetEmployeeId() uint64 {
	if x != nil {
		return x.EmployeeId
	}
	return 0
}

func (x *CreateLeaveBalanceRequest) GetLeaveType() LeaveType {
	if x != nil {
		return x.LeaveType
	}
	return LeaveType_UNDEFINED
}

func (x *CreateLeaveBalanceRequest) GetTotalLeaves() int32 {
	if x != nil {
		return x.TotalLeaves
	}
	return 0
}

// Response containing leave balance details
type LeaveBalanceResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Balance       *LeaveBalance          `protobuf:"bytes,1,opt,name=balance,proto3" json:"balance,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LeaveBalanceResponse) Reset() {
	*x = LeaveBalanceResponse{}
	mi := &file_proto_leave_balance_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LeaveBalanceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeaveBalanceResponse) ProtoMessage() {}

func (x *LeaveBalanceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_leave_balance_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeaveBalanceResponse.ProtoReflect.Descriptor instead.
func (*LeaveBalanceResponse) Descriptor() ([]byte, []int) {
	return file_proto_leave_balance_proto_rawDescGZIP(), []int{2}
}

func (x *LeaveBalanceResponse) GetBalance() *LeaveBalance {
	if x != nil {
		return x.Balance
	}
	return nil
}

// Request to deduct leave balance
type DeductLeaveBalanceRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	EmployeeId    uint64                 `protobuf:"varint,1,opt,name=employee_id,json=employeeId,proto3" json:"employee_id,omitempty"`
	LeaveType     LeaveType              `protobuf:"varint,2,opt,name=leave_type,json=leaveType,proto3,enum=hrms.LeaveType" json:"leave_type,omitempty"`
	LeaveDays     int32                  `protobuf:"varint,3,opt,name=leave_days,json=leaveDays,proto3" json:"leave_days,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeductLeaveBalanceRequest) Reset() {
	*x = DeductLeaveBalanceRequest{}
	mi := &file_proto_leave_balance_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeductLeaveBalanceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeductLeaveBalanceRequest) ProtoMessage() {}

func (x *DeductLeaveBalanceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_leave_balance_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeductLeaveBalanceRequest.ProtoReflect.Descriptor instead.
func (*DeductLeaveBalanceRequest) Descriptor() ([]byte, []int) {
	return file_proto_leave_balance_proto_rawDescGZIP(), []int{3}
}

func (x *DeductLeaveBalanceRequest) GetEmployeeId() uint64 {
	if x != nil {
		return x.EmployeeId
	}
	return 0
}

func (x *DeductLeaveBalanceRequest) GetLeaveType() LeaveType {
	if x != nil {
		return x.LeaveType
	}
	return LeaveType_UNDEFINED
}

func (x *DeductLeaveBalanceRequest) GetLeaveDays() int32 {
	if x != nil {
		return x.LeaveDays
	}
	return 0
}

// Request to restore leave balance
type RestoreLeaveBalanceRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	EmployeeId    uint64                 `protobuf:"varint,1,opt,name=employee_id,json=employeeId,proto3" json:"employee_id,omitempty"`
	LeaveType     LeaveType              `protobuf:"varint,2,opt,name=leave_type,json=leaveType,proto3,enum=hrms.LeaveType" json:"leave_type,omitempty"`
	LeaveDays     int32                  `protobuf:"varint,3,opt,name=leave_days,json=leaveDays,proto3" json:"leave_days,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RestoreLeaveBalanceRequest) Reset() {
	*x = RestoreLeaveBalanceRequest{}
	mi := &file_proto_leave_balance_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RestoreLeaveBalanceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RestoreLeaveBalanceRequest) ProtoMessage() {}

func (x *RestoreLeaveBalanceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_leave_balance_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RestoreLeaveBalanceRequest.ProtoReflect.Descriptor instead.
func (*RestoreLeaveBalanceRequest) Descriptor() ([]byte, []int) {
	return file_proto_leave_balance_proto_rawDescGZIP(), []int{4}
}

func (x *RestoreLeaveBalanceRequest) GetEmployeeId() uint64 {
	if x != nil {
		return x.EmployeeId
	}
	return 0
}

func (x *RestoreLeaveBalanceRequest) GetLeaveType() LeaveType {
	if x != nil {
		return x.LeaveType
	}
	return LeaveType_UNDEFINED
}

func (x *RestoreLeaveBalanceRequest) GetLeaveDays() int32 {
	if x != nil {
		return x.LeaveDays
	}
	return 0
}

// Request to fetch leave balance for an employee
type GetLeaveBalanceRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	EmployeeId    uint64                 `protobuf:"varint,1,opt,name=employee_id,json=employeeId,proto3" json:"employee_id,omitempty"`
	LeaveType     LeaveType              `protobuf:"varint,2,opt,name=leave_type,json=leaveType,proto3,enum=hrms.LeaveType" json:"leave_type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetLeaveBalanceRequest) Reset() {
	*x = GetLeaveBalanceRequest{}
	mi := &file_proto_leave_balance_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetLeaveBalanceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLeaveBalanceRequest) ProtoMessage() {}

func (x *GetLeaveBalanceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_leave_balance_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLeaveBalanceRequest.ProtoReflect.Descriptor instead.
func (*GetLeaveBalanceRequest) Descriptor() ([]byte, []int) {
	return file_proto_leave_balance_proto_rawDescGZIP(), []int{5}
}

func (x *GetLeaveBalanceRequest) GetEmployeeId() uint64 {
	if x != nil {
		return x.EmployeeId
	}
	return 0
}

func (x *GetLeaveBalanceRequest) GetLeaveType() LeaveType {
	if x != nil {
		return x.LeaveType
	}
	return LeaveType_UNDEFINED
}

// Request to list leave balances with filters
type ListLeaveBalancesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	EmployeeId    *uint64                `protobuf:"varint,1,opt,name=employee_id,json=employeeId,proto3,oneof" json:"employee_id,omitempty"`
	Limit         int32                  `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset        int32                  `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListLeaveBalancesRequest) Reset() {
	*x = ListLeaveBalancesRequest{}
	mi := &file_proto_leave_balance_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListLeaveBalancesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListLeaveBalancesRequest) ProtoMessage() {}

func (x *ListLeaveBalancesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_leave_balance_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListLeaveBalancesRequest.ProtoReflect.Descriptor instead.
func (*ListLeaveBalancesRequest) Descriptor() ([]byte, []int) {
	return file_proto_leave_balance_proto_rawDescGZIP(), []int{6}
}

func (x *ListLeaveBalancesRequest) GetEmployeeId() uint64 {
	if x != nil && x.EmployeeId != nil {
		return *x.EmployeeId
	}
	return 0
}

func (x *ListLeaveBalancesRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListLeaveBalancesRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

// Response containing a list of leave balances
type ListLeaveBalancesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Balances      []*LeaveBalance        `protobuf:"bytes,1,rep,name=balances,proto3" json:"balances,omitempty"`
	Total         int64                  `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListLeaveBalancesResponse) Reset() {
	*x = ListLeaveBalancesResponse{}
	mi := &file_proto_leave_balance_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListLeaveBalancesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListLeaveBalancesResponse) ProtoMessage() {}

func (x *ListLeaveBalancesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_leave_balance_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListLeaveBalancesResponse.ProtoReflect.Descriptor instead.
func (*ListLeaveBalancesResponse) Descriptor() ([]byte, []int) {
	return file_proto_leave_balance_proto_rawDescGZIP(), []int{7}
}

func (x *ListLeaveBalancesResponse) GetBalances() []*LeaveBalance {
	if x != nil {
		return x.Balances
	}
	return nil
}

func (x *ListLeaveBalancesResponse) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

// Request to delete a leave balance
type DeleteLeaveBalanceRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	EmployeeId    uint64                 `protobuf:"varint,1,opt,name=employee_id,json=employeeId,proto3" json:"employee_id,omitempty"`
	LeaveType     LeaveType              `protobuf:"varint,2,opt,name=leave_type,json=leaveType,proto3,enum=hrms.LeaveType" json:"leave_type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteLeaveBalanceRequest) Reset() {
	*x = DeleteLeaveBalanceRequest{}
	mi := &file_proto_leave_balance_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteLeaveBalanceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteLeaveBalanceRequest) ProtoMessage() {}

func (x *DeleteLeaveBalanceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_leave_balance_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteLeaveBalanceRequest.ProtoReflect.Descriptor instead.
func (*DeleteLeaveBalanceRequest) Descriptor() ([]byte, []int) {
	return file_proto_leave_balance_proto_rawDescGZIP(), []int{8}
}

func (x *DeleteLeaveBalanceRequest) GetEmployeeId() uint64 {
	if x != nil {
		return x.EmployeeId
	}
	return 0
}

func (x *DeleteLeaveBalanceRequest) GetLeaveType() LeaveType {
	if x != nil {
		return x.LeaveType
	}
	return LeaveType_UNDEFINED
}

var File_proto_leave_balance_proto protoreflect.FileDescriptor

var file_proto_leave_balance_proto_rawDesc = string([]byte{
	0x0a, 0x19, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6c, 0x65, 0x61, 0x76, 0x65, 0x5f, 0x62, 0x61,
	0x6c, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x68, 0x72, 0x6d,
	0x73, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6c, 0x65, 0x61, 0x76, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0xc1, 0x01, 0x0a, 0x0c, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x42, 0x61, 0x6c, 0x61, 0x6e,
	0x63, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x65, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65,
	0x65, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x0a, 0x6c, 0x65, 0x61, 0x76, 0x65, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x68, 0x72, 0x6d, 0x73, 0x2e, 0x4c,
	0x65, 0x61, 0x76, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x6c, 0x65, 0x61, 0x76, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x6c, 0x65, 0x61,
	0x76, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x4c, 0x65, 0x61, 0x76, 0x65, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x73, 0x65, 0x64, 0x5f, 0x6c,
	0x65, 0x61, 0x76, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x75, 0x73, 0x65,
	0x64, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x6d, 0x61, 0x69,
	0x6e, 0x69, 0x6e, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x72, 0x65, 0x6d, 0x61,
	0x69, 0x6e, 0x69, 0x6e, 0x67, 0x22, 0x8f, 0x01, 0x0a, 0x19, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x4c, 0x65, 0x61, 0x76, 0x65, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x65, 0x6d, 0x70, 0x6c, 0x6f, 0x79,
	0x65, 0x65, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x0a, 0x6c, 0x65, 0x61, 0x76, 0x65, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x68, 0x72, 0x6d, 0x73, 0x2e,
	0x4c, 0x65, 0x61, 0x76, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x6c, 0x65, 0x61, 0x76, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x6c, 0x65,
	0x61, 0x76, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x73, 0x22, 0x44, 0x0a, 0x14, 0x4c, 0x65, 0x61, 0x76, 0x65,
	0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x2c, 0x0a, 0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x68, 0x72, 0x6d, 0x73, 0x2e, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x42, 0x61, 0x6c,
	0x61, 0x6e, 0x63, 0x65, 0x52, 0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x22, 0x8b, 0x01,
	0x0a, 0x19, 0x44, 0x65, 0x64, 0x75, 0x63, 0x74, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x42, 0x61, 0x6c,
	0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x65,
	0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x0a, 0x65, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x0a,
	0x6c, 0x65, 0x61, 0x76, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x0f, 0x2e, 0x68, 0x72, 0x6d, 0x73, 0x2e, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x09, 0x6c, 0x65, 0x61, 0x76, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a,
	0x6c, 0x65, 0x61, 0x76, 0x65, 0x5f, 0x64, 0x61, 0x79, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x09, 0x6c, 0x65, 0x61, 0x76, 0x65, 0x44, 0x61, 0x79, 0x73, 0x22, 0x8c, 0x01, 0x0a, 0x1a,
	0x52, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x42, 0x61, 0x6c, 0x61,
	0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x6d,
	0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0a, 0x65, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x0a, 0x6c,
	0x65, 0x61, 0x76, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x0f, 0x2e, 0x68, 0x72, 0x6d, 0x73, 0x2e, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x09, 0x6c, 0x65, 0x61, 0x76, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x6c,
	0x65, 0x61, 0x76, 0x65, 0x5f, 0x64, 0x61, 0x79, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x09, 0x6c, 0x65, 0x61, 0x76, 0x65, 0x44, 0x61, 0x79, 0x73, 0x22, 0x69, 0x0a, 0x16, 0x47, 0x65,
	0x74, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x65, 0x6d, 0x70, 0x6c, 0x6f,
	0x79, 0x65, 0x65, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x0a, 0x6c, 0x65, 0x61, 0x76, 0x65, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x68, 0x72, 0x6d, 0x73,
	0x2e, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x6c, 0x65, 0x61, 0x76,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x22, 0x7e, 0x0a, 0x18, 0x4c, 0x69, 0x73, 0x74, 0x4c, 0x65, 0x61,
	0x76, 0x65, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x24, 0x0a, 0x0b, 0x65, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x48, 0x00, 0x52, 0x0a, 0x65, 0x6d, 0x70, 0x6c, 0x6f, 0x79,
	0x65, 0x65, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6f,
	0x66, 0x66, 0x73, 0x65, 0x74, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x65, 0x6d, 0x70, 0x6c, 0x6f, 0x79,
	0x65, 0x65, 0x5f, 0x69, 0x64, 0x22, 0x61, 0x0a, 0x19, 0x4c, 0x69, 0x73, 0x74, 0x4c, 0x65, 0x61,
	0x76, 0x65, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x2e, 0x0a, 0x08, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x68, 0x72, 0x6d, 0x73, 0x2e, 0x4c, 0x65, 0x61, 0x76,
	0x65, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x08, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63,
	0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x6c, 0x0a, 0x19, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x65, 0x6d, 0x70, 0x6c,
	0x6f, 0x79, 0x65, 0x65, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x0a, 0x6c, 0x65, 0x61, 0x76, 0x65, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x68, 0x72, 0x6d,
	0x73, 0x2e, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x6c, 0x65, 0x61,
	0x76, 0x65, 0x54, 0x79, 0x70, 0x65, 0x32, 0xfa, 0x03, 0x0a, 0x13, 0x4c, 0x65, 0x61, 0x76, 0x65,
	0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x51,
	0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x42, 0x61, 0x6c,
	0x61, 0x6e, 0x63, 0x65, 0x12, 0x1f, 0x2e, 0x68, 0x72, 0x6d, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x68, 0x72, 0x6d, 0x73, 0x2e, 0x4c, 0x65, 0x61,
	0x76, 0x65, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x4d, 0x0a, 0x12, 0x44, 0x65, 0x64, 0x75, 0x63, 0x74, 0x4c, 0x65, 0x61, 0x76, 0x65,
	0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x1f, 0x2e, 0x68, 0x72, 0x6d, 0x73, 0x2e, 0x44,
	0x65, 0x64, 0x75, 0x63, 0x74, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x12, 0x4f, 0x0a, 0x13, 0x52, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x4c, 0x65, 0x61, 0x76, 0x65,
	0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x20, 0x2e, 0x68, 0x72, 0x6d, 0x73, 0x2e, 0x52,
	0x65, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x42, 0x61, 0x6c, 0x61, 0x6e,
	0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x12, 0x4b, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x42, 0x61, 0x6c,
	0x61, 0x6e, 0x63, 0x65, 0x12, 0x1c, 0x2e, 0x68, 0x72, 0x6d, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x4c,
	0x65, 0x61, 0x76, 0x65, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x68, 0x72, 0x6d, 0x73, 0x2e, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x42,
	0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x54,
	0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x42, 0x61, 0x6c, 0x61, 0x6e,
	0x63, 0x65, 0x73, 0x12, 0x1e, 0x2e, 0x68, 0x72, 0x6d, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4c,
	0x65, 0x61, 0x76, 0x65, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x68, 0x72, 0x6d, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4c,
	0x65, 0x61, 0x76, 0x65, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4d, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4c, 0x65,
	0x61, 0x76, 0x65, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x1f, 0x2e, 0x68, 0x72, 0x6d,
	0x73, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x42, 0x61, 0x6c,
	0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x42, 0x11, 0x5a, 0x0f, 0x68, 0x72, 0x6d, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x3b, 0x68, 0x72, 0x6d, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_proto_leave_balance_proto_rawDescOnce sync.Once
	file_proto_leave_balance_proto_rawDescData []byte
)

func file_proto_leave_balance_proto_rawDescGZIP() []byte {
	file_proto_leave_balance_proto_rawDescOnce.Do(func() {
		file_proto_leave_balance_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_leave_balance_proto_rawDesc), len(file_proto_leave_balance_proto_rawDesc)))
	})
	return file_proto_leave_balance_proto_rawDescData
}

var file_proto_leave_balance_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_proto_leave_balance_proto_goTypes = []any{
	(*LeaveBalance)(nil),               // 0: hrms.LeaveBalance
	(*CreateLeaveBalanceRequest)(nil),  // 1: hrms.CreateLeaveBalanceRequest
	(*LeaveBalanceResponse)(nil),       // 2: hrms.LeaveBalanceResponse
	(*DeductLeaveBalanceRequest)(nil),  // 3: hrms.DeductLeaveBalanceRequest
	(*RestoreLeaveBalanceRequest)(nil), // 4: hrms.RestoreLeaveBalanceRequest
	(*GetLeaveBalanceRequest)(nil),     // 5: hrms.GetLeaveBalanceRequest
	(*ListLeaveBalancesRequest)(nil),   // 6: hrms.ListLeaveBalancesRequest
	(*ListLeaveBalancesResponse)(nil),  // 7: hrms.ListLeaveBalancesResponse
	(*DeleteLeaveBalanceRequest)(nil),  // 8: hrms.DeleteLeaveBalanceRequest
	(LeaveType)(0),                     // 9: hrms.LeaveType
	(*emptypb.Empty)(nil),              // 10: google.protobuf.Empty
}
var file_proto_leave_balance_proto_depIdxs = []int32{
	9,  // 0: hrms.LeaveBalance.leave_type:type_name -> hrms.LeaveType
	9,  // 1: hrms.CreateLeaveBalanceRequest.leave_type:type_name -> hrms.LeaveType
	0,  // 2: hrms.LeaveBalanceResponse.balance:type_name -> hrms.LeaveBalance
	9,  // 3: hrms.DeductLeaveBalanceRequest.leave_type:type_name -> hrms.LeaveType
	9,  // 4: hrms.RestoreLeaveBalanceRequest.leave_type:type_name -> hrms.LeaveType
	9,  // 5: hrms.GetLeaveBalanceRequest.leave_type:type_name -> hrms.LeaveType
	0,  // 6: hrms.ListLeaveBalancesResponse.balances:type_name -> hrms.LeaveBalance
	9,  // 7: hrms.DeleteLeaveBalanceRequest.leave_type:type_name -> hrms.LeaveType
	1,  // 8: hrms.LeaveBalanceService.CreateLeaveBalance:input_type -> hrms.CreateLeaveBalanceRequest
	3,  // 9: hrms.LeaveBalanceService.DeductLeaveBalance:input_type -> hrms.DeductLeaveBalanceRequest
	4,  // 10: hrms.LeaveBalanceService.RestoreLeaveBalance:input_type -> hrms.RestoreLeaveBalanceRequest
	5,  // 11: hrms.LeaveBalanceService.GetLeaveBalance:input_type -> hrms.GetLeaveBalanceRequest
	6,  // 12: hrms.LeaveBalanceService.ListLeaveBalances:input_type -> hrms.ListLeaveBalancesRequest
	8,  // 13: hrms.LeaveBalanceService.DeleteLeaveBalance:input_type -> hrms.DeleteLeaveBalanceRequest
	2,  // 14: hrms.LeaveBalanceService.CreateLeaveBalance:output_type -> hrms.LeaveBalanceResponse
	10, // 15: hrms.LeaveBalanceService.DeductLeaveBalance:output_type -> google.protobuf.Empty
	10, // 16: hrms.LeaveBalanceService.RestoreLeaveBalance:output_type -> google.protobuf.Empty
	2,  // 17: hrms.LeaveBalanceService.GetLeaveBalance:output_type -> hrms.LeaveBalanceResponse
	7,  // 18: hrms.LeaveBalanceService.ListLeaveBalances:output_type -> hrms.ListLeaveBalancesResponse
	10, // 19: hrms.LeaveBalanceService.DeleteLeaveBalance:output_type -> google.protobuf.Empty
	14, // [14:20] is the sub-list for method output_type
	8,  // [8:14] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_proto_leave_balance_proto_init() }
func file_proto_leave_balance_proto_init() {
	if File_proto_leave_balance_proto != nil {
		return
	}
	file_proto_leave_proto_init()
	file_proto_leave_balance_proto_msgTypes[6].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_leave_balance_proto_rawDesc), len(file_proto_leave_balance_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_leave_balance_proto_goTypes,
		DependencyIndexes: file_proto_leave_balance_proto_depIdxs,
		MessageInfos:      file_proto_leave_balance_proto_msgTypes,
	}.Build()
	File_proto_leave_balance_proto = out.File
	file_proto_leave_balance_proto_goTypes = nil
	file_proto_leave_balance_proto_depIdxs = nil
}
