// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v5.29.3
// source: proto/salary_structure.proto

package hrms

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Salary Structure message structure.
type SalaryStructure struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Id             uint64                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	OrganizationId uint64                 `protobuf:"varint,2,opt,name=organization_id,json=organizationId,proto3" json:"organization_id,omitempty"`
	DesignationId  uint64                 `protobuf:"varint,3,opt,name=designation_id,json=designationId,proto3" json:"designation_id,omitempty"`
	BaseSalary     float64                `protobuf:"fixed64,4,opt,name=base_salary,json=baseSalary,proto3" json:"base_salary,omitempty"`
	Allowances     float64                `protobuf:"fixed64,5,opt,name=allowances,proto3" json:"allowances,omitempty"`
	TaxPercentage  float64                `protobuf:"fixed64,6,opt,name=tax_percentage,json=taxPercentage,proto3" json:"tax_percentage,omitempty"`
	Deductions     float64                `protobuf:"fixed64,7,opt,name=deductions,proto3" json:"deductions,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *SalaryStructure) Reset() {
	*x = SalaryStructure{}
	mi := &file_proto_salary_structure_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SalaryStructure) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SalaryStructure) ProtoMessage() {}

func (x *SalaryStructure) ProtoReflect() protoreflect.Message {
	mi := &file_proto_salary_structure_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SalaryStructure.ProtoReflect.Descriptor instead.
func (*SalaryStructure) Descriptor() ([]byte, []int) {
	return file_proto_salary_structure_proto_rawDescGZIP(), []int{0}
}

func (x *SalaryStructure) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SalaryStructure) GetOrganizationId() uint64 {
	if x != nil {
		return x.OrganizationId
	}
	return 0
}

func (x *SalaryStructure) GetDesignationId() uint64 {
	if x != nil {
		return x.DesignationId
	}
	return 0
}

func (x *SalaryStructure) GetBaseSalary() float64 {
	if x != nil {
		return x.BaseSalary
	}
	return 0
}

func (x *SalaryStructure) GetAllowances() float64 {
	if x != nil {
		return x.Allowances
	}
	return 0
}

func (x *SalaryStructure) GetTaxPercentage() float64 {
	if x != nil {
		return x.TaxPercentage
	}
	return 0
}

func (x *SalaryStructure) GetDeductions() float64 {
	if x != nil {
		return x.Deductions
	}
	return 0
}

// Request & Response messages.
type CreateSalaryStructureRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	OrganizationId uint64                 `protobuf:"varint,1,opt,name=organization_id,json=organizationId,proto3" json:"organization_id,omitempty"`
	DesignationId  uint64                 `protobuf:"varint,2,opt,name=designation_id,json=designationId,proto3" json:"designation_id,omitempty"`
	BaseSalary     float64                `protobuf:"fixed64,3,opt,name=base_salary,json=baseSalary,proto3" json:"base_salary,omitempty"`
	Allowances     float64                `protobuf:"fixed64,4,opt,name=allowances,proto3" json:"allowances,omitempty"`
	TaxPercentage  float64                `protobuf:"fixed64,5,opt,name=tax_percentage,json=taxPercentage,proto3" json:"tax_percentage,omitempty"`
	Deductions     float64                `protobuf:"fixed64,6,opt,name=deductions,proto3" json:"deductions,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *CreateSalaryStructureRequest) Reset() {
	*x = CreateSalaryStructureRequest{}
	mi := &file_proto_salary_structure_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateSalaryStructureRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSalaryStructureRequest) ProtoMessage() {}

func (x *CreateSalaryStructureRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_salary_structure_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSalaryStructureRequest.ProtoReflect.Descriptor instead.
func (*CreateSalaryStructureRequest) Descriptor() ([]byte, []int) {
	return file_proto_salary_structure_proto_rawDescGZIP(), []int{1}
}

func (x *CreateSalaryStructureRequest) GetOrganizationId() uint64 {
	if x != nil {
		return x.OrganizationId
	}
	return 0
}

func (x *CreateSalaryStructureRequest) GetDesignationId() uint64 {
	if x != nil {
		return x.DesignationId
	}
	return 0
}

func (x *CreateSalaryStructureRequest) GetBaseSalary() float64 {
	if x != nil {
		return x.BaseSalary
	}
	return 0
}

func (x *CreateSalaryStructureRequest) GetAllowances() float64 {
	if x != nil {
		return x.Allowances
	}
	return 0
}

func (x *CreateSalaryStructureRequest) GetTaxPercentage() float64 {
	if x != nil {
		return x.TaxPercentage
	}
	return 0
}

func (x *CreateSalaryStructureRequest) GetDeductions() float64 {
	if x != nil {
		return x.Deductions
	}
	return 0
}

type SalaryStructureResponse struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	SalaryStructure *SalaryStructure       `protobuf:"bytes,1,opt,name=salary_structure,json=salaryStructure,proto3" json:"salary_structure,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *SalaryStructureResponse) Reset() {
	*x = SalaryStructureResponse{}
	mi := &file_proto_salary_structure_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SalaryStructureResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SalaryStructureResponse) ProtoMessage() {}

func (x *SalaryStructureResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_salary_structure_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SalaryStructureResponse.ProtoReflect.Descriptor instead.
func (*SalaryStructureResponse) Descriptor() ([]byte, []int) {
	return file_proto_salary_structure_proto_rawDescGZIP(), []int{2}
}

func (x *SalaryStructureResponse) GetSalaryStructure() *SalaryStructure {
	if x != nil {
		return x.SalaryStructure
	}
	return nil
}

type GetSalaryStructureRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SalaryId      uint64                 `protobuf:"varint,1,opt,name=salary_id,json=salaryId,proto3" json:"salary_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSalaryStructureRequest) Reset() {
	*x = GetSalaryStructureRequest{}
	mi := &file_proto_salary_structure_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSalaryStructureRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSalaryStructureRequest) ProtoMessage() {}

func (x *GetSalaryStructureRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_salary_structure_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSalaryStructureRequest.ProtoReflect.Descriptor instead.
func (*GetSalaryStructureRequest) Descriptor() ([]byte, []int) {
	return file_proto_salary_structure_proto_rawDescGZIP(), []int{3}
}

func (x *GetSalaryStructureRequest) GetSalaryId() uint64 {
	if x != nil {
		return x.SalaryId
	}
	return 0
}

type ListSalaryStructuresRequest struct {
	state          protoimpl.MessageState  `protogen:"open.v1"`
	OrganizationId *wrapperspb.UInt64Value `protobuf:"bytes,1,opt,name=organization_id,json=organizationId,proto3" json:"organization_id,omitempty"` // Optional filter
	DesignationId  *wrapperspb.UInt64Value `protobuf:"bytes,2,opt,name=designation_id,json=designationId,proto3" json:"designation_id,omitempty"`    // Optional filter
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ListSalaryStructuresRequest) Reset() {
	*x = ListSalaryStructuresRequest{}
	mi := &file_proto_salary_structure_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListSalaryStructuresRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSalaryStructuresRequest) ProtoMessage() {}

func (x *ListSalaryStructuresRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_salary_structure_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSalaryStructuresRequest.ProtoReflect.Descriptor instead.
func (*ListSalaryStructuresRequest) Descriptor() ([]byte, []int) {
	return file_proto_salary_structure_proto_rawDescGZIP(), []int{4}
}

func (x *ListSalaryStructuresRequest) GetOrganizationId() *wrapperspb.UInt64Value {
	if x != nil {
		return x.OrganizationId
	}
	return nil
}

func (x *ListSalaryStructuresRequest) GetDesignationId() *wrapperspb.UInt64Value {
	if x != nil {
		return x.DesignationId
	}
	return nil
}

type ListSalaryStructuresResponse struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	SalaryStructures []*SalaryStructure     `protobuf:"bytes,1,rep,name=salary_structures,json=salaryStructures,proto3" json:"salary_structures,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *ListSalaryStructuresResponse) Reset() {
	*x = ListSalaryStructuresResponse{}
	mi := &file_proto_salary_structure_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListSalaryStructuresResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSalaryStructuresResponse) ProtoMessage() {}

func (x *ListSalaryStructuresResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_salary_structure_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSalaryStructuresResponse.ProtoReflect.Descriptor instead.
func (*ListSalaryStructuresResponse) Descriptor() ([]byte, []int) {
	return file_proto_salary_structure_proto_rawDescGZIP(), []int{5}
}

func (x *ListSalaryStructuresResponse) GetSalaryStructures() []*SalaryStructure {
	if x != nil {
		return x.SalaryStructures
	}
	return nil
}

type UpdateSalaryStructureRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SalaryId      uint64                 `protobuf:"varint,1,opt,name=salary_id,json=salaryId,proto3" json:"salary_id,omitempty"`
	Updates       map[string]string      `protobuf:"bytes,2,rep,name=updates,proto3" json:"updates,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // Dynamic field updates
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateSalaryStructureRequest) Reset() {
	*x = UpdateSalaryStructureRequest{}
	mi := &file_proto_salary_structure_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateSalaryStructureRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSalaryStructureRequest) ProtoMessage() {}

func (x *UpdateSalaryStructureRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_salary_structure_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSalaryStructureRequest.ProtoReflect.Descriptor instead.
func (*UpdateSalaryStructureRequest) Descriptor() ([]byte, []int) {
	return file_proto_salary_structure_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateSalaryStructureRequest) GetSalaryId() uint64 {
	if x != nil {
		return x.SalaryId
	}
	return 0
}

func (x *UpdateSalaryStructureRequest) GetUpdates() map[string]string {
	if x != nil {
		return x.Updates
	}
	return nil
}

type UpdateSalaryStructureResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateSalaryStructureResponse) Reset() {
	*x = UpdateSalaryStructureResponse{}
	mi := &file_proto_salary_structure_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateSalaryStructureResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSalaryStructureResponse) ProtoMessage() {}

func (x *UpdateSalaryStructureResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_salary_structure_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSalaryStructureResponse.ProtoReflect.Descriptor instead.
func (*UpdateSalaryStructureResponse) Descriptor() ([]byte, []int) {
	return file_proto_salary_structure_proto_rawDescGZIP(), []int{7}
}

func (x *UpdateSalaryStructureResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type DeleteSalaryStructureRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SalaryId      uint64                 `protobuf:"varint,1,opt,name=salary_id,json=salaryId,proto3" json:"salary_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteSalaryStructureRequest) Reset() {
	*x = DeleteSalaryStructureRequest{}
	mi := &file_proto_salary_structure_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteSalaryStructureRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSalaryStructureRequest) ProtoMessage() {}

func (x *DeleteSalaryStructureRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_salary_structure_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSalaryStructureRequest.ProtoReflect.Descriptor instead.
func (*DeleteSalaryStructureRequest) Descriptor() ([]byte, []int) {
	return file_proto_salary_structure_proto_rawDescGZIP(), []int{8}
}

func (x *DeleteSalaryStructureRequest) GetSalaryId() uint64 {
	if x != nil {
		return x.SalaryId
	}
	return 0
}

type DeleteSalaryStructureResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteSalaryStructureResponse) Reset() {
	*x = DeleteSalaryStructureResponse{}
	mi := &file_proto_salary_structure_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteSalaryStructureResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSalaryStructureResponse) ProtoMessage() {}

func (x *DeleteSalaryStructureResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_salary_structure_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSalaryStructureResponse.ProtoReflect.Descriptor instead.
func (*DeleteSalaryStructureResponse) Descriptor() ([]byte, []int) {
	return file_proto_salary_structure_proto_rawDescGZIP(), []int{9}
}

func (x *DeleteSalaryStructureResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

var File_proto_salary_structure_proto protoreflect.FileDescriptor

var file_proto_salary_structure_proto_rawDesc = string([]byte{
	0x0a, 0x1c, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x73, 0x61, 0x6c, 0x61, 0x72, 0x79, 0x5f, 0x73,
	0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04,
	0x68, 0x72, 0x6d, 0x73, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0xf9, 0x01, 0x0a, 0x0f, 0x53, 0x61, 0x6c, 0x61, 0x72, 0x79, 0x53,
	0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x6f, 0x72, 0x67, 0x61,
	0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x0e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x12, 0x25, 0x0a, 0x0e, 0x64, 0x65, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x64, 0x65, 0x73, 0x69, 0x67,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x62, 0x61, 0x73, 0x65,
	0x5f, 0x73, 0x61, 0x6c, 0x61, 0x72, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x62,
	0x61, 0x73, 0x65, 0x53, 0x61, 0x6c, 0x61, 0x72, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x6c, 0x6c,
	0x6f, 0x77, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x61,
	0x6c, 0x6c, 0x6f, 0x77, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x74, 0x61, 0x78,
	0x5f, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x0d, 0x74, 0x61, 0x78, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65,
	0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x65, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x64, 0x65, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x22, 0xf6, 0x01, 0x0a, 0x1c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x61, 0x6c, 0x61, 0x72,
	0x79, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x27, 0x0a, 0x0f, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x6f, 0x72, 0x67, 0x61,
	0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x64, 0x65,
	0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0d, 0x64, 0x65, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x73, 0x61, 0x6c, 0x61, 0x72, 0x79,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x62, 0x61, 0x73, 0x65, 0x53, 0x61, 0x6c, 0x61,
	0x72, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x61, 0x6e, 0x63, 0x65, 0x73,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x61, 0x6e, 0x63,
	0x65, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x74, 0x61, 0x78, 0x5f, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e,
	0x74, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0d, 0x74, 0x61, 0x78, 0x50,
	0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x65, 0x64,
	0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x64,
	0x65, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x5b, 0x0a, 0x17, 0x53, 0x61, 0x6c,
	0x61, 0x72, 0x79, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x10, 0x73, 0x61, 0x6c, 0x61, 0x72, 0x79, 0x5f, 0x73,
	0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15,
	0x2e, 0x68, 0x72, 0x6d, 0x73, 0x2e, 0x53, 0x61, 0x6c, 0x61, 0x72, 0x79, 0x53, 0x74, 0x72, 0x75,
	0x63, 0x74, 0x75, 0x72, 0x65, 0x52, 0x0f, 0x73, 0x61, 0x6c, 0x61, 0x72, 0x79, 0x53, 0x74, 0x72,
	0x75, 0x63, 0x74, 0x75, 0x72, 0x65, 0x22, 0x38, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x53, 0x61, 0x6c,
	0x61, 0x72, 0x79, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x61, 0x6c, 0x61, 0x72, 0x79, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x73, 0x61, 0x6c, 0x61, 0x72, 0x79, 0x49, 0x64,
	0x22, 0xa9, 0x01, 0x0a, 0x1b, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x61, 0x6c, 0x61, 0x72, 0x79, 0x53,
	0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x45, 0x0a, 0x0f, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x55, 0x49, 0x6e, 0x74,
	0x36, 0x34, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x43, 0x0a, 0x0e, 0x64, 0x65, 0x73, 0x69, 0x67,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x55, 0x49, 0x6e, 0x74, 0x36, 0x34, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0d, 0x64,
	0x65, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x62, 0x0a, 0x1c,
	0x4c, 0x69, 0x73, 0x74, 0x53, 0x61, 0x6c, 0x61, 0x72, 0x79, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74,
	0x75, 0x72, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x42, 0x0a, 0x11,
	0x73, 0x61, 0x6c, 0x61, 0x72, 0x79, 0x5f, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x68, 0x72, 0x6d, 0x73, 0x2e, 0x53,
	0x61, 0x6c, 0x61, 0x72, 0x79, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65, 0x52, 0x10,
	0x73, 0x61, 0x6c, 0x61, 0x72, 0x79, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65, 0x73,
	0x22, 0xc2, 0x01, 0x0a, 0x1c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x61, 0x6c, 0x61, 0x72,
	0x79, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x61, 0x6c, 0x61, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x73, 0x61, 0x6c, 0x61, 0x72, 0x79, 0x49, 0x64, 0x12, 0x49,
	0x0a, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x2f, 0x2e, 0x68, 0x72, 0x6d, 0x73, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x61, 0x6c,
	0x61, 0x72, 0x79, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x1a, 0x3a, 0x0a, 0x0c, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x39, 0x0a, 0x1d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53,
	0x61, 0x6c, 0x61, 0x72, 0x79, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x22, 0x3b, 0x0a, 0x1c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x61, 0x6c, 0x61, 0x72, 0x79,
	0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1b, 0x0a, 0x09, 0x73, 0x61, 0x6c, 0x61, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x08, 0x73, 0x61, 0x6c, 0x61, 0x72, 0x79, 0x49, 0x64, 0x22, 0x39, 0x0a,
	0x1d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x61, 0x6c, 0x61, 0x72, 0x79, 0x53, 0x74, 0x72,
	0x75, 0x63, 0x74, 0x75, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x32, 0xed, 0x03, 0x0a, 0x16, 0x53, 0x61, 0x6c,
	0x61, 0x72, 0x79, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x5a, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x61, 0x6c,
	0x61, 0x72, 0x79, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65, 0x12, 0x22, 0x2e, 0x68,
	0x72, 0x6d, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x61, 0x6c, 0x61, 0x72, 0x79,
	0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1d, 0x2e, 0x68, 0x72, 0x6d, 0x73, 0x2e, 0x53, 0x61, 0x6c, 0x61, 0x72, 0x79, 0x53, 0x74,
	0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x54, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x53, 0x61, 0x6c, 0x61, 0x72, 0x79, 0x53, 0x74, 0x72, 0x75,
	0x63, 0x74, 0x75, 0x72, 0x65, 0x12, 0x1f, 0x2e, 0x68, 0x72, 0x6d, 0x73, 0x2e, 0x47, 0x65, 0x74,
	0x53, 0x61, 0x6c, 0x61, 0x72, 0x79, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x68, 0x72, 0x6d, 0x73, 0x2e, 0x53, 0x61,
	0x6c, 0x61, 0x72, 0x79, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5d, 0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x61, 0x6c,
	0x61, 0x72, 0x79, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65, 0x73, 0x12, 0x21, 0x2e,
	0x68, 0x72, 0x6d, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x61, 0x6c, 0x61, 0x72, 0x79, 0x53,
	0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x22, 0x2e, 0x68, 0x72, 0x6d, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x61, 0x6c, 0x61,
	0x72, 0x79, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x60, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x61,
	0x6c, 0x61, 0x72, 0x79, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65, 0x12, 0x22, 0x2e,
	0x68, 0x72, 0x6d, 0x73, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x61, 0x6c, 0x61, 0x72,
	0x79, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x23, 0x2e, 0x68, 0x72, 0x6d, 0x73, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53,
	0x61, 0x6c, 0x61, 0x72, 0x79, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x60, 0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x53, 0x61, 0x6c, 0x61, 0x72, 0x79, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65, 0x12,
	0x22, 0x2e, 0x68, 0x72, 0x6d, 0x73, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x61, 0x6c,
	0x61, 0x72, 0x79, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x68, 0x72, 0x6d, 0x73, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x53, 0x61, 0x6c, 0x61, 0x72, 0x79, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x11, 0x5a, 0x0f, 0x68, 0x72, 0x6d, 0x73,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x3b, 0x68, 0x72, 0x6d, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
})

var (
	file_proto_salary_structure_proto_rawDescOnce sync.Once
	file_proto_salary_structure_proto_rawDescData []byte
)

func file_proto_salary_structure_proto_rawDescGZIP() []byte {
	file_proto_salary_structure_proto_rawDescOnce.Do(func() {
		file_proto_salary_structure_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_salary_structure_proto_rawDesc), len(file_proto_salary_structure_proto_rawDesc)))
	})
	return file_proto_salary_structure_proto_rawDescData
}

var file_proto_salary_structure_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_proto_salary_structure_proto_goTypes = []any{
	(*SalaryStructure)(nil),               // 0: hrms.SalaryStructure
	(*CreateSalaryStructureRequest)(nil),  // 1: hrms.CreateSalaryStructureRequest
	(*SalaryStructureResponse)(nil),       // 2: hrms.SalaryStructureResponse
	(*GetSalaryStructureRequest)(nil),     // 3: hrms.GetSalaryStructureRequest
	(*ListSalaryStructuresRequest)(nil),   // 4: hrms.ListSalaryStructuresRequest
	(*ListSalaryStructuresResponse)(nil),  // 5: hrms.ListSalaryStructuresResponse
	(*UpdateSalaryStructureRequest)(nil),  // 6: hrms.UpdateSalaryStructureRequest
	(*UpdateSalaryStructureResponse)(nil), // 7: hrms.UpdateSalaryStructureResponse
	(*DeleteSalaryStructureRequest)(nil),  // 8: hrms.DeleteSalaryStructureRequest
	(*DeleteSalaryStructureResponse)(nil), // 9: hrms.DeleteSalaryStructureResponse
	nil,                                   // 10: hrms.UpdateSalaryStructureRequest.UpdatesEntry
	(*wrapperspb.UInt64Value)(nil),        // 11: google.protobuf.UInt64Value
}
var file_proto_salary_structure_proto_depIdxs = []int32{
	0,  // 0: hrms.SalaryStructureResponse.salary_structure:type_name -> hrms.SalaryStructure
	11, // 1: hrms.ListSalaryStructuresRequest.organization_id:type_name -> google.protobuf.UInt64Value
	11, // 2: hrms.ListSalaryStructuresRequest.designation_id:type_name -> google.protobuf.UInt64Value
	0,  // 3: hrms.ListSalaryStructuresResponse.salary_structures:type_name -> hrms.SalaryStructure
	10, // 4: hrms.UpdateSalaryStructureRequest.updates:type_name -> hrms.UpdateSalaryStructureRequest.UpdatesEntry
	1,  // 5: hrms.SalaryStructureService.CreateSalaryStructure:input_type -> hrms.CreateSalaryStructureRequest
	3,  // 6: hrms.SalaryStructureService.GetSalaryStructure:input_type -> hrms.GetSalaryStructureRequest
	4,  // 7: hrms.SalaryStructureService.ListSalaryStructures:input_type -> hrms.ListSalaryStructuresRequest
	6,  // 8: hrms.SalaryStructureService.UpdateSalaryStructure:input_type -> hrms.UpdateSalaryStructureRequest
	8,  // 9: hrms.SalaryStructureService.DeleteSalaryStructure:input_type -> hrms.DeleteSalaryStructureRequest
	2,  // 10: hrms.SalaryStructureService.CreateSalaryStructure:output_type -> hrms.SalaryStructureResponse
	2,  // 11: hrms.SalaryStructureService.GetSalaryStructure:output_type -> hrms.SalaryStructureResponse
	5,  // 12: hrms.SalaryStructureService.ListSalaryStructures:output_type -> hrms.ListSalaryStructuresResponse
	7,  // 13: hrms.SalaryStructureService.UpdateSalaryStructure:output_type -> hrms.UpdateSalaryStructureResponse
	9,  // 14: hrms.SalaryStructureService.DeleteSalaryStructure:output_type -> hrms.DeleteSalaryStructureResponse
	10, // [10:15] is the sub-list for method output_type
	5,  // [5:10] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_proto_salary_structure_proto_init() }
func file_proto_salary_structure_proto_init() {
	if File_proto_salary_structure_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_salary_structure_proto_rawDesc), len(file_proto_salary_structure_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_salary_structure_proto_goTypes,
		DependencyIndexes: file_proto_salary_structure_proto_depIdxs,
		MessageInfos:      file_proto_salary_structure_proto_msgTypes,
	}.Build()
	File_proto_salary_structure_proto = out.File
	file_proto_salary_structure_proto_goTypes = nil
	file_proto_salary_structure_proto_depIdxs = nil
}
