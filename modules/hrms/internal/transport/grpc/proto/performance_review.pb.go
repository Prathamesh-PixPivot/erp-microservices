// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v5.29.3
// source: proto/performance_review.proto

package hrms

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	structpb "google.golang.org/protobuf/types/known/structpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// DTOs and Requests
type PerformanceReview struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            uint64                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	EmployeeId    uint64                 `protobuf:"varint,2,opt,name=employee_id,json=employeeId,proto3" json:"employee_id,omitempty"`
	ReviewerId    uint64                 `protobuf:"varint,3,opt,name=reviewer_id,json=reviewerId,proto3" json:"reviewer_id,omitempty"`
	ReviewDate    *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=review_date,json=reviewDate,proto3" json:"review_date,omitempty"`
	ReviewPeriod  string                 `protobuf:"bytes,5,opt,name=review_period,json=reviewPeriod,proto3" json:"review_period,omitempty"`
	OverallRating int32                  `protobuf:"varint,6,opt,name=overall_rating,json=overallRating,proto3" json:"overall_rating,omitempty"`
	Feedback      string                 `protobuf:"bytes,7,opt,name=feedback,proto3" json:"feedback,omitempty"`
	Promotion     bool                   `protobuf:"varint,8,opt,name=promotion,proto3" json:"promotion,omitempty"`
	Kpis          []*PerformanceKPI      `protobuf:"bytes,9,rep,name=kpis,proto3" json:"kpis,omitempty"`      // ✅ Using imported PerformanceKPI
	Skills        []*SkillDevelopment    `protobuf:"bytes,10,rep,name=skills,proto3" json:"skills,omitempty"` // ✅ Using imported SkillDevelopment
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PerformanceReview) Reset() {
	*x = PerformanceReview{}
	mi := &file_proto_performance_review_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PerformanceReview) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PerformanceReview) ProtoMessage() {}

func (x *PerformanceReview) ProtoReflect() protoreflect.Message {
	mi := &file_proto_performance_review_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PerformanceReview.ProtoReflect.Descriptor instead.
func (*PerformanceReview) Descriptor() ([]byte, []int) {
	return file_proto_performance_review_proto_rawDescGZIP(), []int{0}
}

func (x *PerformanceReview) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *PerformanceReview) GetEmployeeId() uint64 {
	if x != nil {
		return x.EmployeeId
	}
	return 0
}

func (x *PerformanceReview) GetReviewerId() uint64 {
	if x != nil {
		return x.ReviewerId
	}
	return 0
}

func (x *PerformanceReview) GetReviewDate() *timestamppb.Timestamp {
	if x != nil {
		return x.ReviewDate
	}
	return nil
}

func (x *PerformanceReview) GetReviewPeriod() string {
	if x != nil {
		return x.ReviewPeriod
	}
	return ""
}

func (x *PerformanceReview) GetOverallRating() int32 {
	if x != nil {
		return x.OverallRating
	}
	return 0
}

func (x *PerformanceReview) GetFeedback() string {
	if x != nil {
		return x.Feedback
	}
	return ""
}

func (x *PerformanceReview) GetPromotion() bool {
	if x != nil {
		return x.Promotion
	}
	return false
}

func (x *PerformanceReview) GetKpis() []*PerformanceKPI {
	if x != nil {
		return x.Kpis
	}
	return nil
}

func (x *PerformanceReview) GetSkills() []*SkillDevelopment {
	if x != nil {
		return x.Skills
	}
	return nil
}

// Requests and Responses
type CreatePerformanceReviewRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	EmployeeId    uint64                 `protobuf:"varint,1,opt,name=employee_id,json=employeeId,proto3" json:"employee_id,omitempty"`
	ReviewerId    uint64                 `protobuf:"varint,2,opt,name=reviewer_id,json=reviewerId,proto3" json:"reviewer_id,omitempty"`
	ReviewDate    *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=review_date,json=reviewDate,proto3" json:"review_date,omitempty"`
	ReviewPeriod  string                 `protobuf:"bytes,4,opt,name=review_period,json=reviewPeriod,proto3" json:"review_period,omitempty"`
	OverallRating int32                  `protobuf:"varint,5,opt,name=overall_rating,json=overallRating,proto3" json:"overall_rating,omitempty"`
	Feedback      string                 `protobuf:"bytes,6,opt,name=feedback,proto3" json:"feedback,omitempty"`
	Promotion     bool                   `protobuf:"varint,7,opt,name=promotion,proto3" json:"promotion,omitempty"`
	Kpis          []*PerformanceKPI      `protobuf:"bytes,8,rep,name=kpis,proto3" json:"kpis,omitempty"`     // ✅ Using imported PerformanceKPI
	Skills        []*SkillDevelopment    `protobuf:"bytes,9,rep,name=skills,proto3" json:"skills,omitempty"` // ✅ Using imported SkillDevelopment
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreatePerformanceReviewRequest) Reset() {
	*x = CreatePerformanceReviewRequest{}
	mi := &file_proto_performance_review_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreatePerformanceReviewRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePerformanceReviewRequest) ProtoMessage() {}

func (x *CreatePerformanceReviewRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_performance_review_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePerformanceReviewRequest.ProtoReflect.Descriptor instead.
func (*CreatePerformanceReviewRequest) Descriptor() ([]byte, []int) {
	return file_proto_performance_review_proto_rawDescGZIP(), []int{1}
}

func (x *CreatePerformanceReviewRequest) GetEmployeeId() uint64 {
	if x != nil {
		return x.EmployeeId
	}
	return 0
}

func (x *CreatePerformanceReviewRequest) GetReviewerId() uint64 {
	if x != nil {
		return x.ReviewerId
	}
	return 0
}

func (x *CreatePerformanceReviewRequest) GetReviewDate() *timestamppb.Timestamp {
	if x != nil {
		return x.ReviewDate
	}
	return nil
}

func (x *CreatePerformanceReviewRequest) GetReviewPeriod() string {
	if x != nil {
		return x.ReviewPeriod
	}
	return ""
}

func (x *CreatePerformanceReviewRequest) GetOverallRating() int32 {
	if x != nil {
		return x.OverallRating
	}
	return 0
}

func (x *CreatePerformanceReviewRequest) GetFeedback() string {
	if x != nil {
		return x.Feedback
	}
	return ""
}

func (x *CreatePerformanceReviewRequest) GetPromotion() bool {
	if x != nil {
		return x.Promotion
	}
	return false
}

func (x *CreatePerformanceReviewRequest) GetKpis() []*PerformanceKPI {
	if x != nil {
		return x.Kpis
	}
	return nil
}

func (x *CreatePerformanceReviewRequest) GetSkills() []*SkillDevelopment {
	if x != nil {
		return x.Skills
	}
	return nil
}

type PerformanceReviewResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Review        *PerformanceReview     `protobuf:"bytes,1,opt,name=review,proto3" json:"review,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PerformanceReviewResponse) Reset() {
	*x = PerformanceReviewResponse{}
	mi := &file_proto_performance_review_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PerformanceReviewResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PerformanceReviewResponse) ProtoMessage() {}

func (x *PerformanceReviewResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_performance_review_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PerformanceReviewResponse.ProtoReflect.Descriptor instead.
func (*PerformanceReviewResponse) Descriptor() ([]byte, []int) {
	return file_proto_performance_review_proto_rawDescGZIP(), []int{2}
}

func (x *PerformanceReviewResponse) GetReview() *PerformanceReview {
	if x != nil {
		return x.Review
	}
	return nil
}

type GetPerformanceReviewRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ReviewId      uint64                 `protobuf:"varint,1,opt,name=review_id,json=reviewId,proto3" json:"review_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPerformanceReviewRequest) Reset() {
	*x = GetPerformanceReviewRequest{}
	mi := &file_proto_performance_review_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPerformanceReviewRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPerformanceReviewRequest) ProtoMessage() {}

func (x *GetPerformanceReviewRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_performance_review_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPerformanceReviewRequest.ProtoReflect.Descriptor instead.
func (*GetPerformanceReviewRequest) Descriptor() ([]byte, []int) {
	return file_proto_performance_review_proto_rawDescGZIP(), []int{3}
}

func (x *GetPerformanceReviewRequest) GetReviewId() uint64 {
	if x != nil {
		return x.ReviewId
	}
	return 0
}

type ListPerformanceReviewsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	EmployeeId    uint64                 `protobuf:"varint,1,opt,name=employee_id,json=employeeId,proto3" json:"employee_id,omitempty"`
	Limit         int32                  `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset        int32                  `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListPerformanceReviewsRequest) Reset() {
	*x = ListPerformanceReviewsRequest{}
	mi := &file_proto_performance_review_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListPerformanceReviewsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPerformanceReviewsRequest) ProtoMessage() {}

func (x *ListPerformanceReviewsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_performance_review_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPerformanceReviewsRequest.ProtoReflect.Descriptor instead.
func (*ListPerformanceReviewsRequest) Descriptor() ([]byte, []int) {
	return file_proto_performance_review_proto_rawDescGZIP(), []int{4}
}

func (x *ListPerformanceReviewsRequest) GetEmployeeId() uint64 {
	if x != nil {
		return x.EmployeeId
	}
	return 0
}

func (x *ListPerformanceReviewsRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListPerformanceReviewsRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

type ListPerformanceReviewsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Reviews       []*PerformanceReview   `protobuf:"bytes,1,rep,name=reviews,proto3" json:"reviews,omitempty"`
	TotalCount    int64                  `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListPerformanceReviewsResponse) Reset() {
	*x = ListPerformanceReviewsResponse{}
	mi := &file_proto_performance_review_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListPerformanceReviewsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPerformanceReviewsResponse) ProtoMessage() {}

func (x *ListPerformanceReviewsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_performance_review_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPerformanceReviewsResponse.ProtoReflect.Descriptor instead.
func (*ListPerformanceReviewsResponse) Descriptor() ([]byte, []int) {
	return file_proto_performance_review_proto_rawDescGZIP(), []int{5}
}

func (x *ListPerformanceReviewsResponse) GetReviews() []*PerformanceReview {
	if x != nil {
		return x.Reviews
	}
	return nil
}

func (x *ListPerformanceReviewsResponse) GetTotalCount() int64 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

type UpdatePerformanceReviewRequest struct {
	state         protoimpl.MessageState     `protogen:"open.v1"`
	ReviewId      uint64                     `protobuf:"varint,1,opt,name=review_id,json=reviewId,proto3" json:"review_id,omitempty"`
	Updates       map[string]*structpb.Value `protobuf:"bytes,2,rep,name=updates,proto3" json:"updates,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // ✅ Now correctly imported
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdatePerformanceReviewRequest) Reset() {
	*x = UpdatePerformanceReviewRequest{}
	mi := &file_proto_performance_review_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdatePerformanceReviewRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePerformanceReviewRequest) ProtoMessage() {}

func (x *UpdatePerformanceReviewRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_performance_review_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePerformanceReviewRequest.ProtoReflect.Descriptor instead.
func (*UpdatePerformanceReviewRequest) Descriptor() ([]byte, []int) {
	return file_proto_performance_review_proto_rawDescGZIP(), []int{6}
}

func (x *UpdatePerformanceReviewRequest) GetReviewId() uint64 {
	if x != nil {
		return x.ReviewId
	}
	return 0
}

func (x *UpdatePerformanceReviewRequest) GetUpdates() map[string]*structpb.Value {
	if x != nil {
		return x.Updates
	}
	return nil
}

type DeletePerformanceReviewRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ReviewId      uint64                 `protobuf:"varint,1,opt,name=review_id,json=reviewId,proto3" json:"review_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeletePerformanceReviewRequest) Reset() {
	*x = DeletePerformanceReviewRequest{}
	mi := &file_proto_performance_review_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeletePerformanceReviewRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePerformanceReviewRequest) ProtoMessage() {}

func (x *DeletePerformanceReviewRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_performance_review_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePerformanceReviewRequest.ProtoReflect.Descriptor instead.
func (*DeletePerformanceReviewRequest) Descriptor() ([]byte, []int) {
	return file_proto_performance_review_proto_rawDescGZIP(), []int{7}
}

func (x *DeletePerformanceReviewRequest) GetReviewId() uint64 {
	if x != nil {
		return x.ReviewId
	}
	return 0
}

var File_proto_performance_review_proto protoreflect.FileDescriptor

var file_proto_performance_review_proto_rawDesc = string([]byte{
	0x0a, 0x1e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x70, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x61,
	0x6e, 0x63, 0x65, 0x5f, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x04, 0x68, 0x72, 0x6d, 0x73, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x1b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x70, 0x65, 0x72, 0x66, 0x6f, 0x72,
	0x6d, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x6b, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x1d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x5f, 0x64, 0x65, 0x76,
	0x65, 0x6c, 0x6f, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x82,
	0x03, 0x0a, 0x11, 0x50, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65,
	0x76, 0x69, 0x65, 0x77, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x65, 0x6d, 0x70, 0x6c, 0x6f,
	0x79, 0x65, 0x65, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x72, 0x65, 0x76, 0x69,
	0x65, 0x77, 0x65, 0x72, 0x49, 0x64, 0x12, 0x3b, 0x0a, 0x0b, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77,
	0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x44,
	0x61, 0x74, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x5f, 0x70, 0x65,
	0x72, 0x69, 0x6f, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x76, 0x69,
	0x65, 0x77, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x6f, 0x76, 0x65, 0x72,
	0x61, 0x6c, 0x6c, 0x5f, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0d, 0x6f, 0x76, 0x65, 0x72, 0x61, 0x6c, 0x6c, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x12,
	0x1a, 0x0a, 0x08, 0x66, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x66, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x12, 0x1c, 0x0a, 0x09, 0x70,
	0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09,
	0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x28, 0x0a, 0x04, 0x6b, 0x70, 0x69,
	0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x68, 0x72, 0x6d, 0x73, 0x2e, 0x50,
	0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x4b, 0x50, 0x49, 0x52, 0x04, 0x6b,
	0x70, 0x69, 0x73, 0x12, 0x2e, 0x0a, 0x06, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x73, 0x18, 0x0a, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x68, 0x72, 0x6d, 0x73, 0x2e, 0x53, 0x6b, 0x69, 0x6c, 0x6c,
	0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x06, 0x73, 0x6b, 0x69,
	0x6c, 0x6c, 0x73, 0x22, 0xff, 0x02, 0x0a, 0x1e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x65,
	0x72, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x6d, 0x70, 0x6c, 0x6f, 0x79,
	0x65, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x65, 0x6d, 0x70,
	0x6c, 0x6f, 0x79, 0x65, 0x65, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x76, 0x69, 0x65,
	0x77, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x72, 0x65,
	0x76, 0x69, 0x65, 0x77, 0x65, 0x72, 0x49, 0x64, 0x12, 0x3b, 0x0a, 0x0b, 0x72, 0x65, 0x76, 0x69,
	0x65, 0x77, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x72, 0x65, 0x76, 0x69, 0x65,
	0x77, 0x44, 0x61, 0x74, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x5f,
	0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65,
	0x76, 0x69, 0x65, 0x77, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x6f, 0x76,
	0x65, 0x72, 0x61, 0x6c, 0x6c, 0x5f, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0d, 0x6f, 0x76, 0x65, 0x72, 0x61, 0x6c, 0x6c, 0x52, 0x61, 0x74, 0x69, 0x6e,
	0x67, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x12, 0x1c, 0x0a,
	0x09, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x09, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x28, 0x0a, 0x04, 0x6b,
	0x70, 0x69, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x68, 0x72, 0x6d, 0x73,
	0x2e, 0x50, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x4b, 0x50, 0x49, 0x52,
	0x04, 0x6b, 0x70, 0x69, 0x73, 0x12, 0x2e, 0x0a, 0x06, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x73, 0x18,
	0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x68, 0x72, 0x6d, 0x73, 0x2e, 0x53, 0x6b, 0x69,
	0x6c, 0x6c, 0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x06, 0x73,
	0x6b, 0x69, 0x6c, 0x6c, 0x73, 0x22, 0x4c, 0x0a, 0x19, 0x50, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d,
	0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x2f, 0x0a, 0x06, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x68, 0x72, 0x6d, 0x73, 0x2e, 0x50, 0x65, 0x72, 0x66, 0x6f, 0x72,
	0x6d, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x06, 0x72, 0x65, 0x76,
	0x69, 0x65, 0x77, 0x22, 0x3a, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x50, 0x65, 0x72, 0x66, 0x6f, 0x72,
	0x6d, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x49, 0x64, 0x22,
	0x6e, 0x0a, 0x1d, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x6e,
	0x63, 0x65, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x65, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x49,
	0x64, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x22,
	0x74, 0x0a, 0x1e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x6e,
	0x63, 0x65, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x31, 0x0a, 0x07, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x68, 0x72, 0x6d, 0x73, 0x2e, 0x50, 0x65, 0x72, 0x66, 0x6f, 0x72,
	0x6d, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x07, 0x72, 0x65, 0x76,
	0x69, 0x65, 0x77, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xde, 0x01, 0x0a, 0x1e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x50, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x76, 0x69, 0x65,
	0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x65, 0x76, 0x69,
	0x65, 0x77, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x72, 0x65, 0x76,
	0x69, 0x65, 0x77, 0x49, 0x64, 0x12, 0x4b, 0x0a, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x68, 0x72, 0x6d, 0x73, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x50, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x52,
	0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x73, 0x1a, 0x52, 0x0a, 0x0c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x2c, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x3d, 0x0a, 0x1e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x50, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x76, 0x69, 0x65,
	0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x65, 0x76, 0x69,
	0x65, 0x77, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x72, 0x65, 0x76,
	0x69, 0x65, 0x77, 0x49, 0x64, 0x32, 0xf3, 0x03, 0x0a, 0x18, 0x50, 0x65, 0x72, 0x66, 0x6f, 0x72,
	0x6d, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x12, 0x60, 0x0a, 0x17, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x65, 0x72, 0x66,
	0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x12, 0x24, 0x2e,
	0x68, 0x72, 0x6d, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x65, 0x72, 0x66, 0x6f,
	0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x68, 0x72, 0x6d, 0x73, 0x2e, 0x50, 0x65, 0x72, 0x66, 0x6f,
	0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5e, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x50, 0x65, 0x72, 0x66, 0x6f,
	0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x42, 0x79, 0x49, 0x44,
	0x12, 0x21, 0x2e, 0x68, 0x72, 0x6d, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x65, 0x72, 0x66, 0x6f,
	0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x68, 0x72, 0x6d, 0x73, 0x2e, 0x50, 0x65, 0x72, 0x66, 0x6f,
	0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x63, 0x0a, 0x16, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x65, 0x72, 0x66,
	0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x73, 0x12, 0x23,
	0x2e, 0x68, 0x72, 0x6d, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x65, 0x72, 0x66, 0x6f, 0x72,
	0x6d, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x68, 0x72, 0x6d, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50,
	0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x57, 0x0a, 0x17, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x50, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65,
	0x76, 0x69, 0x65, 0x77, 0x12, 0x24, 0x2e, 0x68, 0x72, 0x6d, 0x73, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x50, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x76,
	0x69, 0x65, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x12, 0x57, 0x0a, 0x17, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x65, 0x72, 0x66,
	0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x12, 0x24, 0x2e,
	0x68, 0x72, 0x6d, 0x73, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x65, 0x72, 0x66, 0x6f,
	0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x42, 0x11, 0x5a, 0x0f, 0x68,
	0x72, 0x6d, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x3b, 0x68, 0x72, 0x6d, 0x73, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_proto_performance_review_proto_rawDescOnce sync.Once
	file_proto_performance_review_proto_rawDescData []byte
)

func file_proto_performance_review_proto_rawDescGZIP() []byte {
	file_proto_performance_review_proto_rawDescOnce.Do(func() {
		file_proto_performance_review_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_performance_review_proto_rawDesc), len(file_proto_performance_review_proto_rawDesc)))
	})
	return file_proto_performance_review_proto_rawDescData
}

var file_proto_performance_review_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_proto_performance_review_proto_goTypes = []any{
	(*PerformanceReview)(nil),              // 0: hrms.PerformanceReview
	(*CreatePerformanceReviewRequest)(nil), // 1: hrms.CreatePerformanceReviewRequest
	(*PerformanceReviewResponse)(nil),      // 2: hrms.PerformanceReviewResponse
	(*GetPerformanceReviewRequest)(nil),    // 3: hrms.GetPerformanceReviewRequest
	(*ListPerformanceReviewsRequest)(nil),  // 4: hrms.ListPerformanceReviewsRequest
	(*ListPerformanceReviewsResponse)(nil), // 5: hrms.ListPerformanceReviewsResponse
	(*UpdatePerformanceReviewRequest)(nil), // 6: hrms.UpdatePerformanceReviewRequest
	(*DeletePerformanceReviewRequest)(nil), // 7: hrms.DeletePerformanceReviewRequest
	nil,                                    // 8: hrms.UpdatePerformanceReviewRequest.UpdatesEntry
	(*timestamppb.Timestamp)(nil),          // 9: google.protobuf.Timestamp
	(*PerformanceKPI)(nil),                 // 10: hrms.PerformanceKPI
	(*SkillDevelopment)(nil),               // 11: hrms.SkillDevelopment
	(*structpb.Value)(nil),                 // 12: google.protobuf.Value
	(*emptypb.Empty)(nil),                  // 13: google.protobuf.Empty
}
var file_proto_performance_review_proto_depIdxs = []int32{
	9,  // 0: hrms.PerformanceReview.review_date:type_name -> google.protobuf.Timestamp
	10, // 1: hrms.PerformanceReview.kpis:type_name -> hrms.PerformanceKPI
	11, // 2: hrms.PerformanceReview.skills:type_name -> hrms.SkillDevelopment
	9,  // 3: hrms.CreatePerformanceReviewRequest.review_date:type_name -> google.protobuf.Timestamp
	10, // 4: hrms.CreatePerformanceReviewRequest.kpis:type_name -> hrms.PerformanceKPI
	11, // 5: hrms.CreatePerformanceReviewRequest.skills:type_name -> hrms.SkillDevelopment
	0,  // 6: hrms.PerformanceReviewResponse.review:type_name -> hrms.PerformanceReview
	0,  // 7: hrms.ListPerformanceReviewsResponse.reviews:type_name -> hrms.PerformanceReview
	8,  // 8: hrms.UpdatePerformanceReviewRequest.updates:type_name -> hrms.UpdatePerformanceReviewRequest.UpdatesEntry
	12, // 9: hrms.UpdatePerformanceReviewRequest.UpdatesEntry.value:type_name -> google.protobuf.Value
	1,  // 10: hrms.PerformanceReviewService.CreatePerformanceReview:input_type -> hrms.CreatePerformanceReviewRequest
	3,  // 11: hrms.PerformanceReviewService.GetPerformanceReviewByID:input_type -> hrms.GetPerformanceReviewRequest
	4,  // 12: hrms.PerformanceReviewService.ListPerformanceReviews:input_type -> hrms.ListPerformanceReviewsRequest
	6,  // 13: hrms.PerformanceReviewService.UpdatePerformanceReview:input_type -> hrms.UpdatePerformanceReviewRequest
	7,  // 14: hrms.PerformanceReviewService.DeletePerformanceReview:input_type -> hrms.DeletePerformanceReviewRequest
	2,  // 15: hrms.PerformanceReviewService.CreatePerformanceReview:output_type -> hrms.PerformanceReviewResponse
	2,  // 16: hrms.PerformanceReviewService.GetPerformanceReviewByID:output_type -> hrms.PerformanceReviewResponse
	5,  // 17: hrms.PerformanceReviewService.ListPerformanceReviews:output_type -> hrms.ListPerformanceReviewsResponse
	13, // 18: hrms.PerformanceReviewService.UpdatePerformanceReview:output_type -> google.protobuf.Empty
	13, // 19: hrms.PerformanceReviewService.DeletePerformanceReview:output_type -> google.protobuf.Empty
	15, // [15:20] is the sub-list for method output_type
	10, // [10:15] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_proto_performance_review_proto_init() }
func file_proto_performance_review_proto_init() {
	if File_proto_performance_review_proto != nil {
		return
	}
	file_proto_performance_kpi_proto_init()
	file_proto_skill_development_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_performance_review_proto_rawDesc), len(file_proto_performance_review_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_performance_review_proto_goTypes,
		DependencyIndexes: file_proto_performance_review_proto_depIdxs,
		MessageInfos:      file_proto_performance_review_proto_msgTypes,
	}.Build()
	File_proto_performance_review_proto = out.File
	file_proto_performance_review_proto_goTypes = nil
	file_proto_performance_review_proto_depIdxs = nil
}
