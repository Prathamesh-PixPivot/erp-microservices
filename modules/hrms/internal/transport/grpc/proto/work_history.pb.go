// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v5.29.3
// source: proto/work_history.proto

package hrms

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// WorkHistory message structure.
type WorkHistory struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            uint64                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	EmployeeId    uint64                 `protobuf:"varint,2,opt,name=employee_id,json=employeeId,proto3" json:"employee_id,omitempty"`
	Company       string                 `protobuf:"bytes,3,opt,name=company,proto3" json:"company,omitempty"`
	Designation   string                 `protobuf:"bytes,4,opt,name=designation,proto3" json:"designation,omitempty"`
	StartDate     string                 `protobuf:"bytes,5,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty"`
	EndDate       string                 `protobuf:"bytes,6,opt,name=end_date,json=endDate,proto3" json:"end_date,omitempty"`
	ReasonForExit string                 `protobuf:"bytes,7,opt,name=reason_for_exit,json=reasonForExit,proto3" json:"reason_for_exit,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WorkHistory) Reset() {
	*x = WorkHistory{}
	mi := &file_proto_work_history_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WorkHistory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkHistory) ProtoMessage() {}

func (x *WorkHistory) ProtoReflect() protoreflect.Message {
	mi := &file_proto_work_history_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkHistory.ProtoReflect.Descriptor instead.
func (*WorkHistory) Descriptor() ([]byte, []int) {
	return file_proto_work_history_proto_rawDescGZIP(), []int{0}
}

func (x *WorkHistory) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *WorkHistory) GetEmployeeId() uint64 {
	if x != nil {
		return x.EmployeeId
	}
	return 0
}

func (x *WorkHistory) GetCompany() string {
	if x != nil {
		return x.Company
	}
	return ""
}

func (x *WorkHistory) GetDesignation() string {
	if x != nil {
		return x.Designation
	}
	return ""
}

func (x *WorkHistory) GetStartDate() string {
	if x != nil {
		return x.StartDate
	}
	return ""
}

func (x *WorkHistory) GetEndDate() string {
	if x != nil {
		return x.EndDate
	}
	return ""
}

func (x *WorkHistory) GetReasonForExit() string {
	if x != nil {
		return x.ReasonForExit
	}
	return ""
}

// Request & Response messages.
type CreateWorkHistoryRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	EmployeeId    uint64                 `protobuf:"varint,1,opt,name=employee_id,json=employeeId,proto3" json:"employee_id,omitempty"`
	Company       string                 `protobuf:"bytes,2,opt,name=company,proto3" json:"company,omitempty"`
	Designation   string                 `protobuf:"bytes,3,opt,name=designation,proto3" json:"designation,omitempty"`
	StartDate     string                 `protobuf:"bytes,4,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty"`
	EndDate       string                 `protobuf:"bytes,5,opt,name=end_date,json=endDate,proto3" json:"end_date,omitempty"`
	ReasonForExit string                 `protobuf:"bytes,6,opt,name=reason_for_exit,json=reasonForExit,proto3" json:"reason_for_exit,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateWorkHistoryRequest) Reset() {
	*x = CreateWorkHistoryRequest{}
	mi := &file_proto_work_history_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateWorkHistoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateWorkHistoryRequest) ProtoMessage() {}

func (x *CreateWorkHistoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_work_history_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateWorkHistoryRequest.ProtoReflect.Descriptor instead.
func (*CreateWorkHistoryRequest) Descriptor() ([]byte, []int) {
	return file_proto_work_history_proto_rawDescGZIP(), []int{1}
}

func (x *CreateWorkHistoryRequest) GetEmployeeId() uint64 {
	if x != nil {
		return x.EmployeeId
	}
	return 0
}

func (x *CreateWorkHistoryRequest) GetCompany() string {
	if x != nil {
		return x.Company
	}
	return ""
}

func (x *CreateWorkHistoryRequest) GetDesignation() string {
	if x != nil {
		return x.Designation
	}
	return ""
}

func (x *CreateWorkHistoryRequest) GetStartDate() string {
	if x != nil {
		return x.StartDate
	}
	return ""
}

func (x *CreateWorkHistoryRequest) GetEndDate() string {
	if x != nil {
		return x.EndDate
	}
	return ""
}

func (x *CreateWorkHistoryRequest) GetReasonForExit() string {
	if x != nil {
		return x.ReasonForExit
	}
	return ""
}

type WorkHistoryResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	WorkHistory   *WorkHistory           `protobuf:"bytes,1,opt,name=work_history,json=workHistory,proto3" json:"work_history,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WorkHistoryResponse) Reset() {
	*x = WorkHistoryResponse{}
	mi := &file_proto_work_history_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WorkHistoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkHistoryResponse) ProtoMessage() {}

func (x *WorkHistoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_work_history_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkHistoryResponse.ProtoReflect.Descriptor instead.
func (*WorkHistoryResponse) Descriptor() ([]byte, []int) {
	return file_proto_work_history_proto_rawDescGZIP(), []int{2}
}

func (x *WorkHistoryResponse) GetWorkHistory() *WorkHistory {
	if x != nil {
		return x.WorkHistory
	}
	return nil
}

type GetWorkHistoryByIDRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	WorkHistoryId uint64                 `protobuf:"varint,1,opt,name=work_history_id,json=workHistoryId,proto3" json:"work_history_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetWorkHistoryByIDRequest) Reset() {
	*x = GetWorkHistoryByIDRequest{}
	mi := &file_proto_work_history_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetWorkHistoryByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWorkHistoryByIDRequest) ProtoMessage() {}

func (x *GetWorkHistoryByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_work_history_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWorkHistoryByIDRequest.ProtoReflect.Descriptor instead.
func (*GetWorkHistoryByIDRequest) Descriptor() ([]byte, []int) {
	return file_proto_work_history_proto_rawDescGZIP(), []int{3}
}

func (x *GetWorkHistoryByIDRequest) GetWorkHistoryId() uint64 {
	if x != nil {
		return x.WorkHistoryId
	}
	return 0
}

type GetWorkHistoryByEmployeeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	EmployeeId    uint64                 `protobuf:"varint,1,opt,name=employee_id,json=employeeId,proto3" json:"employee_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetWorkHistoryByEmployeeRequest) Reset() {
	*x = GetWorkHistoryByEmployeeRequest{}
	mi := &file_proto_work_history_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetWorkHistoryByEmployeeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWorkHistoryByEmployeeRequest) ProtoMessage() {}

func (x *GetWorkHistoryByEmployeeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_work_history_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWorkHistoryByEmployeeRequest.ProtoReflect.Descriptor instead.
func (*GetWorkHistoryByEmployeeRequest) Descriptor() ([]byte, []int) {
	return file_proto_work_history_proto_rawDescGZIP(), []int{4}
}

func (x *GetWorkHistoryByEmployeeRequest) GetEmployeeId() uint64 {
	if x != nil {
		return x.EmployeeId
	}
	return 0
}

type GetWorkHistoryByEmployeeResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	WorkHistories []*WorkHistory         `protobuf:"bytes,1,rep,name=work_histories,json=workHistories,proto3" json:"work_histories,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetWorkHistoryByEmployeeResponse) Reset() {
	*x = GetWorkHistoryByEmployeeResponse{}
	mi := &file_proto_work_history_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetWorkHistoryByEmployeeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWorkHistoryByEmployeeResponse) ProtoMessage() {}

func (x *GetWorkHistoryByEmployeeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_work_history_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWorkHistoryByEmployeeResponse.ProtoReflect.Descriptor instead.
func (*GetWorkHistoryByEmployeeResponse) Descriptor() ([]byte, []int) {
	return file_proto_work_history_proto_rawDescGZIP(), []int{5}
}

func (x *GetWorkHistoryByEmployeeResponse) GetWorkHistories() []*WorkHistory {
	if x != nil {
		return x.WorkHistories
	}
	return nil
}

type UpdateWorkHistoryRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	WorkHistoryId uint64                 `protobuf:"varint,1,opt,name=work_history_id,json=workHistoryId,proto3" json:"work_history_id,omitempty"`
	Updates       map[string]string      `protobuf:"bytes,2,rep,name=updates,proto3" json:"updates,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // Dynamic field updates
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateWorkHistoryRequest) Reset() {
	*x = UpdateWorkHistoryRequest{}
	mi := &file_proto_work_history_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateWorkHistoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateWorkHistoryRequest) ProtoMessage() {}

func (x *UpdateWorkHistoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_work_history_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateWorkHistoryRequest.ProtoReflect.Descriptor instead.
func (*UpdateWorkHistoryRequest) Descriptor() ([]byte, []int) {
	return file_proto_work_history_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateWorkHistoryRequest) GetWorkHistoryId() uint64 {
	if x != nil {
		return x.WorkHistoryId
	}
	return 0
}

func (x *UpdateWorkHistoryRequest) GetUpdates() map[string]string {
	if x != nil {
		return x.Updates
	}
	return nil
}

type UpdateWorkHistoryResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateWorkHistoryResponse) Reset() {
	*x = UpdateWorkHistoryResponse{}
	mi := &file_proto_work_history_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateWorkHistoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateWorkHistoryResponse) ProtoMessage() {}

func (x *UpdateWorkHistoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_work_history_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateWorkHistoryResponse.ProtoReflect.Descriptor instead.
func (*UpdateWorkHistoryResponse) Descriptor() ([]byte, []int) {
	return file_proto_work_history_proto_rawDescGZIP(), []int{7}
}

func (x *UpdateWorkHistoryResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type DeleteWorkHistoryRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	WorkHistoryId uint64                 `protobuf:"varint,1,opt,name=work_history_id,json=workHistoryId,proto3" json:"work_history_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteWorkHistoryRequest) Reset() {
	*x = DeleteWorkHistoryRequest{}
	mi := &file_proto_work_history_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteWorkHistoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteWorkHistoryRequest) ProtoMessage() {}

func (x *DeleteWorkHistoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_work_history_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteWorkHistoryRequest.ProtoReflect.Descriptor instead.
func (*DeleteWorkHistoryRequest) Descriptor() ([]byte, []int) {
	return file_proto_work_history_proto_rawDescGZIP(), []int{8}
}

func (x *DeleteWorkHistoryRequest) GetWorkHistoryId() uint64 {
	if x != nil {
		return x.WorkHistoryId
	}
	return 0
}

type DeleteWorkHistoryResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteWorkHistoryResponse) Reset() {
	*x = DeleteWorkHistoryResponse{}
	mi := &file_proto_work_history_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteWorkHistoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteWorkHistoryResponse) ProtoMessage() {}

func (x *DeleteWorkHistoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_work_history_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteWorkHistoryResponse.ProtoReflect.Descriptor instead.
func (*DeleteWorkHistoryResponse) Descriptor() ([]byte, []int) {
	return file_proto_work_history_proto_rawDescGZIP(), []int{9}
}

func (x *DeleteWorkHistoryResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

var File_proto_work_history_proto protoreflect.FileDescriptor

var file_proto_work_history_proto_rawDesc = string([]byte{
	0x0a, 0x18, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x68, 0x69, 0x73,
	0x74, 0x6f, 0x72, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x68, 0x72, 0x6d, 0x73,
	0x22, 0xdc, 0x01, 0x0a, 0x0b, 0x57, 0x6f, 0x72, 0x6b, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x65, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x49,
	0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x64,
	0x65, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x64, 0x65, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a,
	0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x19, 0x0a, 0x08,
	0x65, 0x6e, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x72, 0x65, 0x61, 0x73, 0x6f,
	0x6e, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x65, 0x78, 0x69, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x46, 0x6f, 0x72, 0x45, 0x78, 0x69, 0x74, 0x22,
	0xd9, 0x01, 0x0a, 0x18, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x48, 0x69,
	0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b,
	0x65, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x0a, 0x65, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x49, 0x64, 0x12, 0x18, 0x0a,
	0x07, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x69, 0x67,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65,
	0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f,
	0x64, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x44,
	0x61, 0x74, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x5f, 0x66, 0x6f,
	0x72, 0x5f, 0x65, 0x78, 0x69, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x72, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x46, 0x6f, 0x72, 0x45, 0x78, 0x69, 0x74, 0x22, 0x4b, 0x0a, 0x13, 0x57,
	0x6f, 0x72, 0x6b, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x34, 0x0a, 0x0c, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x68, 0x69, 0x73, 0x74, 0x6f,
	0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x68, 0x72, 0x6d, 0x73, 0x2e,
	0x57, 0x6f, 0x72, 0x6b, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x0b, 0x77, 0x6f, 0x72,
	0x6b, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x22, 0x43, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x57,
	0x6f, 0x72, 0x6b, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x0f, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x68, 0x69,
	0x73, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d,
	0x77, 0x6f, 0x72, 0x6b, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x22, 0x42, 0x0a,
	0x1f, 0x47, 0x65, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x42,
	0x79, 0x45, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x65, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x49,
	0x64, 0x22, 0x5c, 0x0a, 0x20, 0x47, 0x65, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x48, 0x69, 0x73, 0x74,
	0x6f, 0x72, 0x79, 0x42, 0x79, 0x45, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x0e, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x68, 0x69,
	0x73, 0x74, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e,
	0x68, 0x72, 0x6d, 0x73, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79,
	0x52, 0x0d, 0x77, 0x6f, 0x72, 0x6b, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x22,
	0xc5, 0x01, 0x0a, 0x18, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x48, 0x69,
	0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x0f,
	0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x77, 0x6f, 0x72, 0x6b, 0x48, 0x69, 0x73, 0x74, 0x6f,
	0x72, 0x79, 0x49, 0x64, 0x12, 0x45, 0x0a, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x68, 0x72, 0x6d, 0x73, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x1a, 0x3a, 0x0a, 0x0c, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x35, 0x0a, 0x19, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x57, 0x6f, 0x72, 0x6b, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x42,
	0x0a, 0x18, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x48, 0x69, 0x73, 0x74,
	0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x0f, 0x77, 0x6f,
	0x72, 0x6b, 0x5f, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x0d, 0x77, 0x6f, 0x72, 0x6b, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79,
	0x49, 0x64, 0x22, 0x35, 0x0a, 0x19, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x57, 0x6f, 0x72, 0x6b,
	0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x32, 0xcd, 0x03, 0x0a, 0x12, 0x57, 0x6f,
	0x72, 0x6b, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x4e, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x48, 0x69,
	0x73, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x1e, 0x2e, 0x68, 0x72, 0x6d, 0x73, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x68, 0x72, 0x6d, 0x73, 0x2e, 0x57, 0x6f, 0x72,
	0x6b, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x50, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x48, 0x69, 0x73, 0x74, 0x6f,
	0x72, 0x79, 0x42, 0x79, 0x49, 0x44, 0x12, 0x1f, 0x2e, 0x68, 0x72, 0x6d, 0x73, 0x2e, 0x47, 0x65,
	0x74, 0x57, 0x6f, 0x72, 0x6b, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x42, 0x79, 0x49, 0x44,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x68, 0x72, 0x6d, 0x73, 0x2e, 0x57,
	0x6f, 0x72, 0x6b, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x69, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x48, 0x69, 0x73,
	0x74, 0x6f, 0x72, 0x79, 0x42, 0x79, 0x45, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x12, 0x25,
	0x2e, 0x68, 0x72, 0x6d, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x48, 0x69, 0x73,
	0x74, 0x6f, 0x72, 0x79, 0x42, 0x79, 0x45, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x68, 0x72, 0x6d, 0x73, 0x2e, 0x47, 0x65, 0x74,
	0x57, 0x6f, 0x72, 0x6b, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x42, 0x79, 0x45, 0x6d, 0x70,
	0x6c, 0x6f, 0x79, 0x65, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x54, 0x0a,
	0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x48, 0x69, 0x73, 0x74, 0x6f,
	0x72, 0x79, 0x12, 0x1e, 0x2e, 0x68, 0x72, 0x6d, 0x73, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x57, 0x6f, 0x72, 0x6b, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x68, 0x72, 0x6d, 0x73, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x57, 0x6f, 0x72, 0x6b, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x54, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x57, 0x6f, 0x72,
	0x6b, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x1e, 0x2e, 0x68, 0x72, 0x6d, 0x73, 0x2e,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72,
	0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x68, 0x72, 0x6d, 0x73, 0x2e,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72,
	0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x11, 0x5a, 0x0f, 0x68, 0x72, 0x6d,
	0x73, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x3b, 0x68, 0x72, 0x6d, 0x73, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_proto_work_history_proto_rawDescOnce sync.Once
	file_proto_work_history_proto_rawDescData []byte
)

func file_proto_work_history_proto_rawDescGZIP() []byte {
	file_proto_work_history_proto_rawDescOnce.Do(func() {
		file_proto_work_history_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_work_history_proto_rawDesc), len(file_proto_work_history_proto_rawDesc)))
	})
	return file_proto_work_history_proto_rawDescData
}

var file_proto_work_history_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_proto_work_history_proto_goTypes = []any{
	(*WorkHistory)(nil),                      // 0: hrms.WorkHistory
	(*CreateWorkHistoryRequest)(nil),         // 1: hrms.CreateWorkHistoryRequest
	(*WorkHistoryResponse)(nil),              // 2: hrms.WorkHistoryResponse
	(*GetWorkHistoryByIDRequest)(nil),        // 3: hrms.GetWorkHistoryByIDRequest
	(*GetWorkHistoryByEmployeeRequest)(nil),  // 4: hrms.GetWorkHistoryByEmployeeRequest
	(*GetWorkHistoryByEmployeeResponse)(nil), // 5: hrms.GetWorkHistoryByEmployeeResponse
	(*UpdateWorkHistoryRequest)(nil),         // 6: hrms.UpdateWorkHistoryRequest
	(*UpdateWorkHistoryResponse)(nil),        // 7: hrms.UpdateWorkHistoryResponse
	(*DeleteWorkHistoryRequest)(nil),         // 8: hrms.DeleteWorkHistoryRequest
	(*DeleteWorkHistoryResponse)(nil),        // 9: hrms.DeleteWorkHistoryResponse
	nil,                                      // 10: hrms.UpdateWorkHistoryRequest.UpdatesEntry
}
var file_proto_work_history_proto_depIdxs = []int32{
	0,  // 0: hrms.WorkHistoryResponse.work_history:type_name -> hrms.WorkHistory
	0,  // 1: hrms.GetWorkHistoryByEmployeeResponse.work_histories:type_name -> hrms.WorkHistory
	10, // 2: hrms.UpdateWorkHistoryRequest.updates:type_name -> hrms.UpdateWorkHistoryRequest.UpdatesEntry
	1,  // 3: hrms.WorkHistoryService.CreateWorkHistory:input_type -> hrms.CreateWorkHistoryRequest
	3,  // 4: hrms.WorkHistoryService.GetWorkHistoryByID:input_type -> hrms.GetWorkHistoryByIDRequest
	4,  // 5: hrms.WorkHistoryService.GetWorkHistoryByEmployee:input_type -> hrms.GetWorkHistoryByEmployeeRequest
	6,  // 6: hrms.WorkHistoryService.UpdateWorkHistory:input_type -> hrms.UpdateWorkHistoryRequest
	8,  // 7: hrms.WorkHistoryService.DeleteWorkHistory:input_type -> hrms.DeleteWorkHistoryRequest
	2,  // 8: hrms.WorkHistoryService.CreateWorkHistory:output_type -> hrms.WorkHistoryResponse
	2,  // 9: hrms.WorkHistoryService.GetWorkHistoryByID:output_type -> hrms.WorkHistoryResponse
	5,  // 10: hrms.WorkHistoryService.GetWorkHistoryByEmployee:output_type -> hrms.GetWorkHistoryByEmployeeResponse
	7,  // 11: hrms.WorkHistoryService.UpdateWorkHistory:output_type -> hrms.UpdateWorkHistoryResponse
	9,  // 12: hrms.WorkHistoryService.DeleteWorkHistory:output_type -> hrms.DeleteWorkHistoryResponse
	8,  // [8:13] is the sub-list for method output_type
	3,  // [3:8] is the sub-list for method input_type
	3,  // [3:3] is the sub-list for extension type_name
	3,  // [3:3] is the sub-list for extension extendee
	0,  // [0:3] is the sub-list for field type_name
}

func init() { file_proto_work_history_proto_init() }
func file_proto_work_history_proto_init() {
	if File_proto_work_history_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_work_history_proto_rawDesc), len(file_proto_work_history_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_work_history_proto_goTypes,
		DependencyIndexes: file_proto_work_history_proto_depIdxs,
		MessageInfos:      file_proto_work_history_proto_msgTypes,
	}.Build()
	File_proto_work_history_proto = out.File
	file_proto_work_history_proto_goTypes = nil
	file_proto_work_history_proto_depIdxs = nil
}
