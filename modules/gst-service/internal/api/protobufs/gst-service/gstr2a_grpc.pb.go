// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.5.1
// - protoc             v5.28.3
// source: internal/api/protobufs/gstr2a.proto

package protobufs

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.64.0 or later.
const _ = grpc.SupportPackageIsVersion9

const (
	GSTR2AService_GetGSTR2AData_FullMethodName   = "/GSTR2AService/GetGSTR2AData"
	GSTR2AService_SaveGSTR2A_FullMethodName      = "/GSTR2AService/SaveGSTR2A"
	GSTR2AService_SubmitGSTR2A_FullMethodName    = "/GSTR2AService/SubmitGSTR2A"
	GSTR2AService_FileGSTR2A_FullMethodName      = "/GSTR2AService/FileGSTR2A"
	GSTR2AService_GetGSTR2AStatus_FullMethodName = "/GSTR2AService/GetGSTR2AStatus"
)

// GSTR2AServiceClient is the client API for GSTR2AService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type GSTR2AServiceClient interface {
	GetGSTR2AData(ctx context.Context, in *GSTR2ARequest, opts ...grpc.CallOption) (*GSTR2AResponse, error)
	SaveGSTR2A(ctx context.Context, in *GSTR2ARequest, opts ...grpc.CallOption) (*GSTR2AResponse, error)
	SubmitGSTR2A(ctx context.Context, in *GSTR2ASubmitRequest, opts ...grpc.CallOption) (*GSTR2ASubmitResponse, error)
	FileGSTR2A(ctx context.Context, in *GSTR2AFileRequest, opts ...grpc.CallOption) (*GSTR2AFileResponse, error)
	GetGSTR2AStatus(ctx context.Context, in *GSTR2AStatusRequest, opts ...grpc.CallOption) (*GSTR2AStatusResponse, error)
}

type gSTR2AServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewGSTR2AServiceClient(cc grpc.ClientConnInterface) GSTR2AServiceClient {
	return &gSTR2AServiceClient{cc}
}

func (c *gSTR2AServiceClient) GetGSTR2AData(ctx context.Context, in *GSTR2ARequest, opts ...grpc.CallOption) (*GSTR2AResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(GSTR2AResponse)
	err := c.cc.Invoke(ctx, GSTR2AService_GetGSTR2AData_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gSTR2AServiceClient) SaveGSTR2A(ctx context.Context, in *GSTR2ARequest, opts ...grpc.CallOption) (*GSTR2AResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(GSTR2AResponse)
	err := c.cc.Invoke(ctx, GSTR2AService_SaveGSTR2A_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gSTR2AServiceClient) SubmitGSTR2A(ctx context.Context, in *GSTR2ASubmitRequest, opts ...grpc.CallOption) (*GSTR2ASubmitResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(GSTR2ASubmitResponse)
	err := c.cc.Invoke(ctx, GSTR2AService_SubmitGSTR2A_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gSTR2AServiceClient) FileGSTR2A(ctx context.Context, in *GSTR2AFileRequest, opts ...grpc.CallOption) (*GSTR2AFileResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(GSTR2AFileResponse)
	err := c.cc.Invoke(ctx, GSTR2AService_FileGSTR2A_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gSTR2AServiceClient) GetGSTR2AStatus(ctx context.Context, in *GSTR2AStatusRequest, opts ...grpc.CallOption) (*GSTR2AStatusResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(GSTR2AStatusResponse)
	err := c.cc.Invoke(ctx, GSTR2AService_GetGSTR2AStatus_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// GSTR2AServiceServer is the server API for GSTR2AService service.
// All implementations must embed UnimplementedGSTR2AServiceServer
// for forward compatibility.
type GSTR2AServiceServer interface {
	GetGSTR2AData(context.Context, *GSTR2ARequest) (*GSTR2AResponse, error)
	SaveGSTR2A(context.Context, *GSTR2ARequest) (*GSTR2AResponse, error)
	SubmitGSTR2A(context.Context, *GSTR2ASubmitRequest) (*GSTR2ASubmitResponse, error)
	FileGSTR2A(context.Context, *GSTR2AFileRequest) (*GSTR2AFileResponse, error)
	GetGSTR2AStatus(context.Context, *GSTR2AStatusRequest) (*GSTR2AStatusResponse, error)
	mustEmbedUnimplementedGSTR2AServiceServer()
}

// UnimplementedGSTR2AServiceServer must be embedded to have
// forward compatible implementations.
//
// NOTE: this should be embedded by value instead of pointer to avoid a nil
// pointer dereference when methods are called.
type UnimplementedGSTR2AServiceServer struct{}

func (UnimplementedGSTR2AServiceServer) GetGSTR2AData(context.Context, *GSTR2ARequest) (*GSTR2AResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetGSTR2AData not implemented")
}
func (UnimplementedGSTR2AServiceServer) SaveGSTR2A(context.Context, *GSTR2ARequest) (*GSTR2AResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SaveGSTR2A not implemented")
}
func (UnimplementedGSTR2AServiceServer) SubmitGSTR2A(context.Context, *GSTR2ASubmitRequest) (*GSTR2ASubmitResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SubmitGSTR2A not implemented")
}
func (UnimplementedGSTR2AServiceServer) FileGSTR2A(context.Context, *GSTR2AFileRequest) (*GSTR2AFileResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FileGSTR2A not implemented")
}
func (UnimplementedGSTR2AServiceServer) GetGSTR2AStatus(context.Context, *GSTR2AStatusRequest) (*GSTR2AStatusResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetGSTR2AStatus not implemented")
}
func (UnimplementedGSTR2AServiceServer) mustEmbedUnimplementedGSTR2AServiceServer() {}
func (UnimplementedGSTR2AServiceServer) testEmbeddedByValue()                       {}

// UnsafeGSTR2AServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to GSTR2AServiceServer will
// result in compilation errors.
type UnsafeGSTR2AServiceServer interface {
	mustEmbedUnimplementedGSTR2AServiceServer()
}

func RegisterGSTR2AServiceServer(s grpc.ServiceRegistrar, srv GSTR2AServiceServer) {
	// If the following call pancis, it indicates UnimplementedGSTR2AServiceServer was
	// embedded by pointer and is nil.  This will cause panics if an
	// unimplemented method is ever invoked, so we test this at initialization
	// time to prevent it from happening at runtime later due to I/O.
	if t, ok := srv.(interface{ testEmbeddedByValue() }); ok {
		t.testEmbeddedByValue()
	}
	s.RegisterService(&GSTR2AService_ServiceDesc, srv)
}

func _GSTR2AService_GetGSTR2AData_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GSTR2ARequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GSTR2AServiceServer).GetGSTR2AData(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: GSTR2AService_GetGSTR2AData_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GSTR2AServiceServer).GetGSTR2AData(ctx, req.(*GSTR2ARequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GSTR2AService_SaveGSTR2A_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GSTR2ARequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GSTR2AServiceServer).SaveGSTR2A(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: GSTR2AService_SaveGSTR2A_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GSTR2AServiceServer).SaveGSTR2A(ctx, req.(*GSTR2ARequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GSTR2AService_SubmitGSTR2A_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GSTR2ASubmitRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GSTR2AServiceServer).SubmitGSTR2A(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: GSTR2AService_SubmitGSTR2A_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GSTR2AServiceServer).SubmitGSTR2A(ctx, req.(*GSTR2ASubmitRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GSTR2AService_FileGSTR2A_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GSTR2AFileRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GSTR2AServiceServer).FileGSTR2A(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: GSTR2AService_FileGSTR2A_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GSTR2AServiceServer).FileGSTR2A(ctx, req.(*GSTR2AFileRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GSTR2AService_GetGSTR2AStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GSTR2AStatusRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GSTR2AServiceServer).GetGSTR2AStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: GSTR2AService_GetGSTR2AStatus_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GSTR2AServiceServer).GetGSTR2AStatus(ctx, req.(*GSTR2AStatusRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// GSTR2AService_ServiceDesc is the grpc.ServiceDesc for GSTR2AService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var GSTR2AService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "GSTR2AService",
	HandlerType: (*GSTR2AServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetGSTR2AData",
			Handler:    _GSTR2AService_GetGSTR2AData_Handler,
		},
		{
			MethodName: "SaveGSTR2A",
			Handler:    _GSTR2AService_SaveGSTR2A_Handler,
		},
		{
			MethodName: "SubmitGSTR2A",
			Handler:    _GSTR2AService_SubmitGSTR2A_Handler,
		},
		{
			MethodName: "FileGSTR2A",
			Handler:    _GSTR2AService_FileGSTR2A_Handler,
		},
		{
			MethodName: "GetGSTR2AStatus",
			Handler:    _GSTR2AService_GetGSTR2AStatus_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "internal/api/protobufs/gstr2a.proto",
}
