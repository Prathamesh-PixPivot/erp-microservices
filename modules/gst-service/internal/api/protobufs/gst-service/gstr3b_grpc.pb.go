// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.5.1
// - protoc             v5.28.3
// source: internal/api/protobufs/gstr3b.proto

package protobufs

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.64.0 or later.
const _ = grpc.SupportPackageIsVersion9

const (
	GSTR3BService_SaveGSTR3B_FullMethodName      = "/GSTR3BService/SaveGSTR3B"
	GSTR3BService_SubmitGSTR3B_FullMethodName    = "/GSTR3BService/SubmitGSTR3B"
	GSTR3BService_FileGSTR3B_FullMethodName      = "/GSTR3BService/FileGSTR3B"
	GSTR3BService_GetGSTR3BStatus_FullMethodName = "/GSTR3BService/GetGSTR3BStatus"
)

// GSTR3BServiceClient is the client API for GSTR3BService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type GSTR3BServiceClient interface {
	SaveGSTR3B(ctx context.Context, in *GSTR3BRequest, opts ...grpc.CallOption) (*GSTR3BResponse, error)
	SubmitGSTR3B(ctx context.Context, in *GSTR3BSubmitRequest, opts ...grpc.CallOption) (*GSTR3BSubmitResponse, error)
	FileGSTR3B(ctx context.Context, in *GSTR3BFileRequest, opts ...grpc.CallOption) (*GSTR3BFileResponse, error)
	GetGSTR3BStatus(ctx context.Context, in *GSTR3BStatusRequest, opts ...grpc.CallOption) (*GSTR3BStatusResponse, error)
}

type gSTR3BServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewGSTR3BServiceClient(cc grpc.ClientConnInterface) GSTR3BServiceClient {
	return &gSTR3BServiceClient{cc}
}

func (c *gSTR3BServiceClient) SaveGSTR3B(ctx context.Context, in *GSTR3BRequest, opts ...grpc.CallOption) (*GSTR3BResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(GSTR3BResponse)
	err := c.cc.Invoke(ctx, GSTR3BService_SaveGSTR3B_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gSTR3BServiceClient) SubmitGSTR3B(ctx context.Context, in *GSTR3BSubmitRequest, opts ...grpc.CallOption) (*GSTR3BSubmitResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(GSTR3BSubmitResponse)
	err := c.cc.Invoke(ctx, GSTR3BService_SubmitGSTR3B_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gSTR3BServiceClient) FileGSTR3B(ctx context.Context, in *GSTR3BFileRequest, opts ...grpc.CallOption) (*GSTR3BFileResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(GSTR3BFileResponse)
	err := c.cc.Invoke(ctx, GSTR3BService_FileGSTR3B_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gSTR3BServiceClient) GetGSTR3BStatus(ctx context.Context, in *GSTR3BStatusRequest, opts ...grpc.CallOption) (*GSTR3BStatusResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(GSTR3BStatusResponse)
	err := c.cc.Invoke(ctx, GSTR3BService_GetGSTR3BStatus_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// GSTR3BServiceServer is the server API for GSTR3BService service.
// All implementations must embed UnimplementedGSTR3BServiceServer
// for forward compatibility.
type GSTR3BServiceServer interface {
	SaveGSTR3B(context.Context, *GSTR3BRequest) (*GSTR3BResponse, error)
	SubmitGSTR3B(context.Context, *GSTR3BSubmitRequest) (*GSTR3BSubmitResponse, error)
	FileGSTR3B(context.Context, *GSTR3BFileRequest) (*GSTR3BFileResponse, error)
	GetGSTR3BStatus(context.Context, *GSTR3BStatusRequest) (*GSTR3BStatusResponse, error)
	mustEmbedUnimplementedGSTR3BServiceServer()
}

// UnimplementedGSTR3BServiceServer must be embedded to have
// forward compatible implementations.
//
// NOTE: this should be embedded by value instead of pointer to avoid a nil
// pointer dereference when methods are called.
type UnimplementedGSTR3BServiceServer struct{}

func (UnimplementedGSTR3BServiceServer) SaveGSTR3B(context.Context, *GSTR3BRequest) (*GSTR3BResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SaveGSTR3B not implemented")
}
func (UnimplementedGSTR3BServiceServer) SubmitGSTR3B(context.Context, *GSTR3BSubmitRequest) (*GSTR3BSubmitResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SubmitGSTR3B not implemented")
}
func (UnimplementedGSTR3BServiceServer) FileGSTR3B(context.Context, *GSTR3BFileRequest) (*GSTR3BFileResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FileGSTR3B not implemented")
}
func (UnimplementedGSTR3BServiceServer) GetGSTR3BStatus(context.Context, *GSTR3BStatusRequest) (*GSTR3BStatusResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetGSTR3BStatus not implemented")
}
func (UnimplementedGSTR3BServiceServer) mustEmbedUnimplementedGSTR3BServiceServer() {}
func (UnimplementedGSTR3BServiceServer) testEmbeddedByValue()                       {}

// UnsafeGSTR3BServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to GSTR3BServiceServer will
// result in compilation errors.
type UnsafeGSTR3BServiceServer interface {
	mustEmbedUnimplementedGSTR3BServiceServer()
}

func RegisterGSTR3BServiceServer(s grpc.ServiceRegistrar, srv GSTR3BServiceServer) {
	// If the following call pancis, it indicates UnimplementedGSTR3BServiceServer was
	// embedded by pointer and is nil.  This will cause panics if an
	// unimplemented method is ever invoked, so we test this at initialization
	// time to prevent it from happening at runtime later due to I/O.
	if t, ok := srv.(interface{ testEmbeddedByValue() }); ok {
		t.testEmbeddedByValue()
	}
	s.RegisterService(&GSTR3BService_ServiceDesc, srv)
}

func _GSTR3BService_SaveGSTR3B_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GSTR3BRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GSTR3BServiceServer).SaveGSTR3B(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: GSTR3BService_SaveGSTR3B_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GSTR3BServiceServer).SaveGSTR3B(ctx, req.(*GSTR3BRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GSTR3BService_SubmitGSTR3B_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GSTR3BSubmitRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GSTR3BServiceServer).SubmitGSTR3B(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: GSTR3BService_SubmitGSTR3B_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GSTR3BServiceServer).SubmitGSTR3B(ctx, req.(*GSTR3BSubmitRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GSTR3BService_FileGSTR3B_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GSTR3BFileRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GSTR3BServiceServer).FileGSTR3B(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: GSTR3BService_FileGSTR3B_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GSTR3BServiceServer).FileGSTR3B(ctx, req.(*GSTR3BFileRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GSTR3BService_GetGSTR3BStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GSTR3BStatusRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GSTR3BServiceServer).GetGSTR3BStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: GSTR3BService_GetGSTR3BStatus_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GSTR3BServiceServer).GetGSTR3BStatus(ctx, req.(*GSTR3BStatusRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// GSTR3BService_ServiceDesc is the grpc.ServiceDesc for GSTR3BService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var GSTR3BService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "GSTR3BService",
	HandlerType: (*GSTR3BServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SaveGSTR3B",
			Handler:    _GSTR3BService_SaveGSTR3B_Handler,
		},
		{
			MethodName: "SubmitGSTR3B",
			Handler:    _GSTR3BService_SubmitGSTR3B_Handler,
		},
		{
			MethodName: "FileGSTR3B",
			Handler:    _GSTR3BService_FileGSTR3B_Handler,
		},
		{
			MethodName: "GetGSTR3BStatus",
			Handler:    _GSTR3BService_GetGSTR3BStatus_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "internal/api/protobufs/gstr3b.proto",
}
