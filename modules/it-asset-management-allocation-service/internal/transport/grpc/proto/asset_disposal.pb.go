// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v6.30.0--rc2
// source: asset_disposal.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type DecommissionAssetRequest struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	AssetId          string                 `protobuf:"bytes,1,opt,name=asset_id,json=assetId,proto3" json:"asset_id,omitempty"`
	Reason           string                 `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
	DecommissionDate *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=decommission_date,json=decommissionDate,proto3" json:"decommission_date,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *DecommissionAssetRequest) Reset() {
	*x = DecommissionAssetRequest{}
	mi := &file_asset_disposal_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DecommissionAssetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DecommissionAssetRequest) ProtoMessage() {}

func (x *DecommissionAssetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_asset_disposal_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DecommissionAssetRequest.ProtoReflect.Descriptor instead.
func (*DecommissionAssetRequest) Descriptor() ([]byte, []int) {
	return file_asset_disposal_proto_rawDescGZIP(), []int{0}
}

func (x *DecommissionAssetRequest) GetAssetId() string {
	if x != nil {
		return x.AssetId
	}
	return ""
}

func (x *DecommissionAssetRequest) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *DecommissionAssetRequest) GetDecommissionDate() *timestamppb.Timestamp {
	if x != nil {
		return x.DecommissionDate
	}
	return nil
}

type DecommissionResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DecommissionResponse) Reset() {
	*x = DecommissionResponse{}
	mi := &file_asset_disposal_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DecommissionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DecommissionResponse) ProtoMessage() {}

func (x *DecommissionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_asset_disposal_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DecommissionResponse.ProtoReflect.Descriptor instead.
func (*DecommissionResponse) Descriptor() ([]byte, []int) {
	return file_asset_disposal_proto_rawDescGZIP(), []int{1}
}

func (x *DecommissionResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_asset_disposal_proto protoreflect.FileDescriptor

var file_asset_disposal_proto_rawDesc = string([]byte{
	0x0a, 0x14, 0x61, 0x73, 0x73, 0x65, 0x74, 0x5f, 0x64, 0x69, 0x73, 0x70, 0x6f, 0x73, 0x61, 0x6c,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x64, 0x69, 0x73, 0x70, 0x6f, 0x73, 0x61, 0x6c,
	0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x96, 0x01, 0x0a, 0x18, 0x44, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19,
	0x0a, 0x08, 0x61, 0x73, 0x73, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x61, 0x73, 0x73, 0x65, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x61,
	0x73, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f,
	0x6e, 0x12, 0x47, 0x0a, 0x11, 0x64, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x10, 0x64, 0x65, 0x63, 0x6f, 0x6d, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x65, 0x22, 0x30, 0x0a, 0x14, 0x44, 0x65,
	0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x32, 0x6a, 0x0a, 0x0f,
	0x44, 0x69, 0x73, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x57, 0x0a, 0x11, 0x44, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x41,
	0x73, 0x73, 0x65, 0x74, 0x12, 0x22, 0x2e, 0x64, 0x69, 0x73, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x2e,
	0x44, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x41, 0x73, 0x73, 0x65,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x64, 0x69, 0x73, 0x70, 0x6f,
	0x73, 0x61, 0x6c, 0x2e, 0x44, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x08, 0x5a, 0x06, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_asset_disposal_proto_rawDescOnce sync.Once
	file_asset_disposal_proto_rawDescData []byte
)

func file_asset_disposal_proto_rawDescGZIP() []byte {
	file_asset_disposal_proto_rawDescOnce.Do(func() {
		file_asset_disposal_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_asset_disposal_proto_rawDesc), len(file_asset_disposal_proto_rawDesc)))
	})
	return file_asset_disposal_proto_rawDescData
}

var file_asset_disposal_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_asset_disposal_proto_goTypes = []any{
	(*DecommissionAssetRequest)(nil), // 0: disposal.DecommissionAssetRequest
	(*DecommissionResponse)(nil),     // 1: disposal.DecommissionResponse
	(*timestamppb.Timestamp)(nil),    // 2: google.protobuf.Timestamp
}
var file_asset_disposal_proto_depIdxs = []int32{
	2, // 0: disposal.DecommissionAssetRequest.decommission_date:type_name -> google.protobuf.Timestamp
	0, // 1: disposal.DisposalService.DecommissionAsset:input_type -> disposal.DecommissionAssetRequest
	1, // 2: disposal.DisposalService.DecommissionAsset:output_type -> disposal.DecommissionResponse
	2, // [2:3] is the sub-list for method output_type
	1, // [1:2] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_asset_disposal_proto_init() }
func file_asset_disposal_proto_init() {
	if File_asset_disposal_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_asset_disposal_proto_rawDesc), len(file_asset_disposal_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_asset_disposal_proto_goTypes,
		DependencyIndexes: file_asset_disposal_proto_depIdxs,
		MessageInfos:      file_asset_disposal_proto_msgTypes,
	}.Build()
	File_asset_disposal_proto = out.File
	file_asset_disposal_proto_goTypes = nil
	file_asset_disposal_proto_depIdxs = nil
}
