// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        v5.28.2
// source: grpc/opportunity.proto

package opportunitypb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Opportunity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          uint32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name        *wrapperspb.StringValue `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description *wrapperspb.StringValue `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Stage       *wrapperspb.StringValue `protobuf:"bytes,4,opt,name=stage,proto3" json:"stage,omitempty"`
	Amount      *wrapperspb.DoubleValue `protobuf:"bytes,5,opt,name=amount,proto3" json:"amount,omitempty"`
	CloseDate   *wrapperspb.StringValue `protobuf:"bytes,6,opt,name=close_date,json=closeDate,proto3" json:"close_date,omitempty"`
	Probability *wrapperspb.DoubleValue `protobuf:"bytes,7,opt,name=probability,proto3" json:"probability,omitempty"`
	LeadId      uint32                  `protobuf:"varint,8,opt,name=lead_id,json=leadId,proto3" json:"lead_id,omitempty"`
	AccountId   uint32                  `protobuf:"varint,9,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	OwnerId     uint32                  `protobuf:"varint,10,opt,name=owner_id,json=ownerId,proto3" json:"owner_id,omitempty"`
}

func (x *Opportunity) Reset() {
	*x = Opportunity{}
	mi := &file_grpc_opportunity_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Opportunity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Opportunity) ProtoMessage() {}

func (x *Opportunity) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_opportunity_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Opportunity.ProtoReflect.Descriptor instead.
func (*Opportunity) Descriptor() ([]byte, []int) {
	return file_grpc_opportunity_proto_rawDescGZIP(), []int{0}
}

func (x *Opportunity) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Opportunity) GetName() *wrapperspb.StringValue {
	if x != nil {
		return x.Name
	}
	return nil
}

func (x *Opportunity) GetDescription() *wrapperspb.StringValue {
	if x != nil {
		return x.Description
	}
	return nil
}

func (x *Opportunity) GetStage() *wrapperspb.StringValue {
	if x != nil {
		return x.Stage
	}
	return nil
}

func (x *Opportunity) GetAmount() *wrapperspb.DoubleValue {
	if x != nil {
		return x.Amount
	}
	return nil
}

func (x *Opportunity) GetCloseDate() *wrapperspb.StringValue {
	if x != nil {
		return x.CloseDate
	}
	return nil
}

func (x *Opportunity) GetProbability() *wrapperspb.DoubleValue {
	if x != nil {
		return x.Probability
	}
	return nil
}

func (x *Opportunity) GetLeadId() uint32 {
	if x != nil {
		return x.LeadId
	}
	return 0
}

func (x *Opportunity) GetAccountId() uint32 {
	if x != nil {
		return x.AccountId
	}
	return 0
}

func (x *Opportunity) GetOwnerId() uint32 {
	if x != nil {
		return x.OwnerId
	}
	return 0
}

type CreateOpportunityRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Opportunity *Opportunity `protobuf:"bytes,1,opt,name=opportunity,proto3" json:"opportunity,omitempty"`
}

func (x *CreateOpportunityRequest) Reset() {
	*x = CreateOpportunityRequest{}
	mi := &file_grpc_opportunity_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateOpportunityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateOpportunityRequest) ProtoMessage() {}

func (x *CreateOpportunityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_opportunity_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateOpportunityRequest.ProtoReflect.Descriptor instead.
func (*CreateOpportunityRequest) Descriptor() ([]byte, []int) {
	return file_grpc_opportunity_proto_rawDescGZIP(), []int{1}
}

func (x *CreateOpportunityRequest) GetOpportunity() *Opportunity {
	if x != nil {
		return x.Opportunity
	}
	return nil
}

type CreateOpportunityResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Opportunity *Opportunity `protobuf:"bytes,1,opt,name=opportunity,proto3" json:"opportunity,omitempty"`
}

func (x *CreateOpportunityResponse) Reset() {
	*x = CreateOpportunityResponse{}
	mi := &file_grpc_opportunity_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateOpportunityResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateOpportunityResponse) ProtoMessage() {}

func (x *CreateOpportunityResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_opportunity_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateOpportunityResponse.ProtoReflect.Descriptor instead.
func (*CreateOpportunityResponse) Descriptor() ([]byte, []int) {
	return file_grpc_opportunity_proto_rawDescGZIP(), []int{2}
}

func (x *CreateOpportunityResponse) GetOpportunity() *Opportunity {
	if x != nil {
		return x.Opportunity
	}
	return nil
}

type GetOpportunityRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetOpportunityRequest) Reset() {
	*x = GetOpportunityRequest{}
	mi := &file_grpc_opportunity_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetOpportunityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOpportunityRequest) ProtoMessage() {}

func (x *GetOpportunityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_opportunity_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOpportunityRequest.ProtoReflect.Descriptor instead.
func (*GetOpportunityRequest) Descriptor() ([]byte, []int) {
	return file_grpc_opportunity_proto_rawDescGZIP(), []int{3}
}

func (x *GetOpportunityRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetOpportunityResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Opportunity *Opportunity `protobuf:"bytes,1,opt,name=opportunity,proto3" json:"opportunity,omitempty"`
}

func (x *GetOpportunityResponse) Reset() {
	*x = GetOpportunityResponse{}
	mi := &file_grpc_opportunity_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetOpportunityResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOpportunityResponse) ProtoMessage() {}

func (x *GetOpportunityResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_opportunity_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOpportunityResponse.ProtoReflect.Descriptor instead.
func (*GetOpportunityResponse) Descriptor() ([]byte, []int) {
	return file_grpc_opportunity_proto_rawDescGZIP(), []int{4}
}

func (x *GetOpportunityResponse) GetOpportunity() *Opportunity {
	if x != nil {
		return x.Opportunity
	}
	return nil
}

type UpdateOpportunityRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Opportunity *Opportunity `protobuf:"bytes,1,opt,name=opportunity,proto3" json:"opportunity,omitempty"`
}

func (x *UpdateOpportunityRequest) Reset() {
	*x = UpdateOpportunityRequest{}
	mi := &file_grpc_opportunity_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateOpportunityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateOpportunityRequest) ProtoMessage() {}

func (x *UpdateOpportunityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_opportunity_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateOpportunityRequest.ProtoReflect.Descriptor instead.
func (*UpdateOpportunityRequest) Descriptor() ([]byte, []int) {
	return file_grpc_opportunity_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateOpportunityRequest) GetOpportunity() *Opportunity {
	if x != nil {
		return x.Opportunity
	}
	return nil
}

type UpdateOpportunityResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Opportunity *Opportunity `protobuf:"bytes,1,opt,name=opportunity,proto3" json:"opportunity,omitempty"`
}

func (x *UpdateOpportunityResponse) Reset() {
	*x = UpdateOpportunityResponse{}
	mi := &file_grpc_opportunity_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateOpportunityResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateOpportunityResponse) ProtoMessage() {}

func (x *UpdateOpportunityResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_opportunity_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateOpportunityResponse.ProtoReflect.Descriptor instead.
func (*UpdateOpportunityResponse) Descriptor() ([]byte, []int) {
	return file_grpc_opportunity_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateOpportunityResponse) GetOpportunity() *Opportunity {
	if x != nil {
		return x.Opportunity
	}
	return nil
}

type DeleteOpportunityRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteOpportunityRequest) Reset() {
	*x = DeleteOpportunityRequest{}
	mi := &file_grpc_opportunity_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteOpportunityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteOpportunityRequest) ProtoMessage() {}

func (x *DeleteOpportunityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_opportunity_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteOpportunityRequest.ProtoReflect.Descriptor instead.
func (*DeleteOpportunityRequest) Descriptor() ([]byte, []int) {
	return file_grpc_opportunity_proto_rawDescGZIP(), []int{7}
}

func (x *DeleteOpportunityRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DeleteOpportunityResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *DeleteOpportunityResponse) Reset() {
	*x = DeleteOpportunityResponse{}
	mi := &file_grpc_opportunity_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteOpportunityResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteOpportunityResponse) ProtoMessage() {}

func (x *DeleteOpportunityResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_opportunity_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteOpportunityResponse.ProtoReflect.Descriptor instead.
func (*DeleteOpportunityResponse) Descriptor() ([]byte, []int) {
	return file_grpc_opportunity_proto_rawDescGZIP(), []int{8}
}

func (x *DeleteOpportunityResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type ListOpportunitiesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OwnerId uint32 `protobuf:"varint,1,opt,name=owner_id,json=ownerId,proto3" json:"owner_id,omitempty"` // Optional filter
}

func (x *ListOpportunitiesRequest) Reset() {
	*x = ListOpportunitiesRequest{}
	mi := &file_grpc_opportunity_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListOpportunitiesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListOpportunitiesRequest) ProtoMessage() {}

func (x *ListOpportunitiesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_opportunity_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListOpportunitiesRequest.ProtoReflect.Descriptor instead.
func (*ListOpportunitiesRequest) Descriptor() ([]byte, []int) {
	return file_grpc_opportunity_proto_rawDescGZIP(), []int{9}
}

func (x *ListOpportunitiesRequest) GetOwnerId() uint32 {
	if x != nil {
		return x.OwnerId
	}
	return 0
}

type ListOpportunitiesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Opportunities []*Opportunity `protobuf:"bytes,1,rep,name=opportunities,proto3" json:"opportunities,omitempty"`
}

func (x *ListOpportunitiesResponse) Reset() {
	*x = ListOpportunitiesResponse{}
	mi := &file_grpc_opportunity_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListOpportunitiesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListOpportunitiesResponse) ProtoMessage() {}

func (x *ListOpportunitiesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_opportunity_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListOpportunitiesResponse.ProtoReflect.Descriptor instead.
func (*ListOpportunitiesResponse) Descriptor() ([]byte, []int) {
	return file_grpc_opportunity_proto_rawDescGZIP(), []int{10}
}

func (x *ListOpportunitiesResponse) GetOpportunities() []*Opportunity {
	if x != nil {
		return x.Opportunities
	}
	return nil
}

var File_grpc_opportunity_proto protoreflect.FileDescriptor

var file_grpc_opportunity_proto_rawDesc = []byte{
	0x0a, 0x16, 0x67, 0x72, 0x70, 0x63, 0x2f, 0x6f, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x75, 0x6e, 0x69,
	0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0d, 0x6f, 0x70, 0x70, 0x6f, 0x72, 0x74,
	0x75, 0x6e, 0x69, 0x74, 0x79, 0x70, 0x62, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xc9, 0x03, 0x0a, 0x0b, 0x4f, 0x70, 0x70, 0x6f,
	0x72, 0x74, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x30, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x3e, 0x0a, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x32, 0x0a, 0x05, 0x73, 0x74, 0x61,
	0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x67, 0x65, 0x12, 0x34, 0x0a,
	0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x44, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x06, 0x61, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x3b, 0x0a, 0x0a, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x5f, 0x64, 0x61, 0x74,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x09, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x44, 0x61, 0x74, 0x65,
	0x12, 0x3e, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x62, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x62, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79,
	0x12, 0x17, 0x0a, 0x07, 0x6c, 0x65, 0x61, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x06, 0x6c, 0x65, 0x61, 0x64, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x77, 0x6e, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x6f, 0x77, 0x6e, 0x65,
	0x72, 0x49, 0x64, 0x22, 0x58, 0x0a, 0x18, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x70, 0x70,
	0x6f, 0x72, 0x74, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x3c, 0x0a, 0x0b, 0x6f, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6f, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x75, 0x6e, 0x69,
	0x74, 0x79, 0x70, 0x62, 0x2e, 0x4f, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x75, 0x6e, 0x69, 0x74, 0x79,
	0x52, 0x0b, 0x6f, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x22, 0x59, 0x0a,
	0x19, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x75, 0x6e, 0x69,
	0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3c, 0x0a, 0x0b, 0x6f, 0x70,
	0x70, 0x6f, 0x72, 0x74, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x6f, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x70, 0x62, 0x2e,
	0x4f, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x52, 0x0b, 0x6f, 0x70, 0x70,
	0x6f, 0x72, 0x74, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x22, 0x27, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x4f,
	0x70, 0x70, 0x6f, 0x72, 0x74, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69,
	0x64, 0x22, 0x56, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x4f, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x75, 0x6e,
	0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3c, 0x0a, 0x0b, 0x6f,
	0x70, 0x70, 0x6f, 0x72, 0x74, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x6f, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x70, 0x62,
	0x2e, 0x4f, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x52, 0x0b, 0x6f, 0x70,
	0x70, 0x6f, 0x72, 0x74, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x22, 0x58, 0x0a, 0x18, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x4f, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3c, 0x0a, 0x0b, 0x6f, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x75,
	0x6e, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6f, 0x70, 0x70,
	0x6f, 0x72, 0x74, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x70, 0x62, 0x2e, 0x4f, 0x70, 0x70, 0x6f, 0x72,
	0x74, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x52, 0x0b, 0x6f, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x75, 0x6e,
	0x69, 0x74, 0x79, 0x22, 0x59, 0x0a, 0x19, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x70, 0x70,
	0x6f, 0x72, 0x74, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x3c, 0x0a, 0x0b, 0x6f, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6f, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x75, 0x6e,
	0x69, 0x74, 0x79, 0x70, 0x62, 0x2e, 0x4f, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x75, 0x6e, 0x69, 0x74,
	0x79, 0x52, 0x0b, 0x6f, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x22, 0x2a,
	0x0a, 0x18, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x75, 0x6e,
	0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x22, 0x35, 0x0a, 0x19, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x4f, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x22, 0x35, 0x0a, 0x18, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x75,
	0x6e, 0x69, 0x74, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a,
	0x08, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x07, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x22, 0x5d, 0x0a, 0x19, 0x4c, 0x69, 0x73, 0x74,
	0x4f, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x75, 0x6e, 0x69, 0x74, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x0d, 0x6f, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x75,
	0x6e, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6f,
	0x70, 0x70, 0x6f, 0x72, 0x74, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x70, 0x62, 0x2e, 0x4f, 0x70, 0x70,
	0x6f, 0x72, 0x74, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x52, 0x0d, 0x6f, 0x70, 0x70, 0x6f, 0x72, 0x74,
	0x75, 0x6e, 0x69, 0x74, 0x69, 0x65, 0x73, 0x32, 0x93, 0x04, 0x0a, 0x12, 0x4f, 0x70, 0x70, 0x6f,
	0x72, 0x74, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x66,
	0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x75, 0x6e,
	0x69, 0x74, 0x79, 0x12, 0x27, 0x2e, 0x6f, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x75, 0x6e, 0x69, 0x74,
	0x79, 0x70, 0x62, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x70, 0x70, 0x6f, 0x72, 0x74,
	0x75, 0x6e, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x6f,
	0x70, 0x70, 0x6f, 0x72, 0x74, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x70, 0x62, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x4f, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5d, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x4f, 0x70, 0x70,
	0x6f, 0x72, 0x74, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x12, 0x24, 0x2e, 0x6f, 0x70, 0x70, 0x6f, 0x72,
	0x74, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x70, 0x70, 0x6f,
	0x72, 0x74, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25,
	0x2e, 0x6f, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x70, 0x62, 0x2e, 0x47,
	0x65, 0x74, 0x4f, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x66, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f,
	0x70, 0x70, 0x6f, 0x72, 0x74, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x12, 0x27, 0x2e, 0x6f, 0x70, 0x70,
	0x6f, 0x72, 0x74, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x70, 0x62, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x4f, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x6f, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x75, 0x6e, 0x69, 0x74,
	0x79, 0x70, 0x62, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x70, 0x70, 0x6f, 0x72, 0x74,
	0x75, 0x6e, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x66, 0x0a,
	0x11, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x75, 0x6e, 0x69,
	0x74, 0x79, 0x12, 0x27, 0x2e, 0x6f, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x75, 0x6e, 0x69, 0x74, 0x79,
	0x70, 0x62, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x75,
	0x6e, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x6f, 0x70,
	0x70, 0x6f, 0x72, 0x74, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x4f, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x66, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x70, 0x70,
	0x6f, 0x72, 0x74, 0x75, 0x6e, 0x69, 0x74, 0x69, 0x65, 0x73, 0x12, 0x27, 0x2e, 0x6f, 0x70, 0x70,
	0x6f, 0x72, 0x74, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x70, 0x62, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4f,
	0x70, 0x70, 0x6f, 0x72, 0x74, 0x75, 0x6e, 0x69, 0x74, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x6f, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x75, 0x6e, 0x69, 0x74,
	0x79, 0x70, 0x62, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x75, 0x6e,
	0x69, 0x74, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x15, 0x5a,
	0x13, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x2f, 0x6f, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x75, 0x6e, 0x69,
	0x74, 0x79, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_grpc_opportunity_proto_rawDescOnce sync.Once
	file_grpc_opportunity_proto_rawDescData = file_grpc_opportunity_proto_rawDesc
)

func file_grpc_opportunity_proto_rawDescGZIP() []byte {
	file_grpc_opportunity_proto_rawDescOnce.Do(func() {
		file_grpc_opportunity_proto_rawDescData = protoimpl.X.CompressGZIP(file_grpc_opportunity_proto_rawDescData)
	})
	return file_grpc_opportunity_proto_rawDescData
}

var file_grpc_opportunity_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_grpc_opportunity_proto_goTypes = []any{
	(*Opportunity)(nil),               // 0: opportunitypb.Opportunity
	(*CreateOpportunityRequest)(nil),  // 1: opportunitypb.CreateOpportunityRequest
	(*CreateOpportunityResponse)(nil), // 2: opportunitypb.CreateOpportunityResponse
	(*GetOpportunityRequest)(nil),     // 3: opportunitypb.GetOpportunityRequest
	(*GetOpportunityResponse)(nil),    // 4: opportunitypb.GetOpportunityResponse
	(*UpdateOpportunityRequest)(nil),  // 5: opportunitypb.UpdateOpportunityRequest
	(*UpdateOpportunityResponse)(nil), // 6: opportunitypb.UpdateOpportunityResponse
	(*DeleteOpportunityRequest)(nil),  // 7: opportunitypb.DeleteOpportunityRequest
	(*DeleteOpportunityResponse)(nil), // 8: opportunitypb.DeleteOpportunityResponse
	(*ListOpportunitiesRequest)(nil),  // 9: opportunitypb.ListOpportunitiesRequest
	(*ListOpportunitiesResponse)(nil), // 10: opportunitypb.ListOpportunitiesResponse
	(*wrapperspb.StringValue)(nil),    // 11: google.protobuf.StringValue
	(*wrapperspb.DoubleValue)(nil),    // 12: google.protobuf.DoubleValue
}
var file_grpc_opportunity_proto_depIdxs = []int32{
	11, // 0: opportunitypb.Opportunity.name:type_name -> google.protobuf.StringValue
	11, // 1: opportunitypb.Opportunity.description:type_name -> google.protobuf.StringValue
	11, // 2: opportunitypb.Opportunity.stage:type_name -> google.protobuf.StringValue
	12, // 3: opportunitypb.Opportunity.amount:type_name -> google.protobuf.DoubleValue
	11, // 4: opportunitypb.Opportunity.close_date:type_name -> google.protobuf.StringValue
	12, // 5: opportunitypb.Opportunity.probability:type_name -> google.protobuf.DoubleValue
	0,  // 6: opportunitypb.CreateOpportunityRequest.opportunity:type_name -> opportunitypb.Opportunity
	0,  // 7: opportunitypb.CreateOpportunityResponse.opportunity:type_name -> opportunitypb.Opportunity
	0,  // 8: opportunitypb.GetOpportunityResponse.opportunity:type_name -> opportunitypb.Opportunity
	0,  // 9: opportunitypb.UpdateOpportunityRequest.opportunity:type_name -> opportunitypb.Opportunity
	0,  // 10: opportunitypb.UpdateOpportunityResponse.opportunity:type_name -> opportunitypb.Opportunity
	0,  // 11: opportunitypb.ListOpportunitiesResponse.opportunities:type_name -> opportunitypb.Opportunity
	1,  // 12: opportunitypb.OpportunityService.CreateOpportunity:input_type -> opportunitypb.CreateOpportunityRequest
	3,  // 13: opportunitypb.OpportunityService.GetOpportunity:input_type -> opportunitypb.GetOpportunityRequest
	5,  // 14: opportunitypb.OpportunityService.UpdateOpportunity:input_type -> opportunitypb.UpdateOpportunityRequest
	7,  // 15: opportunitypb.OpportunityService.DeleteOpportunity:input_type -> opportunitypb.DeleteOpportunityRequest
	9,  // 16: opportunitypb.OpportunityService.ListOpportunities:input_type -> opportunitypb.ListOpportunitiesRequest
	2,  // 17: opportunitypb.OpportunityService.CreateOpportunity:output_type -> opportunitypb.CreateOpportunityResponse
	4,  // 18: opportunitypb.OpportunityService.GetOpportunity:output_type -> opportunitypb.GetOpportunityResponse
	6,  // 19: opportunitypb.OpportunityService.UpdateOpportunity:output_type -> opportunitypb.UpdateOpportunityResponse
	8,  // 20: opportunitypb.OpportunityService.DeleteOpportunity:output_type -> opportunitypb.DeleteOpportunityResponse
	10, // 21: opportunitypb.OpportunityService.ListOpportunities:output_type -> opportunitypb.ListOpportunitiesResponse
	17, // [17:22] is the sub-list for method output_type
	12, // [12:17] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_grpc_opportunity_proto_init() }
func file_grpc_opportunity_proto_init() {
	if File_grpc_opportunity_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_grpc_opportunity_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_grpc_opportunity_proto_goTypes,
		DependencyIndexes: file_grpc_opportunity_proto_depIdxs,
		MessageInfos:      file_grpc_opportunity_proto_msgTypes,
	}.Build()
	File_grpc_opportunity_proto = out.File
	file_grpc_opportunity_proto_rawDesc = nil
	file_grpc_opportunity_proto_goTypes = nil
	file_grpc_opportunity_proto_depIdxs = nil
}
