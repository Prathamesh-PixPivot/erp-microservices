syntax = "proto3";

import "google/protobuf/timestamp.proto";

package vms;

option go_package = "/vms_pb";

// --------------- Vendor Management Service ---------------
service VendorService {
    rpc CreateVendor(CreateVendorRequest) returns (VendorResponse);
    rpc GetVendorByID(GetVendorByIDRequest) returns (VendorResponse);
    rpc UpdateVendor(UpdateVendorRequest) returns (VendorResponse);
    rpc DeleteVendor(DeleteVendorRequest) returns (DeleteVendorResponse);
    rpc SearchVendors(SearchVendorsRequest) returns (SearchVendorsResponse);
}

// --------------- Vendor Rating & Review System ---------------
service VendorRatingService {
    rpc SubmitVendorRating(SubmitVendorRatingRequest) returns (VendorRatingResponse);
    rpc GetVendorRatings(GetVendorRatingsRequest) returns (VendorRatingsResponse);
}

// --------------- Purchase Order Service ---------------
service PurchaseOrderService {
    rpc CreatePurchaseOrder(CreatePurchaseOrderRequest) returns (PurchaseOrderResponse);
    rpc GetPurchaseOrderByID(GetPurchaseOrderByIDRequest) returns (PurchaseOrderResponse);
    rpc UpdatePurchaseOrder(UpdatePurchaseOrderRequest) returns (PurchaseOrderResponse);
    rpc DeletePurchaseOrder(DeletePurchaseOrderRequest) returns (DeletePurchaseOrderResponse);
    rpc TrackOrderStatus(TrackOrderStatusRequest) returns (PurchaseOrderResponse);
    rpc ReceiveGoods(ReceiveGoodsRequest) returns (ReceiveGoodsResponse);
}

// --------------- Automated PO Generation ---------------
service AutoPOGenerationService {
    rpc GeneratePurchaseOrder(GeneratePORequest) returns (GeneratePOResponse);
}

// --------------- Multi-Level PO Approval Workflow ---------------
service ApprovalService {
    rpc RequestApproval(ApprovalRequest) returns (ApprovalResponse);
    rpc GetApprovalStatus(GetApprovalStatusRequest) returns (ApprovalResponse);
}

// --------------- Vendor Performance Management ---------------
service PerformanceService {
    rpc RecordPerformance(RecordPerformanceRequest) returns (PerformanceResponse);
    rpc GetPerformanceByID(GetPerformanceByIDRequest) returns (PerformanceResponse);
    rpc UpdatePerformance(UpdatePerformanceRequest) returns (PerformanceResponse);
    rpc DeletePerformance(DeletePerformanceRequest) returns (DeletePerformanceResponse);
    rpc ListVendorAudits(ListVendorAuditsRequest) returns (ListVendorAuditsResponse);
}

// --------------- Goods Inspection & Quality Assurance ---------------
service InspectionService {
    rpc InspectReceivedGoods(InspectGoodsRequest) returns (InspectGoodsResponse);
}

// --------------- Payment & Invoice Matching ---------------
service PaymentService {
    rpc ProcessInvoice(ProcessInvoiceRequest) returns (PaymentResponse);
    rpc UpdatePaymentStatus(UpdatePaymentStatusRequest) returns (PaymentResponse);
    rpc GetPaymentByID(GetPaymentByIDRequest) returns (PaymentResponse);
    rpc DeletePayment(DeletePaymentRequest) returns (DeletePaymentResponse);
    rpc MatchInvoiceWithPO(MatchInvoiceRequest) returns (MatchInvoiceResponse);
}

// --------------- Vendor Blacklist & Fraud Prevention ---------------
service VendorBlacklistService {
    rpc BlacklistVendor(BlacklistVendorRequest) returns (BlacklistVendorResponse);
    rpc GetBlacklistedVendors(GetBlacklistedVendorsRequest) returns (BlacklistedVendorsResponse);
}

// --------------- Audit Logging for Vendor Transactions ---------------
service AuditLoggingService {
    rpc LogVendorTransaction(LogVendorTransactionRequest) returns (AuditLogResponse);
}

// ---------------- Vendor Messages ----------------
message Vendor {
    string id = 1;
    string name = 2;
    string category = 3;
    string service = 4;
    string industry = 5;
    string gstin = 6;
    string certifications = 7;
    string licenses = 8;
    bool is_compliant = 9;
    float performance_score = 10;
    string risk_assessment = 11;
    repeated VendorContact contacts = 12;
    repeated VendorAddress addresses = 13;
}

message VendorContact {
    string name = 1;
    string email = 2;
    string phone = 3;
}

message VendorAddress {
    string address_line1 = 1;
    string address_line2 = 2;
    string city = 3;
    string state = 4;
    string zip_code = 5;
    string country = 6;
}

// ---------------- Vendor Rating Messages ----------------
message SubmitVendorRatingRequest {
    string vendor_id = 1;
    float rating = 2;
    string feedback = 3;
}

message VendorRatingResponse {
    bool success = 1;
}

message GetVendorRatingsRequest {
    string vendor_id = 1;
}

message VendorRatingsResponse {
    repeated float ratings = 1;
}

// ---------------- Auto PO Generation Messages ----------------
message GeneratePORequest {
    string vendor_id = 1;
}

message GeneratePOResponse {
    bool success = 1;
}

// ---------------- Goods Inspection Messages ----------------
message InspectGoodsRequest {
    string purchase_order_id = 1;
    string inspection_notes = 2;
}

message InspectGoodsResponse {
    bool success = 1;
}

// ---------------- Vendor Blacklist Messages ----------------
message BlacklistVendorRequest {
    string vendor_id = 1;
    string reason = 2;
}

message BlacklistVendorResponse {
    bool success = 1;
}

message GetBlacklistedVendorsRequest {}

message BlacklistedVendorsResponse {
    repeated string vendor_ids = 1;
}

// ---------------- Audit Logging Messages ----------------
message LogVendorTransactionRequest {
    string vendor_id = 1;
    string action = 2; // "CREATE_PO", "APPROVE_CONTRACT", "BLACKLIST_VENDOR"
    google.protobuf.Timestamp timestamp = 3;
}

message AuditLogResponse {
    bool success = 1;
}

// ---------------- General Response Messages ----------------
message DeleteResponse {
    string message = 1;
}
